define(['dart_sdk'], function(dart_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const typed_data = dart_sdk.typed_data;
  const _interceptors = dart_sdk._interceptors;
  const math = dart_sdk.math;
  const collection = dart_sdk.collection;
  const html = dart_sdk.html;
  const async = dart_sdk.async;
  const _js_helper = dart_sdk._js_helper;
  const js_util = dart_sdk.js_util;
  const convert = dart_sdk.convert;
  const developer = dart_sdk.developer;
  const js = dart_sdk.js;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const ui = Object.create(dart.library);
  const src__engine = Object.create(dart.library);
  const $length = dartx.length;
  const $modulo = dartx['%'];
  const $isNotEmpty = dartx.isNotEmpty;
  const $isEmpty = dartx.isEmpty;
  const $last = dartx.last;
  const $add = dartx.add;
  const $_get = dartx._get;
  const $isNegative = dartx.isNegative;
  const $abs = dartx.abs;
  const $toInt = dartx.toInt;
  const $first = dartx.first;
  const $addAll = dartx.addAll;
  const $single = dartx.single;
  const $clear = dartx.clear;
  const $toDouble = dartx.toDouble;
  const $join = dartx.join;
  const $iterator = dartx.iterator;
  const $position = dartx.position;
  const $ceil = dartx.ceil;
  const $width = dartx.width;
  const $height = dartx.height;
  const $context2D = dartx.context2D;
  const $append = dartx.append;
  const $remove = dartx.remove;
  const $transformOrigin = dartx.transformOrigin;
  const $transform = dartx.transform;
  const $floor = dartx.floor;
  const $clone = dartx.clone;
  const $drawImageScaledFromSource = dartx.drawImageScaledFromSource;
  const $fillText = dartx.fillText;
  const $whiteSpace = dartx.whiteSpace;
  const $overflow = dartx.overflow;
  const $textOverflow = dartx.textOverflow;
  const $overflowY = dartx.overflowY;
  const $removeLast = dartx.removeLast;
  const $_set = dartx._set;
  const $toList = dartx.toList;
  const $map = dartx.map;
  const $console = dartx.console;
  const $compareTo = dartx.compareTo;
  const $sort = dartx.sort;
  const $putIfAbsent = dartx.putIfAbsent;
  const $removeAt = dartx.removeAt;
  const $left = dartx.left;
  const $top = dartx.top;
  const $zIndex = dartx.zIndex;
  const $opacity = dartx.opacity;
  const $querySelectorAll = dartx.querySelectorAll;
  const $forEach = dartx.forEach;
  const $values = dartx.values;
  const $fold = dartx.fold;
  const $toStringAsFixed = dartx.toStringAsFixed;
  const $runtimeType = dartx.runtimeType;
  const $setAttribute = dartx.setAttribute;
  const $times = dartx['*'];
  const $toLowerCase = dartx.toLowerCase;
  const $hashCode = dartx.hashCode;
  const $parent = dartx.parent;
  const $boxShadow = dartx.boxShadow;
  const $borderTopLeftRadius = dartx.borderTopLeftRadius;
  const $borderTopRightRadius = dartx.borderTopRightRadius;
  const $borderBottomRightRadius = dartx.borderBottomRightRadius;
  const $borderBottomLeftRadius = dartx.borderBottomLeftRadius;
  const $backgroundColor = dartx.backgroundColor;
  const $borderRadius = dartx.borderRadius;
  const $right = dartx.right;
  const $padding = dartx.padding;
  const $color = dartx.color;
  const $fontWeight = dartx.fontWeight;
  const $textDecoration = dartx.textDecoration;
  const $text = dartx.text;
  const $appendText = dartx.appendText;
  const $addEventListener = dartx.addEventListener;
  const $isFinite = dartx.isFinite;
  const $truncate = dartx.truncate;
  const $isNaN = dartx.isNaN;
  const $clamp = dartx.clamp;
  const $round = dartx.round;
  const $rightShift = dartx['>>'];
  const $toString = dartx.toString;
  const $toRadixString = dartx.toRadixString;
  const $substring = dartx.substring;
  const $padLeft = dartx.padLeft;
  const $buffer = dartx.buffer;
  const $startsWith = dartx.startsWith;
  const $location = dartx.location;
  const $removeEventListener = dartx.removeEventListener;
  const $pushState = dartx.pushState;
  const $replaceState = dartx.replaceState;
  const $fontSize = dartx.fontSize;
  const $fontStyle = dartx.fontStyle;
  const $fontFamily = dartx.fontFamily;
  const $letterSpacing = dartx.letterSpacing;
  const $wordSpacing = dartx.wordSpacing;
  const $textDecorationColor = dartx.textDecorationColor;
  const $textAlign = dartx.textAlign;
  const $lineHeight = dartx.lineHeight;
  const $direction = dartx.direction;
  const $asUint8List = dartx.asUint8List;
  const $requestAnimationFrame = dartx.requestAnimationFrame;
  const $asByteData = dartx.asByteData;
  const $response = dartx.response;
  const $target = dartx.target;
  const $leftShift = dartx['<<'];
  const $bottom = dartx.bottom;
  const $filter = dartx.filter;
  const $border = dartx.border;
  const $classes = dartx.classes;
  const $createElement = dartx.createElement;
  const $setProperty = dartx.setProperty;
  const $children = dartx.children;
  const $title = dartx.title;
  const $head = dartx.head;
  const $hasAttribute = dartx.hasAttribute;
  const $onResize = dartx.onResize;
  const $singleWhere = dartx.singleWhere;
  const $outerHtml = dartx.outerHtml;
  const $trim = dartx.trim;
  const $state = dartx.state;
  const $backgroundImage = dartx.backgroundImage;
  const $backgroundRepeat = dartx.backgroundRepeat;
  const $backgroundSize = dartx.backgroundSize;
  const $onLoad = dartx.onLoad;
  const $onError = dartx.onError;
  const $codeUnits = dartx.codeUnits;
  const $sublist = dartx.sublist;
  const $client = dartx.client;
  const $deltaX = dartx.deltaX;
  const $deltaY = dartx.deltaY;
  const $deltaMode = dartx.deltaMode;
  const $attributes = dartx.attributes;
  const $touchAction = dartx.touchAction;
  const $scrollTop = dartx.scrollTop;
  const $scrollLeft = dartx.scrollLeft;
  const $overflowX = dartx.overflowX;
  const $outline = dartx.outline;
  const $getAttribute = dartx.getAttribute;
  const $contains = dartx.contains;
  const $containsKey = dartx.containsKey;
  const $offset = dartx.offset;
  const $keys = dartx.keys;
  const $transition = dartx.transition;
  const $load = dartx.load;
  const $visibility = dartx.visibility;
  const $offsetWidth = dartx.offsetWidth;
  const $innerHtml = dartx.innerHtml;
  const $display = dartx.display;
  const $flexDirection = dartx.flexDirection;
  const $alignItems = dartx.alignItems;
  const $margin = dartx.margin;
  const $flex = dartx.flex;
  const $getClientRects = dartx.getClientRects;
  const $removeRange = dartx.removeRange;
  const $codeUnitAt = dartx.codeUnitAt;
  const $font = dartx.font;
  const $animationFrame = dartx.animationFrame;
  const $onBlur = dartx.onBlur;
  const $onSelectionChange = dartx.onSelectionChange;
  const $onInput = dartx.onInput;
  const $isInfinite = dartx.isInfinite;
  let JSArrayOfSubpath = () => (JSArrayOfSubpath = dart.constFn(_interceptors.JSArray$(src__engine.Subpath)))();
  let ListOfSubpath = () => (ListOfSubpath = dart.constFn(core.List$(src__engine.Subpath)))();
  let IteratorOfPathMetric = () => (IteratorOfPathMetric = dart.constFn(core.Iterator$(ui.PathMetric)))();
  let JSArrayOfElement = () => (JSArrayOfElement = dart.constFn(_interceptors.JSArray$(html.Element)))();
  let VoidTobool = () => (VoidTobool = dart.constFn(dart.fnType(core.bool, [])))();
  let JSArrayOf_SaveStackEntry = () => (JSArrayOf_SaveStackEntry = dart.constFn(_interceptors.JSArray$(src__engine._SaveStackEntry)))();
  let ListOf_SaveClipEntry = () => (ListOf_SaveClipEntry = dart.constFn(core.List$(src__engine._SaveClipEntry)))();
  let JSArrayOf_SaveClipEntry = () => (JSArrayOf_SaveClipEntry = dart.constFn(_interceptors.JSArray$(src__engine._SaveClipEntry)))();
  let ListOf_SaveStackEntry = () => (ListOf_SaveStackEntry = dart.constFn(core.List$(src__engine._SaveStackEntry)))();
  let ListOfElement = () => (ListOfElement = dart.constFn(core.List$(html.Element)))();
  let JSArrayOfPersistedContainerSurface = () => (JSArrayOfPersistedContainerSurface = dart.constFn(_interceptors.JSArray$(ui.PersistedContainerSurface)))();
  let PersistedContainerSurfaceToType = () => (PersistedContainerSurfaceToType = dart.constFn(dart.fnType(core.Type, [ui.PersistedContainerSurface])))();
  let IterableOfType = () => (IterableOfType = dart.constFn(core.Iterable$(core.Type)))();
  let _PaintRequestAnd_PaintRequestToint = () => (_PaintRequestAnd_PaintRequestToint = dart.constFn(dart.fnType(core.int, [ui._PaintRequest, ui._PaintRequest])))();
  let JSArrayOf_PaintRequest = () => (JSArrayOf_PaintRequest = dart.constFn(_interceptors.JSArray$(ui._PaintRequest)))();
  let JSArrayOfPersistedSurface = () => (JSArrayOfPersistedSurface = dart.constFn(_interceptors.JSArray$(ui.PersistedSurface)))();
  let JSArrayOfString = () => (JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))();
  let StringToString = () => (StringToString = dart.constFn(dart.fnType(core.String, [core.String])))();
  let IterableOfString = () => (IterableOfString = dart.constFn(core.Iterable$(core.String)))();
  let LinkedMapOfPersistedSurface$_DebugSurfaceStats = () => (LinkedMapOfPersistedSurface$_DebugSurfaceStats = dart.constFn(_js_helper.LinkedMap$(ui.PersistedSurface, ui._DebugSurfaceStats)))();
  let ListOfPersistedContainerSurface = () => (ListOfPersistedContainerSurface = dart.constFn(core.List$(ui.PersistedContainerSurface)))();
  let MapOfPersistedSurface$_DebugSurfaceStats = () => (MapOfPersistedSurface$_DebugSurfaceStats = dart.constFn(core.Map$(ui.PersistedSurface, ui._DebugSurfaceStats)))();
  let JSArrayOfMapOfPersistedSurface$_DebugSurfaceStats = () => (JSArrayOfMapOfPersistedSurface$_DebugSurfaceStats = dart.constFn(_interceptors.JSArray$(MapOfPersistedSurface$_DebugSurfaceStats())))();
  let VoidTo_DebugSurfaceStats = () => (VoidTo_DebugSurfaceStats = dart.constFn(dart.fnType(ui._DebugSurfaceStats, [])))();
  let _DebugSurfaceStatsToNull = () => (_DebugSurfaceStatsToNull = dart.constFn(dart.fnType(core.Null, [ui._DebugSurfaceStats])))();
  let PersistedSurfaceTovoid = () => (PersistedSurfaceTovoid = dart.constFn(dart.fnType(dart.void, [ui.PersistedSurface])))();
  let intAndintToint = () => (intAndintToint = dart.constFn(dart.fnType(core.int, [core.int, core.int])))();
  let CanvasElementToint = () => (CanvasElementToint = dart.constFn(dart.fnType(core.int, [html.CanvasElement])))();
  let ListOfCanvasElement = () => (ListOfCanvasElement = dart.constFn(core.List$(html.CanvasElement)))();
  let IterableOfint = () => (IterableOfint = dart.constFn(core.Iterable$(core.int)))();
  let VoidToNull = () => (VoidToNull = dart.constFn(dart.fnType(core.Null, [])))();
  let SetOfObject = () => (SetOfObject = dart.constFn(core.Set$(core.Object)))();
  let _HashSetOfObject = () => (_HashSetOfObject = dart.constFn(collection._HashSet$(core.Object)))();
  let ListOfPersistedSurface = () => (ListOfPersistedSurface = dart.constFn(core.List$(ui.PersistedSurface)))();
  let JSArrayOfBitmapCanvas = () => (JSArrayOfBitmapCanvas = dart.constFn(_interceptors.JSArray$(src__engine.BitmapCanvas)))();
  let VoidTovoid = () => (VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))();
  let ObjectAnddoubleAnddouble__ToPersistedStandardPicture = () => (ObjectAnddoubleAnddouble__ToPersistedStandardPicture = dart.constFn(dart.fnType(ui.PersistedStandardPicture, [core.Object, core.double, core.double, ui.Picture, core.int])))();
  let EventTovoid = () => (EventTovoid = dart.constFn(dart.fnType(dart.void, [html.Event])))();
  let ListOfColor = () => (ListOfColor = dart.constFn(core.List$(ui.Color)))();
  let ListOfdouble = () => (ListOfdouble = dart.constFn(core.List$(core.double)))();
  let CodecTovoid = () => (CodecTovoid = dart.constFn(dart.fnType(dart.void, [ui.Codec])))();
  let FnToString = () => (FnToString = dart.constFn(dart.fnType(core.String, [CodecTovoid()])))();
  let FrameInfoTovoid = () => (FrameInfoTovoid = dart.constFn(dart.fnType(dart.void, [ui.FrameInfo])))();
  let FutureOfFrameInfo = () => (FutureOfFrameInfo = dart.constFn(async.Future$(ui.FrameInfo)))();
  let CodecToFutureOfFrameInfo = () => (CodecToFutureOfFrameInfo = dart.constFn(dart.fnType(FutureOfFrameInfo(), [ui.Codec])))();
  let JSArrayOfShadow = () => (JSArrayOfShadow = dart.constFn(_interceptors.JSArray$(ui.Shadow)))();
  let ListOfPointerData = () => (ListOfPointerData = dart.constFn(core.List$(ui.PointerData)))();
  let JSArrayOfSemanticsNodeUpdate = () => (JSArrayOfSemanticsNodeUpdate = dart.constFn(_interceptors.JSArray$(src__engine.SemanticsNodeUpdate)))();
  let ListOfSemanticsNodeUpdate = () => (ListOfSemanticsNodeUpdate = dart.constFn(core.List$(src__engine.SemanticsNodeUpdate)))();
  let CompleterOfvoid = () => (CompleterOfvoid = dart.constFn(async.Completer$(dart.void)))();
  let EventToNull = () => (EventToNull = dart.constFn(dart.fnType(core.Null, [html.Event])))();
  let ListOfString = () => (ListOfString = dart.constFn(core.List$(core.String)))();
  let ListOfShadow = () => (ListOfShadow = dart.constFn(core.List$(ui.Shadow)))();
  let JSArrayOfTextBox = () => (JSArrayOfTextBox = dart.constFn(_interceptors.JSArray$(ui.TextBox)))();
  let StringTodouble = () => (StringTodouble = dart.constFn(dart.fnType(core.double, [core.String])))();
  let JSArrayOfint = () => (JSArrayOfint = dart.constFn(_interceptors.JSArray$(core.int)))();
  let VoidTodynamic = () => (VoidTodynamic = dart.constFn(dart.fnType(dart.dynamic, [])))();
  let FutureOfvoid = () => (FutureOfvoid = dart.constFn(async.Future$(dart.void)))();
  let BitmapCanvasTovoid = () => (BitmapCanvasTovoid = dart.constFn(dart.fnType(dart.void, [src__engine.BitmapCanvas])))();
  let voidToNull = () => (voidToNull = dart.constFn(dart.fnType(core.Null, [dart.void])))();
  let FutureOfNull = () => (FutureOfNull = dart.constFn(async.Future$(core.Null)))();
  let ByteDataToNull = () => (ByteDataToNull = dart.constFn(dart.fnType(core.Null, [typed_data.ByteData])))();
  let dynamicToNull = () => (dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))();
  let MapOfString$dynamic = () => (MapOfString$dynamic = dart.constFn(core.Map$(core.String, dart.dynamic)))();
  let ListOfLocale = () => (ListOfLocale = dart.constFn(core.List$(ui.Locale)))();
  let DurationTovoid = () => (DurationTovoid = dart.constFn(dart.fnType(dart.void, [core.Duration])))();
  let PointerDataPacketTovoid = () => (PointerDataPacketTovoid = dart.constFn(dart.fnType(dart.void, [ui.PointerDataPacket])))();
  let intAndSemanticsActionAndByteDataTovoid = () => (intAndSemanticsActionAndByteDataTovoid = dart.constFn(dart.fnType(dart.void, [core.int, ui.SemanticsAction, typed_data.ByteData])))();
  let ByteDataTovoid = () => (ByteDataTovoid = dart.constFn(dart.fnType(dart.void, [typed_data.ByteData])))();
  let StringAndByteDataAndFnTovoid = () => (StringAndByteDataAndFnTovoid = dart.constFn(dart.fnType(dart.void, [core.String, typed_data.ByteData, ByteDataTovoid()])))();
  let JSArrayOfVoidTovoid = () => (JSArrayOfVoidTovoid = dart.constFn(_interceptors.JSArray$(VoidTovoid())))();
  let FutureOfServiceExtensionResponse = () => (FutureOfServiceExtensionResponse = dart.constFn(async.Future$(developer.ServiceExtensionResponse)))();
  let MapOfString$String = () => (MapOfString$String = dart.constFn(core.Map$(core.String, core.String)))();
  let StringAndMapOfString$StringToFutureOfServiceExtensionResponse = () => (StringAndMapOfString$StringToFutureOfServiceExtensionResponse = dart.constFn(dart.fnType(FutureOfServiceExtensionResponse(), [core.String, MapOfString$String()])))();
  let numToNull = () => (numToNull = dart.constFn(dart.fnType(core.Null, [core.num])))();
  let VoidToDateTime = () => (VoidToDateTime = dart.constFn(dart.fnType(core.DateTime, [])))();
  let JSArrayOfLayer = () => (JSArrayOfLayer = dart.constFn(_interceptors.JSArray$(src__engine.Layer)))();
  let ListOfLayer = () => (ListOfLayer = dart.constFn(core.List$(src__engine.Layer)))();
  let JSArrayOfOffset = () => (JSArrayOfOffset = dart.constFn(_interceptors.JSArray$(ui.Offset)))();
  let ListOfConic = () => (ListOfConic = dart.constFn(core.List$(src__engine.Conic)))();
  let JSArrayOf_SaveElementStackEntry = () => (JSArrayOf_SaveElementStackEntry = dart.constFn(_interceptors.JSArray$(src__engine._SaveElementStackEntry)))();
  let ListOf_SaveElementStackEntry = () => (ListOf_SaveElementStackEntry = dart.constFn(core.List$(src__engine._SaveElementStackEntry)))();
  let TimerToNull = () => (TimerToNull = dart.constFn(dart.fnType(core.Null, [async.Timer])))();
  let ElementTobool = () => (ElementTobool = dart.constFn(dart.fnType(core.bool, [html.Element])))();
  let JSArrayOfnum = () => (JSArrayOfnum = dart.constFn(_interceptors.JSArray$(core.num)))();
  let IdentityMapOfString$bool = () => (IdentityMapOfString$bool = dart.constFn(_js_helper.IdentityMap$(core.String, core.bool)))();
  let EventTodynamic = () => (EventTodynamic = dart.constFn(dart.fnType(dart.dynamic, [html.Event])))();
  let JSArrayOfList = () => (JSArrayOfList = dart.constFn(_interceptors.JSArray$(core.List)))();
  let ListOfList = () => (ListOfList = dart.constFn(core.List$(core.List)))();
  let CompleterOfFrameInfo = () => (CompleterOfFrameInfo = dart.constFn(async.Completer$(ui.FrameInfo)))();
  let Uint8ListToNull = () => (Uint8ListToNull = dart.constFn(dart.fnType(core.Null, [typed_data.Uint8List])))();
  let FnToString$ = () => (FnToString$ = dart.constFn(dart.fnType(core.String, [ByteDataTovoid()])))();
  let JSArrayOf_LogMessage = () => (JSArrayOf_LogMessage = dart.constFn(_interceptors.JSArray$(src__engine._LogMessage)))();
  let IdentityMapOfint$bool = () => (IdentityMapOfint$bool = dart.constFn(_js_helper.IdentityMap$(core.int, core.bool)))();
  let StringAndFnToNull = () => (StringAndFnToNull = dart.constFn(dart.fnType(core.Null, [core.String, EventTodynamic()])))();
  let ListOfPointerDataTovoid = () => (ListOfPointerDataTovoid = dart.constFn(dart.fnType(dart.void, [ListOfPointerData()])))();
  let MapOfint$bool = () => (MapOfint$bool = dart.constFn(core.Map$(core.int, core.bool)))();
  let IdentityMapOfString$EventTodynamic = () => (IdentityMapOfString$EventTodynamic = dart.constFn(_js_helper.IdentityMap$(core.String, EventTodynamic())))();
  let WheelEventToNull = () => (WheelEventToNull = dart.constFn(dart.fnType(core.Null, [html.WheelEvent])))();
  let JSArrayOfPointerEvent = () => (JSArrayOfPointerEvent = dart.constFn(_interceptors.JSArray$(html.PointerEvent)))();
  let JSArrayOfPointerData = () => (JSArrayOfPointerData = dart.constFn(_interceptors.JSArray$(ui.PointerData)))();
  let dynamicTovoid = () => (dynamicTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic])))();
  let IdentityMapOfString$int = () => (IdentityMapOfString$int = dart.constFn(_js_helper.IdentityMap$(core.String, core.int)))();
  let JSArrayOfPaintCommand = () => (JSArrayOfPaintCommand = dart.constFn(_interceptors.JSArray$(src__engine.PaintCommand)))();
  let ListOfPaintCommand = () => (ListOfPaintCommand = dart.constFn(core.List$(src__engine.PaintCommand)))();
  let JSArrayOfPathCommand = () => (JSArrayOfPathCommand = dart.constFn(_interceptors.JSArray$(src__engine.PathCommand)))();
  let ListOfPathCommand = () => (ListOfPathCommand = dart.constFn(core.List$(src__engine.PathCommand)))();
  let JSArrayOfRect = () => (JSArrayOfRect = dart.constFn(_interceptors.JSArray$(ui.Rect)))();
  let JSArrayOfMatrix4 = () => (JSArrayOfMatrix4 = dart.constFn(_interceptors.JSArray$(src__engine.Matrix4)))();
  let ListOfMatrix4 = () => (ListOfMatrix4 = dart.constFn(core.List$(src__engine.Matrix4)))();
  let ListOfRect = () => (ListOfRect = dart.constFn(core.List$(ui.Rect)))();
  let GestureModeToNull = () => (GestureModeToNull = dart.constFn(dart.fnType(core.Null, [src__engine.GestureMode])))();
  let GestureModeTovoid = () => (GestureModeTovoid = dart.constFn(dart.fnType(dart.void, [src__engine.GestureMode])))();
  let SemanticsObjectToIncrementable = () => (SemanticsObjectToIncrementable = dart.constFn(dart.fnType(src__engine.Incrementable, [src__engine.SemanticsObject])))();
  let SemanticsObjectToScrollable = () => (SemanticsObjectToScrollable = dart.constFn(dart.fnType(src__engine.Scrollable, [src__engine.SemanticsObject])))();
  let SemanticsObjectToLabelAndValue = () => (SemanticsObjectToLabelAndValue = dart.constFn(dart.fnType(src__engine.LabelAndValue, [src__engine.SemanticsObject])))();
  let SemanticsObjectToTappable = () => (SemanticsObjectToTappable = dart.constFn(dart.fnType(src__engine.Tappable, [src__engine.SemanticsObject])))();
  let SemanticsObjectToTextField = () => (SemanticsObjectToTextField = dart.constFn(dart.fnType(src__engine.TextField, [src__engine.SemanticsObject])))();
  let SemanticsObjectToCheckable = () => (SemanticsObjectToCheckable = dart.constFn(dart.fnType(src__engine.Checkable, [src__engine.SemanticsObject])))();
  let SemanticsObjectToRoleManager = () => (SemanticsObjectToRoleManager = dart.constFn(dart.fnType(src__engine.RoleManager, [src__engine.SemanticsObject])))();
  let LinkedMapOfRole$SemanticsObjectToRoleManager = () => (LinkedMapOfRole$SemanticsObjectToRoleManager = dart.constFn(_js_helper.LinkedMap$(src__engine.Role, SemanticsObjectToRoleManager())))();
  let LinkedMapOfRole$RoleManager = () => (LinkedMapOfRole$RoleManager = dart.constFn(_js_helper.LinkedMap$(src__engine.Role, src__engine.RoleManager)))();
  let LinkedHashMapOfRole$RoleManager = () => (LinkedHashMapOfRole$RoleManager = dart.constFn(collection.LinkedHashMap$(src__engine.Role, src__engine.RoleManager)))();
  let IdentityMapOfint$SemanticsObject = () => (IdentityMapOfint$SemanticsObject = dart.constFn(_js_helper.IdentityMap$(core.int, src__engine.SemanticsObject)))();
  let JSArrayOfSemanticsObject = () => (JSArrayOfSemanticsObject = dart.constFn(_interceptors.JSArray$(src__engine.SemanticsObject)))();
  let JSArrayOfGestureModeTovoid = () => (JSArrayOfGestureModeTovoid = dart.constFn(_interceptors.JSArray$(GestureModeTovoid())))();
  let intAndSemanticsObjectToNull = () => (intAndSemanticsObjectToNull = dart.constFn(dart.fnType(core.Null, [core.int, src__engine.SemanticsObject])))();
  let MapOfint$SemanticsObject = () => (MapOfint$SemanticsObject = dart.constFn(core.Map$(core.int, src__engine.SemanticsObject)))();
  let ListOfSemanticsObject = () => (ListOfSemanticsObject = dart.constFn(core.List$(src__engine.SemanticsObject)))();
  let ListOfVoidTovoid = () => (ListOfVoidTovoid = dart.constFn(core.List$(VoidTovoid())))();
  let ListOfGestureModeTovoid = () => (ListOfGestureModeTovoid = dart.constFn(core.List$(GestureModeTovoid())))();
  let ListOfint = () => (ListOfint = dart.constFn(core.List$(core.int)))();
  let MessageCodecOfByteData = () => (MessageCodecOfByteData = dart.constFn(src__engine.MessageCodec$(typed_data.ByteData)))();
  let MessageCodecOfString = () => (MessageCodecOfString = dart.constFn(src__engine.MessageCodec$(core.String)))();
  let IdentityMapOfString$dynamic = () => (IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))();
  let JSArrayOfCanvasShadow = () => (JSArrayOfCanvasShadow = dart.constFn(_interceptors.JSArray$(src__engine.CanvasShadow)))();
  let IdentityMapOfString$String = () => (IdentityMapOfString$String = dart.constFn(_js_helper.IdentityMap$(core.String, core.String)))();
  let JSArrayOfFutureOfvoid = () => (JSArrayOfFutureOfvoid = dart.constFn(_interceptors.JSArray$(FutureOfvoid())))();
  let FontFaceToFontFaceSet = () => (FontFaceToFontFaceSet = dart.constFn(dart.fnType(html.FontFaceSet, [html.FontFace])))();
  let ListOfFutureOfvoid = () => (ListOfFutureOfvoid = dart.constFn(core.List$(FutureOfvoid())))();
  let LinkedMapOfParagraphGeometricStyle$ParagraphRuler = () => (LinkedMapOfParagraphGeometricStyle$ParagraphRuler = dart.constFn(_js_helper.LinkedMap$(src__engine.ParagraphGeometricStyle, src__engine.ParagraphRuler)))();
  let ParagraphRulerAndParagraphRulerToint = () => (ParagraphRulerAndParagraphRulerToint = dart.constFn(dart.fnType(core.int, [src__engine.ParagraphRuler, src__engine.ParagraphRuler])))();
  let MapOfParagraphGeometricStyle$ParagraphRuler = () => (MapOfParagraphGeometricStyle$ParagraphRuler = dart.constFn(core.Map$(src__engine.ParagraphGeometricStyle, src__engine.ParagraphRuler)))();
  let RectangleOfnum = () => (RectangleOfnum = dart.constFn(math.Rectangle$(core.num)))();
  let ListOfRulerCacheEntry = () => (ListOfRulerCacheEntry = dart.constFn(core.List$(src__engine.RulerCacheEntry)))();
  let IdentityMapOfString$ListOfRulerCacheEntry = () => (IdentityMapOfString$ListOfRulerCacheEntry = dart.constFn(_js_helper.IdentityMap$(core.String, ListOfRulerCacheEntry())))();
  let JSArrayOfRulerCacheEntry = () => (JSArrayOfRulerCacheEntry = dart.constFn(_interceptors.JSArray$(src__engine.RulerCacheEntry)))();
  let MapOfString$ListOfRulerCacheEntry = () => (MapOfString$ListOfRulerCacheEntry = dart.constFn(core.Map$(core.String, ListOfRulerCacheEntry())))();
  let dynamicAnddynamicToint = () => (dynamicAnddynamicToint = dart.constFn(dart.fnType(core.int, [dart.dynamic, dart.dynamic])))();
  let UnicodeRangeOfCharProperty = () => (UnicodeRangeOfCharProperty = dart.constFn(src__engine.UnicodeRange$(src__engine.CharProperty)))();
  let UnicodePropertyLookupOfCharProperty = () => (UnicodePropertyLookupOfCharProperty = dart.constFn(src__engine.UnicodePropertyLookup$(src__engine.CharProperty)))();
  let JSArrayOfStreamSubscription = () => (JSArrayOfStreamSubscription = dart.constFn(_interceptors.JSArray$(async.StreamSubscription)))();
  let EditingStateTovoid = () => (EditingStateTovoid = dart.constFn(dart.fnType(dart.void, [src__engine.EditingState])))();
  let ListOfStreamSubscription = () => (ListOfStreamSubscription = dart.constFn(core.List$(async.StreamSubscription)))();
  let JSArrayOfObject = () => (JSArrayOfObject = dart.constFn(_interceptors.JSArray$(core.Object)))();
  dart.defineLazy(ui, {
    /*ui.isWeb*/get isWeb() {
      return true;
    },
    /*ui.kMaxUnsignedSMI*/get kMaxUnsignedSMI() {
      return -1;
    }
  });
  ui.PointMode = class PointMode extends core.Object {
    toString() {
      return {
        0: "PointMode.points",
        1: "PointMode.lines",
        2: "PointMode.polygon"
      }[this.index];
    }
  };
  (ui.PointMode.new = function(x) {
    this.index = x;
  }).prototype = ui.PointMode.prototype;
  dart.addTypeTests(ui.PointMode);
  dart.setFieldSignature(ui.PointMode, () => ({
    __proto__: dart.getFields(ui.PointMode.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.PointMode, ['toString']);
  ui.PointMode.points = dart.const(new ui.PointMode.new(0));
  ui.PointMode.lines = dart.const(new ui.PointMode.new(1));
  ui.PointMode.polygon = dart.const(new ui.PointMode.new(2));
  ui.PointMode.values = dart.constList([ui.PointMode.points, ui.PointMode.lines, ui.PointMode.polygon], ui.PointMode);
  ui.ClipOp = class ClipOp extends core.Object {
    toString() {
      return {
        0: "ClipOp.difference",
        1: "ClipOp.intersect"
      }[this.index];
    }
  };
  (ui.ClipOp.new = function(x) {
    this.index = x;
  }).prototype = ui.ClipOp.prototype;
  dart.addTypeTests(ui.ClipOp);
  dart.setFieldSignature(ui.ClipOp, () => ({
    __proto__: dart.getFields(ui.ClipOp.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.ClipOp, ['toString']);
  ui.ClipOp.difference = dart.const(new ui.ClipOp.new(0));
  ui.ClipOp.intersect = dart.const(new ui.ClipOp.new(1));
  ui.ClipOp.values = dart.constList([ui.ClipOp.difference, ui.ClipOp.intersect], ui.ClipOp);
  ui.Vertices = class Vertices extends core.Object {};
  (ui.Vertices.new = function() {
  }).prototype = ui.Vertices.prototype;
  dart.addTypeTests(ui.Vertices);
  const _canvas = dart.privateName(ui, "_canvas");
  const _isRecording = dart.privateName(ui, "_isRecording");
  ui.PictureRecorder = class PictureRecorder extends core.Object {
    get cullRect() {
      return this[cullRect];
    }
    set cullRect(value) {
      this[cullRect] = value;
    }
    beginRecording(bounds) {
      if (!!dart.test(this[_isRecording])) dart.assertFailed();
      this.cullRect = bounds;
      this[_isRecording] = true;
      this[_canvas] = new src__engine.RecordingCanvas.new(this.cullRect);
      return this[_canvas];
    }
    get isRecording() {
      return this[_isRecording];
    }
    endRecording() {
      if (!dart.test(this[_isRecording])) {
        return null;
      }
      this[_isRecording] = false;
      return new ui.Picture.__(this[_canvas], this.cullRect);
    }
  };
  (ui.PictureRecorder.new = function() {
    this[_canvas] = null;
    this[cullRect] = null;
    this[_isRecording] = false;
  }).prototype = ui.PictureRecorder.prototype;
  dart.addTypeTests(ui.PictureRecorder);
  const cullRect = Symbol("PictureRecorder.cullRect");
  dart.setMethodSignature(ui.PictureRecorder, () => ({
    __proto__: dart.getMethods(ui.PictureRecorder.__proto__),
    beginRecording: dart.fnType(src__engine.RecordingCanvas, [ui.Rect]),
    endRecording: dart.fnType(ui.Picture, [])
  }));
  dart.setGetterSignature(ui.PictureRecorder, () => ({
    __proto__: dart.getGetters(ui.PictureRecorder.__proto__),
    isRecording: core.bool
  }));
  dart.setFieldSignature(ui.PictureRecorder, () => ({
    __proto__: dart.getFields(ui.PictureRecorder.__proto__),
    [_canvas]: dart.fieldType(src__engine.RecordingCanvas),
    cullRect: dart.fieldType(ui.Rect),
    [_isRecording]: dart.fieldType(core.bool)
  }));
  const _saveLayerWithoutBounds = dart.privateName(ui, "_saveLayerWithoutBounds");
  const _saveLayer = dart.privateName(ui, "_saveLayer");
  const _scale = dart.privateName(ui, "_scale");
  const _transform = dart.privateName(ui, "_transform");
  const _clipRect = dart.privateName(ui, "_clipRect");
  const _clipRRect = dart.privateName(ui, "_clipRRect");
  const _clipPath = dart.privateName(ui, "_clipPath");
  const _drawColor = dart.privateName(ui, "_drawColor");
  const _drawLine = dart.privateName(ui, "_drawLine");
  const _drawPaint = dart.privateName(ui, "_drawPaint");
  const _drawRect = dart.privateName(ui, "_drawRect");
  const _drawRRect = dart.privateName(ui, "_drawRRect");
  const _drawDRRect = dart.privateName(ui, "_drawDRRect");
  const _drawOval = dart.privateName(ui, "_drawOval");
  const _drawCircle = dart.privateName(ui, "_drawCircle");
  const _drawPath = dart.privateName(ui, "_drawPath");
  const _drawImage = dart.privateName(ui, "_drawImage");
  const _drawImageRect = dart.privateName(ui, "_drawImageRect");
  const _drawParagraph = dart.privateName(ui, "_drawParagraph");
  ui.Canvas = class Canvas extends core.Object {
    save() {
      this[_canvas].save();
    }
    saveLayer(bounds, paint) {
      if (!(paint != null)) dart.assertFailed();
      if (bounds == null) {
        this[_saveLayerWithoutBounds](paint);
      } else {
        if (!dart.test(src__engine.rectIsValid(bounds))) dart.assertFailed();
        this[_saveLayer](bounds, paint);
      }
    }
    [_saveLayerWithoutBounds](paint) {
      this[_canvas].saveLayerWithoutBounds(paint);
    }
    [_saveLayer](bounds, paint) {
      this[_canvas].saveLayer(bounds, paint);
    }
    restore() {
      this[_canvas].restore();
    }
    getSaveCount() {
      return this[_canvas].saveCount;
    }
    translate(dx, dy) {
      this[_canvas].translate(dx, dy);
    }
    scale(sx, sy) {
      if (sy === void 0) sy = null;
      return this[_scale](sx, sy != null ? sy : sx);
    }
    [_scale](sx, sy) {
      this[_canvas].scale(sx, sy);
    }
    rotate(radians) {
      this[_canvas].rotate(radians);
    }
    skew(sx, sy) {
      this[_canvas].skew(sx, sy);
    }
    transform(matrix4) {
      if (!(matrix4 != null)) dart.assertFailed();
      if (matrix4[$length] !== 16) dart.throw(new core.ArgumentError.new("\"matrix4\" must have 16 entries."));
      this[_transform](matrix4);
    }
    [_transform](matrix4) {
      this[_canvas].transform(matrix4);
    }
    clipRect(rect, opts) {
      let clipOp = opts && 'clipOp' in opts ? opts.clipOp : ui.ClipOp.intersect;
      let doAntiAlias = opts && 'doAntiAlias' in opts ? opts.doAntiAlias : true;
      if (!dart.test(src__engine.rectIsValid(rect))) dart.assertFailed();
      if (!(clipOp != null)) dart.assertFailed();
      if (!(doAntiAlias != null)) dart.assertFailed();
      this[_clipRect](rect, clipOp, doAntiAlias);
    }
    [_clipRect](rect, clipOp, doAntiAlias) {
      this[_canvas].clipRect(rect);
    }
    clipRRect(rrect, opts) {
      let doAntiAlias = opts && 'doAntiAlias' in opts ? opts.doAntiAlias : true;
      if (!dart.test(src__engine.rrectIsValid(rrect))) dart.assertFailed();
      if (!(doAntiAlias != null)) dart.assertFailed();
      this[_clipRRect](rrect, doAntiAlias);
    }
    [_clipRRect](rrect, doAntiAlias) {
      this[_canvas].clipRRect(rrect);
    }
    clipPath(path, opts) {
      let doAntiAlias = opts && 'doAntiAlias' in opts ? opts.doAntiAlias : true;
      if (!(path != null)) dart.assertFailed();
      if (!(doAntiAlias != null)) dart.assertFailed();
      this[_clipPath](path, doAntiAlias);
    }
    [_clipPath](path, doAntiAlias) {
      this[_canvas].clipPath(path);
    }
    drawColor(color, blendMode) {
      if (!(color != null)) dart.assertFailed();
      if (!(blendMode != null)) dart.assertFailed();
      this[_drawColor](color, blendMode);
    }
    [_drawColor](color, blendMode) {
      this[_canvas].drawColor(color, blendMode);
    }
    drawLine(p1, p2, paint) {
      if (!dart.test(src__engine.offsetIsValid(p1))) dart.assertFailed();
      if (!dart.test(src__engine.offsetIsValid(p2))) dart.assertFailed();
      if (!(paint != null)) dart.assertFailed();
      this[_drawLine](p1, p2, paint);
    }
    [_drawLine](p1, p2, paint) {
      this[_canvas].drawLine(p1, p2, paint);
    }
    drawPaint(paint) {
      if (!(paint != null)) dart.assertFailed();
      this[_drawPaint](paint);
    }
    [_drawPaint](paint) {
      this[_canvas].drawPaint(paint);
    }
    drawRect(rect, paint) {
      if (!dart.test(src__engine.rectIsValid(rect))) dart.assertFailed();
      if (!(paint != null)) dart.assertFailed();
      this[_drawRect](rect, paint);
    }
    [_drawRect](rect, paint) {
      this[_canvas].drawRect(rect, paint);
    }
    drawRRect(rrect, paint) {
      if (!dart.test(src__engine.rrectIsValid(rrect))) dart.assertFailed();
      if (!(paint != null)) dart.assertFailed();
      this[_drawRRect](rrect, paint);
    }
    [_drawRRect](rrect, paint) {
      this[_canvas].drawRRect(rrect, paint);
    }
    drawDRRect(outer, inner, paint) {
      if (!dart.test(src__engine.rrectIsValid(outer))) dart.assertFailed();
      if (!dart.test(src__engine.rrectIsValid(inner))) dart.assertFailed();
      if (!(paint != null)) dart.assertFailed();
      this[_drawDRRect](outer, inner, paint);
    }
    [_drawDRRect](outer, inner, paint) {
      this[_canvas].drawDRRect(outer, inner, paint);
    }
    drawOval(rect, paint) {
      if (!dart.test(src__engine.rectIsValid(rect))) dart.assertFailed();
      if (!(paint != null)) dart.assertFailed();
      this[_drawOval](rect, paint);
    }
    [_drawOval](rect, paint) {
      this[_canvas].drawOval(rect, paint);
    }
    drawCircle(c, radius, paint) {
      if (!dart.test(src__engine.offsetIsValid(c))) dart.assertFailed();
      if (!(paint != null)) dart.assertFailed();
      this[_drawCircle](c, radius, paint);
    }
    [_drawCircle](c, radius, paint) {
      this[_canvas].drawCircle(c, radius, paint);
    }
    drawArc(rect, startAngle, sweepAngle, useCenter, paint) {
      if (!dart.test(src__engine.rectIsValid(rect))) dart.assertFailed();
      if (!(paint != null)) dart.assertFailed();
      let pi = 3.141592653589793;
      let pi2 = 2.0 * pi;
      let path = new ui.Path.new();
      if (dart.test(useCenter)) {
        path.moveTo((dart.notNull(rect.left) + dart.notNull(rect.right)) / 2.0, (dart.notNull(rect.top) + dart.notNull(rect.bottom)) / 2.0);
      }
      let forceMoveTo = !dart.test(useCenter);
      if (dart.notNull(sweepAngle) <= -pi2) {
        path.arcTo(rect, startAngle, -pi, forceMoveTo);
        startAngle = dart.notNull(startAngle) - pi;
        path.arcTo(rect, startAngle, -pi, false);
        startAngle = dart.notNull(startAngle) - pi;
        forceMoveTo = false;
        sweepAngle = dart.notNull(sweepAngle) + pi2;
      }
      while (dart.notNull(sweepAngle) >= pi2) {
        path.arcTo(rect, startAngle, pi, forceMoveTo);
        startAngle = dart.notNull(startAngle) + pi;
        path.arcTo(rect, startAngle, pi, false);
        startAngle = dart.notNull(startAngle) + pi;
        forceMoveTo = false;
        sweepAngle = dart.notNull(sweepAngle) - pi2;
      }
      path.arcTo(rect, startAngle, sweepAngle, forceMoveTo);
      if (dart.test(useCenter)) {
        path.close();
      }
      this[_canvas].drawPath(path, paint);
    }
    drawPath(path, paint) {
      if (!(path != null)) dart.assertFailed();
      if (!(paint != null)) dart.assertFailed();
      this[_drawPath](path, paint);
    }
    [_drawPath](path, paint) {
      this[_canvas].drawPath(path, paint);
    }
    drawImage(image, p, paint) {
      if (!(image != null)) dart.assertFailed();
      if (!dart.test(src__engine.offsetIsValid(p))) dart.assertFailed();
      if (!(paint != null)) dart.assertFailed();
      this[_drawImage](image, p, paint);
    }
    [_drawImage](image, p, paint) {
      this[_canvas].drawImage(image, p, paint);
    }
    drawImageRect(image, src, dst, paint) {
      if (!(image != null)) dart.assertFailed();
      if (!dart.test(src__engine.rectIsValid(src))) dart.assertFailed();
      if (!dart.test(src__engine.rectIsValid(dst))) dart.assertFailed();
      if (!(paint != null)) dart.assertFailed();
      this[_drawImageRect](image, src, dst, paint);
    }
    [_drawImageRect](image, src, dst, paint) {
      this[_canvas].drawImageRect(image, src, dst, paint);
    }
    drawImageNine(image, center, dst, paint) {
      if (!(image != null)) dart.assertFailed();
      if (!dart.test(src__engine.rectIsValid(center))) dart.assertFailed();
      if (!dart.test(src__engine.rectIsValid(dst))) dart.assertFailed();
      if (!(paint != null)) dart.assertFailed();
      if (!(dart.notNull(image.width) - dart.notNull(center.width) >= dart.notNull(dst.width))) dart.assertFailed();
      if (!(dart.notNull(image.height) - dart.notNull(center.height) >= dart.notNull(dst.height))) dart.assertFailed();
      let srcTopLeft = new ui.Rect.fromLTWH(0, 0, center.left, center.top);
      let srcTopRight = new ui.Rect.fromLTWH(center.right, 0, dart.notNull(image.width) - dart.notNull(center.right), center.top);
      let srcBottomLeft = new ui.Rect.fromLTWH(0, center.bottom, center.left, dart.notNull(image.height) - dart.notNull(center.bottom));
      let srcBottomRight = new ui.Rect.fromLTWH(center.right, center.bottom, dart.notNull(image.width) - dart.notNull(center.right), dart.notNull(image.height) - dart.notNull(center.bottom));
      let dstTopLeft = srcTopLeft.shift(dst.topLeft);
      let dstCenter = new ui.Rect.fromLTWH(dstTopLeft.right, dstTopLeft.bottom, dart.notNull(dst.width) - (dart.notNull(srcTopLeft.width) + dart.notNull(srcTopRight.width)), dart.notNull(dst.height) - (dart.notNull(srcTopLeft.height) + dart.notNull(srcBottomLeft.height)));
      this.drawImageRect(image, srcTopLeft, dstTopLeft, paint);
      let dstTopRight = new ui.Rect.fromLTWH(dstCenter.right, dst.top, srcTopRight.width, srcTopRight.height);
      this.drawImageRect(image, srcTopRight, dstTopRight, paint);
      let dstBottomLeft = new ui.Rect.fromLTWH(dst.left, dstCenter.bottom, srcBottomLeft.width, srcBottomLeft.height);
      this.drawImageRect(image, srcBottomLeft, dstBottomLeft, paint);
      let dstBottomRight = new ui.Rect.fromLTWH(dstCenter.right, dstCenter.bottom, srcBottomRight.width, srcBottomRight.height);
      this.drawImageRect(image, srcBottomRight, dstBottomRight, paint);
      this.drawImageRect(image, new ui.Rect.fromLTRB(srcTopLeft.right, srcTopLeft.top, srcTopRight.left, srcTopRight.bottom), new ui.Rect.fromLTRB(dstTopLeft.right, dstTopLeft.top, dstTopRight.left, dstTopRight.bottom), paint);
      this.drawImageRect(image, new ui.Rect.fromLTRB(srcTopLeft.left, srcTopLeft.bottom, srcBottomLeft.right, srcBottomLeft.top), new ui.Rect.fromLTRB(dstTopLeft.left, dstTopLeft.bottom, dstBottomLeft.right, dstBottomLeft.top), paint);
      this.drawImageRect(image, center, dstCenter, paint);
      this.drawImageRect(image, new ui.Rect.fromLTRB(srcTopRight.left, srcTopRight.bottom, srcBottomRight.right, srcBottomRight.top), new ui.Rect.fromLTRB(dstTopRight.left, dstTopRight.bottom, dstBottomRight.right, dstBottomRight.top), paint);
      this.drawImageRect(image, new ui.Rect.fromLTRB(srcBottomLeft.right, srcBottomLeft.top, srcBottomRight.left, srcBottomRight.bottom), new ui.Rect.fromLTRB(dstBottomLeft.right, dstBottomLeft.top, dstBottomRight.left, dstBottomRight.bottom), paint);
    }
    drawPicture(picture) {
      if (!(picture != null)) dart.assertFailed();
      dart.throw(new core.UnimplementedError.new());
    }
    drawParagraph(paragraph, offset) {
      if (!(paragraph != null)) dart.assertFailed();
      if (!dart.test(src__engine.offsetIsValid(offset))) dart.assertFailed();
      this[_drawParagraph](paragraph, offset);
    }
    [_drawParagraph](paragraph, offset) {
      this[_canvas].drawParagraph(paragraph, offset);
    }
    drawPoints(pointMode, points, paint) {
      if (!(pointMode != null)) dart.assertFailed();
      if (!(points != null)) dart.assertFailed();
      if (!(paint != null)) dart.assertFailed();
      dart.throw(new core.UnimplementedError.new());
    }
    drawRawPoints(pointMode, points, paint) {
      if (!(pointMode != null)) dart.assertFailed();
      if (!(points != null)) dart.assertFailed();
      if (!(paint != null)) dart.assertFailed();
      if (points[$length][$modulo](2) !== 0) dart.throw(new core.ArgumentError.new("\"points\" must have an even number of values."));
      dart.throw(new core.UnimplementedError.new());
    }
    drawVertices(vertices, blendMode, paint) {
      if (!(vertices != null)) dart.assertFailed();
      if (!(paint != null)) dart.assertFailed();
      if (!(blendMode != null)) dart.assertFailed();
      dart.throw(new core.UnimplementedError.new());
    }
    drawAtlas(atlas, transforms, rects, colors, blendMode, cullRect, paint) {
      if (!(atlas != null)) dart.assertFailed();
      if (!(transforms != null)) dart.assertFailed();
      if (!(rects != null)) dart.assertFailed();
      if (!(colors != null)) dart.assertFailed();
      if (!(blendMode != null)) dart.assertFailed();
      if (!(paint != null)) dart.assertFailed();
      let rectCount = rects[$length];
      if (transforms[$length] != rectCount) dart.throw(new core.ArgumentError.new("\"transforms\" and \"rects\" lengths must match."));
      if (dart.test(colors[$isNotEmpty]) && colors[$length] != rectCount) dart.throw(new core.ArgumentError.new("If non-null, \"colors\" length must match that of \"transforms\" and \"rects\"."));
      dart.throw(new core.UnimplementedError.new());
    }
    drawRawAtlas(atlas, rstTransforms, rects, colors, blendMode, cullRect, paint) {
      if (!(atlas != null)) dart.assertFailed();
      if (!(rstTransforms != null)) dart.assertFailed();
      if (!(rects != null)) dart.assertFailed();
      if (!(colors != null)) dart.assertFailed();
      if (!(blendMode != null)) dart.assertFailed();
      if (!(paint != null)) dart.assertFailed();
      let rectCount = rects[$length];
      if (rstTransforms[$length] != rectCount) dart.throw(new core.ArgumentError.new("\"rstTransforms\" and \"rects\" lengths must match."));
      if (rectCount[$modulo](4) !== 0) dart.throw(new core.ArgumentError.new("\"rstTransforms\" and \"rects\" lengths must be a multiple of four."));
      if (colors != null && dart.notNull(colors[$length]) * 4 !== rectCount) dart.throw(new core.ArgumentError.new("If non-null, \"colors\" length must be one fourth the length of \"rstTransforms\" and \"rects\"."));
      dart.throw(new core.UnimplementedError.new());
    }
    drawShadow(path, color, elevation, transparentOccluder) {
      if (!(path != null)) dart.assertFailed();
      if (!(color != null)) dart.assertFailed();
      if (!(transparentOccluder != null)) dart.assertFailed();
      this[_canvas].drawShadow(path, color, elevation, transparentOccluder);
    }
  };
  (ui.Canvas.new = function(recorder, cullRect) {
    if (cullRect === void 0) cullRect = null;
    this[_canvas] = null;
    if (!(recorder != null)) dart.assertFailed();
    if (dart.test(recorder.isRecording)) dart.throw(new core.ArgumentError.new("\"recorder\" must not already be associated with another Canvas."));
    let t = cullRect;
    t == null ? cullRect = ui.Rect.largest : t;
    this[_canvas] = recorder.beginRecording(cullRect);
  }).prototype = ui.Canvas.prototype;
  dart.addTypeTests(ui.Canvas);
  dart.setMethodSignature(ui.Canvas, () => ({
    __proto__: dart.getMethods(ui.Canvas.__proto__),
    save: dart.fnType(dart.void, []),
    saveLayer: dart.fnType(dart.void, [ui.Rect, ui.Paint]),
    [_saveLayerWithoutBounds]: dart.fnType(dart.void, [ui.Paint]),
    [_saveLayer]: dart.fnType(dart.void, [ui.Rect, ui.Paint]),
    restore: dart.fnType(dart.void, []),
    getSaveCount: dart.fnType(core.int, []),
    translate: dart.fnType(dart.void, [core.double, core.double]),
    scale: dart.fnType(dart.void, [core.double], [core.double]),
    [_scale]: dart.fnType(dart.void, [core.double, core.double]),
    rotate: dart.fnType(dart.void, [core.double]),
    skew: dart.fnType(dart.void, [core.double, core.double]),
    transform: dart.fnType(dart.void, [typed_data.Float64List]),
    [_transform]: dart.fnType(dart.void, [typed_data.Float64List]),
    clipRect: dart.fnType(dart.void, [ui.Rect], {clipOp: ui.ClipOp, doAntiAlias: core.bool}),
    [_clipRect]: dart.fnType(dart.void, [ui.Rect, ui.ClipOp, core.bool]),
    clipRRect: dart.fnType(dart.void, [ui.RRect], {doAntiAlias: core.bool}),
    [_clipRRect]: dart.fnType(dart.void, [ui.RRect, core.bool]),
    clipPath: dart.fnType(dart.void, [ui.Path], {doAntiAlias: core.bool}),
    [_clipPath]: dart.fnType(dart.void, [ui.Path, core.bool]),
    drawColor: dart.fnType(dart.void, [ui.Color, ui.BlendMode]),
    [_drawColor]: dart.fnType(dart.void, [ui.Color, ui.BlendMode]),
    drawLine: dart.fnType(dart.void, [ui.Offset, ui.Offset, ui.Paint]),
    [_drawLine]: dart.fnType(dart.void, [ui.Offset, ui.Offset, ui.Paint]),
    drawPaint: dart.fnType(dart.void, [ui.Paint]),
    [_drawPaint]: dart.fnType(dart.void, [ui.Paint]),
    drawRect: dart.fnType(dart.void, [ui.Rect, ui.Paint]),
    [_drawRect]: dart.fnType(dart.void, [ui.Rect, ui.Paint]),
    drawRRect: dart.fnType(dart.void, [ui.RRect, ui.Paint]),
    [_drawRRect]: dart.fnType(dart.void, [ui.RRect, ui.Paint]),
    drawDRRect: dart.fnType(dart.void, [ui.RRect, ui.RRect, ui.Paint]),
    [_drawDRRect]: dart.fnType(dart.void, [ui.RRect, ui.RRect, ui.Paint]),
    drawOval: dart.fnType(dart.void, [ui.Rect, ui.Paint]),
    [_drawOval]: dart.fnType(dart.void, [ui.Rect, ui.Paint]),
    drawCircle: dart.fnType(dart.void, [ui.Offset, core.double, ui.Paint]),
    [_drawCircle]: dart.fnType(dart.void, [ui.Offset, core.double, ui.Paint]),
    drawArc: dart.fnType(dart.void, [ui.Rect, core.double, core.double, core.bool, ui.Paint]),
    drawPath: dart.fnType(dart.void, [ui.Path, ui.Paint]),
    [_drawPath]: dart.fnType(dart.void, [ui.Path, ui.Paint]),
    drawImage: dart.fnType(dart.void, [ui.Image, ui.Offset, ui.Paint]),
    [_drawImage]: dart.fnType(dart.void, [ui.Image, ui.Offset, ui.Paint]),
    drawImageRect: dart.fnType(dart.void, [ui.Image, ui.Rect, ui.Rect, ui.Paint]),
    [_drawImageRect]: dart.fnType(dart.void, [ui.Image, ui.Rect, ui.Rect, ui.Paint]),
    drawImageNine: dart.fnType(dart.void, [ui.Image, ui.Rect, ui.Rect, ui.Paint]),
    drawPicture: dart.fnType(dart.void, [ui.Picture]),
    drawParagraph: dart.fnType(dart.void, [ui.Paragraph, ui.Offset]),
    [_drawParagraph]: dart.fnType(dart.void, [ui.Paragraph, ui.Offset]),
    drawPoints: dart.fnType(dart.void, [ui.PointMode, core.List$(ui.Offset), ui.Paint]),
    drawRawPoints: dart.fnType(dart.void, [ui.PointMode, typed_data.Float32List, ui.Paint]),
    drawVertices: dart.fnType(dart.void, [ui.Vertices, ui.BlendMode, ui.Paint]),
    drawAtlas: dart.fnType(dart.void, [ui.Image, core.List$(ui.RSTransform), core.List$(ui.Rect), core.List$(ui.Color), ui.BlendMode, ui.Rect, ui.Paint]),
    drawRawAtlas: dart.fnType(dart.void, [ui.Image, typed_data.Float32List, typed_data.Float32List, typed_data.Int32List, ui.BlendMode, ui.Rect, ui.Paint]),
    drawShadow: dart.fnType(dart.void, [ui.Path, ui.Color, core.double, core.bool])
  }));
  dart.setFieldSignature(ui.Canvas, () => ({
    __proto__: dart.getFields(ui.Canvas.__proto__),
    [_canvas]: dart.fieldType(src__engine.RecordingCanvas)
  }));
  ui.Picture = class Picture extends core.Object {
    toImage(width, height) {
      return null;
    }
    dispose() {}
    get approximateBytesUsed() {
      return 0;
    }
    get recordingCanvas() {
      return this[recordingCanvas$];
    }
    set recordingCanvas(value) {
      super.recordingCanvas = value;
    }
    get cullRect() {
      return this[cullRect$];
    }
    set cullRect(value) {
      super.cullRect = value;
    }
  };
  (ui.Picture.__ = function(recordingCanvas, cullRect) {
    this[recordingCanvas$] = recordingCanvas;
    this[cullRect$] = cullRect;
  }).prototype = ui.Picture.prototype;
  dart.addTypeTests(ui.Picture);
  const recordingCanvas$ = Symbol("Picture.recordingCanvas");
  const cullRect$ = Symbol("Picture.cullRect");
  dart.setMethodSignature(ui.Picture, () => ({
    __proto__: dart.getMethods(ui.Picture.__proto__),
    toImage: dart.fnType(ui.Image, [core.int, core.int]),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(ui.Picture, () => ({
    __proto__: dart.getGetters(ui.Picture.__proto__),
    approximateBytesUsed: core.int
  }));
  dart.setFieldSignature(ui.Picture, () => ({
    __proto__: dart.getFields(ui.Picture.__proto__),
    recordingCanvas: dart.finalFieldType(src__engine.RecordingCanvas),
    cullRect: dart.finalFieldType(ui.Rect)
  }));
  ui.PathFillType = class PathFillType extends core.Object {
    toString() {
      return {
        0: "PathFillType.nonZero",
        1: "PathFillType.evenOdd"
      }[this.index];
    }
  };
  (ui.PathFillType.new = function(x) {
    this.index = x;
  }).prototype = ui.PathFillType.prototype;
  dart.addTypeTests(ui.PathFillType);
  dart.setFieldSignature(ui.PathFillType, () => ({
    __proto__: dart.getFields(ui.PathFillType.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.PathFillType, ['toString']);
  ui.PathFillType.nonZero = dart.const(new ui.PathFillType.new(0));
  ui.PathFillType.evenOdd = dart.const(new ui.PathFillType.new(1));
  ui.PathFillType.values = dart.constList([ui.PathFillType.nonZero, ui.PathFillType.evenOdd], ui.PathFillType);
  ui.PathOperation = class PathOperation extends core.Object {
    toString() {
      return {
        0: "PathOperation.difference",
        1: "PathOperation.intersect",
        2: "PathOperation.union",
        3: "PathOperation.xor",
        4: "PathOperation.reverseDifference"
      }[this.index];
    }
  };
  (ui.PathOperation.new = function(x) {
    this.index = x;
  }).prototype = ui.PathOperation.prototype;
  dart.addTypeTests(ui.PathOperation);
  dart.setFieldSignature(ui.PathOperation, () => ({
    __proto__: dart.getFields(ui.PathOperation.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.PathOperation, ['toString']);
  ui.PathOperation.difference = dart.const(new ui.PathOperation.new(0));
  ui.PathOperation.intersect = dart.const(new ui.PathOperation.new(1));
  ui.PathOperation.union = dart.const(new ui.PathOperation.new(2));
  ui.PathOperation.xor = dart.const(new ui.PathOperation.new(3));
  ui.PathOperation.reverseDifference = dart.const(new ui.PathOperation.new(4));
  ui.PathOperation.values = dart.constList([ui.PathOperation.difference, ui.PathOperation.intersect, ui.PathOperation.union, ui.PathOperation.xor, ui.PathOperation.reverseDifference], ui.PathOperation);
  const _currentSubpath = dart.privateName(ui, "_currentSubpath");
  const _commands = dart.privateName(ui, "_commands");
  const _currentX = dart.privateName(ui, "_currentX");
  const _currentY = dart.privateName(ui, "_currentY");
  const _setCurrentPoint = dart.privateName(ui, "_setCurrentPoint");
  const _openNewSubpath = dart.privateName(ui, "_openNewSubpath");
  const _ensurePathStarted = dart.privateName(ui, "_ensurePathStarted");
  const _addPathWithMatrix = dart.privateName(ui, "_addPathWithMatrix");
  const _addPath = dart.privateName(ui, "_addPath");
  const _extendWithPathAndMatrix = dart.privateName(ui, "_extendWithPathAndMatrix");
  const _extendWithPath = dart.privateName(ui, "_extendWithPath");
  ui.Path = class Path extends core.Object {
    get subpaths() {
      return this[subpaths$];
    }
    set subpaths(value) {
      super.subpaths = value;
    }
    get [_currentSubpath]() {
      return dart.test(this.subpaths[$isEmpty]) ? null : this.subpaths[$last];
    }
    get [_commands]() {
      let t = this[_currentSubpath];
      return t == null ? null : t.commands;
    }
    get [_currentX]() {
      let t = this[_currentSubpath];
      let l = t == null ? null : t.currentX;
      return l != null ? l : 0.0;
    }
    get [_currentY]() {
      let t = this[_currentSubpath];
      let l = t == null ? null : t.currentY;
      return l != null ? l : 0.0;
    }
    get fillType() {
      return this[fillType$];
    }
    set fillType(value) {
      this[fillType$] = value;
    }
    [_openNewSubpath](x, y) {
      this.subpaths[$add](new src__engine.Subpath.new(x, y));
      this[_setCurrentPoint](x, y);
    }
    [_setCurrentPoint](x, y) {
      this[_currentSubpath].currentX = x;
      this[_currentSubpath].currentY = y;
    }
    moveTo(x, y) {
      this[_openNewSubpath](x, y);
      this[_commands][$add](new src__engine.MoveTo.new(x, y));
    }
    relativeMoveTo(dx, dy) {
      let newX = dart.notNull(this[_currentX]) + dart.notNull(dx);
      let newY = dart.notNull(this[_currentY]) + dart.notNull(dy);
      this[_openNewSubpath](newX, newY);
      this[_commands][$add](new src__engine.MoveTo.new(newX, newY));
    }
    lineTo(x, y) {
      this[_commands][$add](new src__engine.LineTo.new(x, y));
      this[_setCurrentPoint](x, y);
    }
    relativeLineTo(dx, dy) {
      let newX = dart.notNull(this[_currentX]) + dart.notNull(dx);
      let newY = dart.notNull(this[_currentY]) + dart.notNull(dy);
      this[_ensurePathStarted]();
      this[_commands][$add](new src__engine.LineTo.new(newX, newY));
      this[_setCurrentPoint](newX, newY);
    }
    [_ensurePathStarted]() {
      if (dart.test(this.subpaths[$isEmpty])) this.subpaths[$add](new src__engine.Subpath.new(0.0, 0.0));
    }
    quadraticBezierTo(x1, y1, x2, y2) {
      this[_ensurePathStarted]();
      this[_commands][$add](new src__engine.QuadraticCurveTo.new(x1, y1, x2, y2));
      this[_setCurrentPoint](x2, y2);
    }
    relativeQuadraticBezierTo(x1, y1, x2, y2) {
      this[_ensurePathStarted]();
      this[_commands][$add](new src__engine.QuadraticCurveTo.new(dart.notNull(x1) + dart.notNull(this[_currentX]), dart.notNull(y1) + dart.notNull(this[_currentY]), dart.notNull(x2) + dart.notNull(this[_currentX]), dart.notNull(y2) + dart.notNull(this[_currentY])));
      this[_setCurrentPoint](dart.notNull(x2) + dart.notNull(this[_currentX]), dart.notNull(y2) + dart.notNull(this[_currentY]));
    }
    cubicTo(x1, y1, x2, y2, x3, y3) {
      this[_ensurePathStarted]();
      this[_commands][$add](new src__engine.BezierCurveTo.new(x1, y1, x2, y2, x3, y3));
      this[_setCurrentPoint](x3, y3);
    }
    relativeCubicTo(x1, y1, x2, y2, x3, y3) {
      this[_ensurePathStarted]();
      this[_commands][$add](new src__engine.BezierCurveTo.new(dart.notNull(x1) + dart.notNull(this[_currentX]), dart.notNull(y1) + dart.notNull(this[_currentY]), dart.notNull(x2) + dart.notNull(this[_currentX]), dart.notNull(y2) + dart.notNull(this[_currentY]), dart.notNull(x3) + dart.notNull(this[_currentX]), dart.notNull(y3) + dart.notNull(this[_currentY])));
      this[_setCurrentPoint](dart.notNull(x3) + dart.notNull(this[_currentX]), dart.notNull(y3) + dart.notNull(this[_currentY]));
    }
    conicTo(x1, y1, x2, y2, w) {
      let quads = new src__engine.Conic.new(this[_currentX], this[_currentY], x1, y1, x2, y2, w).toQuads();
      for (let i = 1, len = quads[$length]; i < dart.notNull(len); i = i + 2) {
        this.quadraticBezierTo(quads[$_get](i).dx, quads[$_get](i).dy, quads[$_get](i + 1).dx, quads[$_get](i + 1).dy);
      }
    }
    relativeConicTo(x1, y1, x2, y2, w) {
      this.conicTo(dart.notNull(this[_currentX]) + dart.notNull(x1), dart.notNull(this[_currentY]) + dart.notNull(y1), dart.notNull(this[_currentX]) + dart.notNull(x2), dart.notNull(this[_currentY]) + dart.notNull(y2), w);
    }
    arcTo(rect, startAngle, sweepAngle, forceMoveTo) {
      if (!dart.test(src__engine.rectIsValid(rect))) dart.assertFailed();
      let center = rect.center;
      let radiusX = dart.notNull(rect.width) / 2;
      let radiusY = dart.notNull(rect.height) / 2;
      let startX = radiusX * math.cos(startAngle) + dart.notNull(center.dx);
      let startY = radiusY * math.sin(startAngle) + dart.notNull(center.dy);
      if (dart.test(forceMoveTo)) {
        this[_openNewSubpath](startX, startY);
      } else {
        this.lineTo(startX, startY);
      }
      this[_commands][$add](new src__engine.Ellipse.new(center.dx, center.dy, radiusX, radiusY, 0.0, startAngle, dart.notNull(startAngle) + dart.notNull(sweepAngle), sweepAngle[$isNegative]));
      this[_setCurrentPoint](radiusX * math.cos(dart.notNull(startAngle) + dart.notNull(sweepAngle)) + dart.notNull(center.dx), radiusY * math.sin(dart.notNull(startAngle) + dart.notNull(sweepAngle)) + dart.notNull(center.dy));
    }
    arcToPoint(arcEnd, opts) {
      let radius = opts && 'radius' in opts ? opts.radius : ui.Radius.zero;
      let rotation = opts && 'rotation' in opts ? opts.rotation : 0.0;
      let largeArc = opts && 'largeArc' in opts ? opts.largeArc : false;
      let clockwise = opts && 'clockwise' in opts ? opts.clockwise : true;
      if (!dart.test(src__engine.offsetIsValid(arcEnd))) dart.assertFailed();
      if (!dart.test(src__engine.radiusIsValid(radius))) dart.assertFailed();
      let rx = radius.x[$abs]();
      let ry = radius.y[$abs]();
      let isSamePoint = this[_currentX] == arcEnd.dx && this[_currentY] == arcEnd.dy;
      if (isSamePoint || rx[$toInt]() === 0 || ry[$toInt]() === 0) {
        this[_commands][$add](new src__engine.LineTo.new(arcEnd.dx, arcEnd.dy));
        this[_setCurrentPoint](arcEnd.dx, arcEnd.dy);
        return;
      }
      let midPointX = (dart.notNull(this[_currentX]) - dart.notNull(arcEnd.dx)) / 2.0;
      let midPointY = (dart.notNull(this[_currentY]) - dart.notNull(arcEnd.dy)) / 2.0;
      let xAxisRotation = 3.141592653589793 * dart.notNull(rotation) / 180.0;
      let cosXAxisRotation = math.cos(xAxisRotation);
      let sinXAxisRotation = math.sin(xAxisRotation);
      let xPrime = cosXAxisRotation * midPointX + sinXAxisRotation * midPointY;
      let yPrime = -sinXAxisRotation * midPointX + cosXAxisRotation * midPointY;
      let rxSquare = rx * rx;
      let rySquare = ry * ry;
      let xPrimeSquare = xPrime * xPrime;
      let yPrimeSquare = yPrime * yPrime;
      let radiiScale = xPrimeSquare / rxSquare + yPrimeSquare / rySquare;
      if (radiiScale > 1) {
        radiiScale = math.sqrt(radiiScale);
        rx = rx * radiiScale;
        ry = ry * radiiScale;
        rxSquare = rx * rx;
        rySquare = ry * ry;
      }
      let distanceSquare = rxSquare * yPrimeSquare + rySquare * xPrimeSquare;
      let cNumerator = rxSquare * rySquare - distanceSquare;
      let scaleFactor = math.sqrt(math.max(core.num, cNumerator / distanceSquare, 0.0));
      if (largeArc == clockwise) scaleFactor = -scaleFactor;
      let cxPrime = scaleFactor * (rx * yPrime / ry);
      let cyPrime = scaleFactor * (-(ry * xPrime) / rx);
      let cx = cosXAxisRotation * cxPrime - sinXAxisRotation * cyPrime + (dart.notNull(this[_currentX]) + dart.notNull(arcEnd.dx)) / 2.0;
      let cy = sinXAxisRotation * cxPrime + cosXAxisRotation * cyPrime + (dart.notNull(this[_currentY]) + dart.notNull(arcEnd.dy)) / 2.0;
      let startVectorX = (xPrime - cxPrime) / rx;
      let startVectorY = (yPrime - cyPrime) / ry;
      let startAngle = math.atan2(startVectorY, startVectorX);
      let endVectorX = (-xPrime - cxPrime) / rx;
      let endVectorY = (-yPrime - cyPrime) / ry;
      let sweepAngle = math.atan2(endVectorY, endVectorX) - startAngle;
      if (dart.test(clockwise) && sweepAngle < 0) {
        sweepAngle = sweepAngle + 3.141592653589793 * 2.0;
      } else if (!dart.test(clockwise) && sweepAngle > 0) {
        sweepAngle = sweepAngle - 3.141592653589793 * 2.0;
      }
      this[_commands][$add](new src__engine.Ellipse.new(cx, cy, rx, ry, xAxisRotation, startAngle, startAngle + sweepAngle, sweepAngle[$isNegative]));
      this[_setCurrentPoint](arcEnd.dx, arcEnd.dy);
    }
    relativeArcToPoint(arcEndDelta, opts) {
      let radius = opts && 'radius' in opts ? opts.radius : ui.Radius.zero;
      let rotation = opts && 'rotation' in opts ? opts.rotation : 0.0;
      let largeArc = opts && 'largeArc' in opts ? opts.largeArc : false;
      let clockwise = opts && 'clockwise' in opts ? opts.clockwise : true;
      if (!dart.test(src__engine.offsetIsValid(arcEndDelta))) dart.assertFailed();
      if (!dart.test(src__engine.radiusIsValid(radius))) dart.assertFailed();
      this.arcToPoint(new ui.Offset.new(dart.notNull(this[_currentX]) + dart.notNull(arcEndDelta.dx), dart.notNull(this[_currentY]) + dart.notNull(arcEndDelta.dy)), {radius: radius, rotation: rotation, largeArc: largeArc, clockwise: clockwise});
    }
    addRect(rect) {
      if (!dart.test(src__engine.rectIsValid(rect))) dart.assertFailed();
      this[_openNewSubpath](rect.left, rect.top);
      this[_commands][$add](new src__engine.RectCommand.new(rect.left, rect.top, rect.width, rect.height));
    }
    addOval(oval) {
      if (!dart.test(src__engine.rectIsValid(oval))) dart.assertFailed();
      let center = oval.center;
      let radiusX = dart.notNull(oval.width) / 2;
      let radiusY = dart.notNull(oval.height) / 2;
      this[_openNewSubpath](dart.notNull(center.dx) + radiusX, center.dy);
      this[_commands][$add](new src__engine.Ellipse.new(center.dx, center.dy, radiusX, radiusY, 0.0, 0.0, 2 * 3.141592653589793, false));
    }
    addArc(oval, startAngle, sweepAngle) {
      if (!dart.test(src__engine.rectIsValid(oval))) dart.assertFailed();
      let center = oval.center;
      let radiusX = dart.notNull(oval.width) / 2;
      let radiusY = dart.notNull(oval.height) / 2;
      this[_openNewSubpath](radiusX * math.cos(startAngle) + dart.notNull(center.dx), radiusY * math.sin(startAngle) + dart.notNull(center.dy));
      this[_commands][$add](new src__engine.Ellipse.new(center.dx, center.dy, radiusX, radiusY, 0.0, startAngle, dart.notNull(startAngle) + dart.notNull(sweepAngle), sweepAngle[$isNegative]));
      this[_setCurrentPoint](radiusX * math.cos(dart.notNull(startAngle) + dart.notNull(sweepAngle)) + dart.notNull(center.dx), radiusY * math.sin(dart.notNull(startAngle) + dart.notNull(sweepAngle)) + dart.notNull(center.dy));
    }
    addPolygon(points, close) {
      if (!(points != null)) dart.assertFailed();
      if (dart.test(points[$isEmpty])) return;
      this.moveTo(points[$first].dx, points[$first].dy);
      for (let i = 1; i < dart.notNull(points[$length]); i++) {
        let point = points[$_get](i);
        this.lineTo(point.dx, point.dy);
      }
      if (dart.test(close)) {
        this.close();
      } else {
        this[_setCurrentPoint](points[$last].dx, points[$last].dy);
      }
    }
    addRRect(rrect) {
      if (!dart.test(src__engine.rrectIsValid(rrect))) dart.assertFailed();
      this[_openNewSubpath](rrect.tallMiddleRect.left, rrect.top);
      this[_commands][$add](new src__engine.RRectCommand.new(rrect));
    }
    addPath(path, offset, opts) {
      let matrix4 = opts && 'matrix4' in opts ? opts.matrix4 : null;
      if (!(path != null)) dart.assertFailed();
      if (!dart.test(src__engine.offsetIsValid(offset))) dart.assertFailed();
      if (matrix4 != null) {
        if (!dart.test(src__engine.matrix4IsValid(matrix4))) dart.assertFailed();
        this[_addPathWithMatrix](path, offset.dx, offset.dy, matrix4);
      } else {
        this[_addPath](path, offset.dx, offset.dy);
      }
    }
    [_addPath](path, dx, dy) {
      if (dx === 0.0 && dy === 0.0) {
        this.subpaths[$addAll](path.subpaths);
      } else {
        dart.throw(new core.UnimplementedError.new("Cannot add path with non-zero offset"));
      }
    }
    [_addPathWithMatrix](path, dx, dy, matrix) {
      dart.throw(new core.UnimplementedError.new("Cannot add path with transform matrix"));
    }
    extendWithPath(path, offset, opts) {
      let matrix4 = opts && 'matrix4' in opts ? opts.matrix4 : null;
      if (!(path != null)) dart.assertFailed();
      if (!dart.test(src__engine.offsetIsValid(offset))) dart.assertFailed();
      if (matrix4 != null) {
        if (!dart.test(src__engine.matrix4IsValid(matrix4))) dart.assertFailed();
        this[_extendWithPathAndMatrix](path, offset.dx, offset.dy, matrix4);
      } else {
        this[_extendWithPath](path, offset.dx, offset.dy);
      }
    }
    [_extendWithPath](path, dx, dy) {
      if (dx === 0.0 && dy === 0.0) {
        if (!(path.subpaths[$length] === 1)) dart.assertFailed();
        this[_ensurePathStarted]();
        this[_commands][$addAll](path.subpaths[$single].commands);
        this[_setCurrentPoint](path.subpaths[$single].currentX, path.subpaths[$single].currentY);
      } else {
        dart.throw(new core.UnimplementedError.new("Cannot extend path with non-zero offset"));
      }
    }
    [_extendWithPathAndMatrix](path, dx, dy, matrix) {
      dart.throw(new core.UnimplementedError.new("Cannot extend path with transform matrix"));
    }
    close() {
      this[_ensurePathStarted]();
      this[_commands][$add](new src__engine.CloseCommand.new());
      this[_setCurrentPoint](this[_currentSubpath].startX, this[_currentSubpath].startY);
    }
    reset() {
      this.subpaths[$clear]();
    }
    contains(point) {
      if (!dart.test(src__engine.offsetIsValid(point))) dart.assertFailed();
      let subPathCount = this.subpaths[$length];
      if (subPathCount === 0) return false;
      let pointX = point.dx;
      let pointY = point.dy;
      if (subPathCount === 1) {
        let subPath = this.subpaths[$_get](0);
        if (subPath.commands[$length] === 1) {
          let cmd = subPath.commands[$_get](0);
          if (src__engine.RectCommand.is(cmd)) {
            if (dart.notNull(pointY) < dart.notNull(cmd.y) || dart.notNull(pointY) > dart.notNull(cmd.y) + dart.notNull(cmd.height)) return false;
            if (dart.notNull(pointX) < dart.notNull(cmd.x) || dart.notNull(pointX) > dart.notNull(cmd.x) + dart.notNull(cmd.width)) return false;
            return true;
          } else if (src__engine.RRectCommand.is(cmd)) {
            let rRect = cmd.rrect;
            if (dart.notNull(pointY) < dart.notNull(rRect.top) || dart.notNull(pointY) > dart.notNull(rRect.bottom)) return false;
            if (dart.notNull(pointX) < dart.notNull(rRect.left) || dart.notNull(pointX) > dart.notNull(rRect.right)) return false;
            if (dart.notNull(pointX) < dart.notNull(rRect.left) + dart.notNull(rRect.tlRadiusX) && dart.notNull(pointY) < dart.notNull(rRect.top) + dart.notNull(rRect.tlRadiusY)) {
              return ui._ellipseContains(pointX, pointY, dart.notNull(rRect.left) + dart.notNull(rRect.tlRadiusX), dart.notNull(rRect.top) + dart.notNull(rRect.tlRadiusY), rRect.tlRadiusX, rRect.tlRadiusY);
            } else if (dart.notNull(pointX) >= dart.notNull(rRect.right) - dart.notNull(rRect.trRadiusX) && dart.notNull(pointY) < dart.notNull(rRect.top) + dart.notNull(rRect.trRadiusY)) {
              return ui._ellipseContains(pointX, pointY, dart.notNull(rRect.right) - dart.notNull(rRect.trRadiusX), dart.notNull(rRect.top) + dart.notNull(rRect.trRadiusY), rRect.trRadiusX, rRect.trRadiusY);
            } else if (dart.notNull(pointX) >= dart.notNull(rRect.right) - dart.notNull(rRect.brRadiusX) && dart.notNull(pointY) >= dart.notNull(rRect.bottom) - dart.notNull(rRect.brRadiusY)) {
              return ui._ellipseContains(pointX, pointY, dart.notNull(rRect.right) - dart.notNull(rRect.brRadiusX), dart.notNull(rRect.bottom) - dart.notNull(rRect.brRadiusY), rRect.trRadiusX, rRect.trRadiusY);
            } else if (dart.notNull(pointX) < dart.notNull(rRect.left) + dart.notNull(rRect.blRadiusX) && dart.notNull(pointY) >= dart.notNull(rRect.bottom) - dart.notNull(rRect.blRadiusY)) {
              return ui._ellipseContains(pointX, pointY, dart.notNull(rRect.left) + dart.notNull(rRect.blRadiusX), dart.notNull(rRect.bottom) - dart.notNull(rRect.blRadiusY), rRect.trRadiusX, rRect.trRadiusY);
            }
            return true;
          }
        }
      }
      let size = ui.window.physicalSize['/'](ui.window.devicePixelRatio);
      let t = ui.Path._rawRecorder;
      t == null ? ui.Path._rawRecorder = new ui.RawRecordingCanvas.new(size) : t;
      ui.Path._rawRecorder.translate(-src__engine.BitmapCanvas.paddingPixels[$toDouble](), -src__engine.BitmapCanvas.paddingPixels[$toDouble]());
      ui.Path._rawRecorder.drawPath(this, (() => {
        let _ = new ui.Paint.new();
        _.color = new ui.Color.new(4278190080);
        return _;
      })().webOnlyPaintData);
      let result = ui.Path._rawRecorder.ctx.isPointInPath(pointX, pointY);
      ui.Path._rawRecorder.dispose();
      return result;
    }
    shift(offset) {
      if (!dart.test(src__engine.offsetIsValid(offset))) dart.assertFailed();
      let shiftedSubpaths = JSArrayOfSubpath().of([]);
      for (let subpath of this.subpaths) {
        shiftedSubpaths[$add](subpath.shift(offset));
      }
      return new ui.Path._clone(shiftedSubpaths, this.fillType);
    }
    transform(matrix4) {
      if (!dart.test(src__engine.matrix4IsValid(matrix4))) dart.assertFailed();
      dart.throw(new core.UnimplementedError.new());
    }
    getBounds() {
      let epsilon = 1e-9;
      let ltrbInitialized = false;
      let left = 0.0, top = 0.0, right = 0.0, bottom = 0.0;
      let curX = 0.0;
      let curY = 0.0;
      let minX = 0.0, maxX = 0.0, minY = 0.0, maxY = 0.0;
      for (let subpath of this.subpaths) {
        for (let op of subpath.commands) {
          let skipBounds = false;
          switch (op.type) {
            case src__engine.PathCommandTypes.moveTo:
            {
              let cmd = src__engine.MoveTo._check(op);
              curX = minX = maxX = cmd.x;
              curY = minY = maxY = cmd.y;
              break;
            }
            case src__engine.PathCommandTypes.lineTo:
            {
              let cmd = src__engine.LineTo._check(op);
              curX = minX = maxX = cmd.x;
              curY = minY = maxY = cmd.y;
              break;
            }
            case src__engine.PathCommandTypes.ellipse:
            {
              let cmd = src__engine.Ellipse._check(op);
              let rx = cmd.radiusX;
              let ry = cmd.radiusY;
              let cosVal = math.cos(cmd.rotation);
              let sinVal = math.sin(cmd.rotation);
              let rxCos = dart.notNull(rx) * cosVal;
              let ryCos = dart.notNull(ry) * cosVal;
              let rxSin = dart.notNull(rx) * sinVal;
              let rySin = dart.notNull(ry) * sinVal;
              let leftDeltaX = rxCos - rySin;
              let rightDeltaX = -rxCos - rySin;
              let topDeltaY = ryCos + rxSin;
              let bottomDeltaY = ryCos - rxSin;
              let centerX = cmd.x;
              let centerY = cmd.y;
              let rotatedX = dart.notNull(centerX) + leftDeltaX;
              let rotatedY = dart.notNull(centerY) + topDeltaY;
              minX = maxX = rotatedX;
              minY = maxY = rotatedY;
              rotatedX = dart.notNull(centerX) + rightDeltaX;
              rotatedY = dart.notNull(centerY) + bottomDeltaY;
              minX = math.min(core.double, minX, rotatedX);
              maxX = math.max(core.double, maxX, rotatedX);
              minY = math.min(core.double, minY, rotatedY);
              maxY = math.max(core.double, maxY, rotatedY);
              rotatedX = dart.notNull(centerX) - leftDeltaX;
              rotatedY = dart.notNull(centerY) - topDeltaY;
              minX = math.min(core.double, minX, rotatedX);
              maxX = math.max(core.double, maxX, rotatedX);
              minY = math.min(core.double, minY, rotatedY);
              maxY = math.max(core.double, maxY, rotatedY);
              rotatedX = dart.notNull(centerX) - rightDeltaX;
              rotatedY = dart.notNull(centerY) - bottomDeltaY;
              minX = math.min(core.double, minX, rotatedX);
              maxX = math.max(core.double, maxX, rotatedX);
              minY = math.min(core.double, minY, rotatedY);
              maxY = math.max(core.double, maxY, rotatedY);
              curX = dart.notNull(centerX) + dart.notNull(cmd.radiusX);
              curY = centerY;
              break;
            }
            case src__engine.PathCommandTypes.quadraticCurveTo:
            {
              let cmd = src__engine.QuadraticCurveTo._check(op);
              let x1 = curX;
              let y1 = curY;
              let cpX = cmd.x1;
              let cpY = cmd.y1;
              let x2 = cmd.x2;
              let y2 = cmd.y2;
              minX = math.min(core.double, x1, x2);
              minY = math.min(core.double, y1, y2);
              maxX = math.max(core.double, x1, x2);
              maxY = math.max(core.double, y1, y2);
              let denom = dart.notNull(x1) - 2 * dart.notNull(cpX) + dart.notNull(x2);
              if (denom[$abs]() > epsilon) {
                let t1 = (dart.notNull(x1) - dart.notNull(cpX)) / denom;
                if (t1 >= 0 && t1 <= 1.0) {
                  let tprime = 1.0 - t1;
                  let extremaX = tprime * tprime * dart.notNull(x1) + 2 * t1 * tprime * dart.notNull(cpX) + t1 * t1 * dart.notNull(x2);
                  let extremaY = tprime * tprime * dart.notNull(y1) + 2 * t1 * tprime * dart.notNull(cpY) + t1 * t1 * dart.notNull(y2);
                  minX = math.min(core.double, minX, extremaX);
                  maxX = math.max(core.double, maxX, extremaX);
                  minY = math.min(core.double, minY, extremaY);
                  maxY = math.max(core.double, maxY, extremaY);
                }
              }
              denom = dart.notNull(y1) - 2 * dart.notNull(cpY) + dart.notNull(y2);
              if (denom[$abs]() > epsilon) {
                let t2 = (dart.notNull(y1) - dart.notNull(cpY)) / denom;
                if (t2 >= 0 && t2 <= 1.0) {
                  let tprime2 = 1.0 - t2;
                  let extrema2X = tprime2 * tprime2 * dart.notNull(x1) + 2 * t2 * tprime2 * dart.notNull(cpX) + t2 * t2 * dart.notNull(x2);
                  let extrema2Y = tprime2 * tprime2 * dart.notNull(y1) + 2 * t2 * tprime2 * dart.notNull(cpY) + t2 * t2 * dart.notNull(y2);
                  minX = math.min(core.double, minX, extrema2X);
                  maxX = math.max(core.double, maxX, extrema2X);
                  minY = math.min(core.double, minY, extrema2Y);
                  maxY = math.max(core.double, maxY, extrema2Y);
                }
              }
              curX = x2;
              curY = y2;
              break;
            }
            case src__engine.PathCommandTypes.bezierCurveTo:
            {
              let cmd = src__engine.BezierCurveTo._check(op);
              let startX = curX;
              let startY = curY;
              let cpX1 = cmd.x1;
              let cpY1 = cmd.y1;
              let cpX2 = cmd.x2;
              let cpY2 = cmd.y2;
              let endX = cmd.x3;
              let endY = cmd.y3;
              minX = math.min(core.double, startX, endX);
              minY = math.min(core.double, startY, endY);
              maxX = math.max(core.double, startX, endX);
              maxY = math.max(core.double, startY, endY);
              let extremaX = null;
              let extremaY = null;
              let a = null, b = null, c = null;
              if (!(dart.notNull(startX) < dart.notNull(cpX1) && dart.notNull(cpX1) < dart.notNull(cpX2) && dart.notNull(cpX2) < dart.notNull(endX) || dart.notNull(startX) > dart.notNull(cpX1) && dart.notNull(cpX1) > dart.notNull(cpX2) && dart.notNull(cpX2) > dart.notNull(endX))) {
                a = -dart.notNull(startX) + 3 * (dart.notNull(cpX1) - dart.notNull(cpX2)) + dart.notNull(endX);
                b = 2 * (dart.notNull(startX) - 2 * dart.notNull(cpX1) + dart.notNull(cpX2));
                c = -dart.notNull(startX) + dart.notNull(cpX1);
                let s = dart.notNull(b) * dart.notNull(b) - 4 * dart.notNull(a) * dart.notNull(c);
                if (s >= 0.0 && a[$abs]() > epsilon) {
                  if (s === 0.0) {
                    let t = -dart.notNull(b) / (2 * dart.notNull(a));
                    let tprime = 1.0 - t;
                    if (t >= 0.0 && t <= 1.0) {
                      extremaX = tprime * tprime * tprime * dart.notNull(startX) + 3 * tprime * tprime * t * dart.notNull(cpX1) + 3 * tprime * t * t * dart.notNull(cpX2) + t * t * t * dart.notNull(endX);
                      minX = math.min(core.double, extremaX, minX);
                      maxX = math.max(core.double, extremaX, maxX);
                    }
                  } else {
                    s = math.sqrt(s);
                    let t = (-dart.notNull(b) - s) / (2 * dart.notNull(a));
                    let tprime = 1.0 - t;
                    if (t >= 0.0 && t <= 1.0) {
                      extremaX = tprime * tprime * tprime * dart.notNull(startX) + 3 * tprime * tprime * t * dart.notNull(cpX1) + 3 * tprime * t * t * dart.notNull(cpX2) + t * t * t * dart.notNull(endX);
                      minX = math.min(core.double, extremaX, minX);
                      maxX = math.max(core.double, extremaX, maxX);
                    }
                    t = (-dart.notNull(b) + s) / (2 * dart.notNull(a));
                    tprime = 1.0 - t;
                    if (t >= 0.0 && t <= 1.0) {
                      extremaX = tprime * tprime * tprime * dart.notNull(startX) + 3 * tprime * tprime * t * dart.notNull(cpX1) + 3 * tprime * t * t * dart.notNull(cpX2) + t * t * t * dart.notNull(endX);
                      minX = math.min(core.double, extremaX, minX);
                      maxX = math.max(core.double, extremaX, maxX);
                    }
                  }
                }
              }
              if (!(dart.notNull(startY) < dart.notNull(cpY1) && dart.notNull(cpY1) < dart.notNull(cpY2) && dart.notNull(cpY2) < dart.notNull(endY) || dart.notNull(startY) > dart.notNull(cpY1) && dart.notNull(cpY1) > dart.notNull(cpY2) && dart.notNull(cpY2) > dart.notNull(endY))) {
                a = -dart.notNull(startY) + 3 * (dart.notNull(cpY1) - dart.notNull(cpY2)) + dart.notNull(endY);
                b = 2 * (dart.notNull(startY) - 2 * dart.notNull(cpY1) + dart.notNull(cpY2));
                c = -dart.notNull(startY) + dart.notNull(cpY1);
                let s = dart.notNull(b) * dart.notNull(b) - 4 * dart.notNull(a) * dart.notNull(c);
                if (s >= 0.0 && a[$abs]() > epsilon) {
                  if (s === 0.0) {
                    let t = -dart.notNull(b) / (2 * dart.notNull(a));
                    let tprime = 1.0 - t;
                    if (t >= 0.0 && t <= 1.0) {
                      extremaY = tprime * tprime * tprime * dart.notNull(startY) + 3 * tprime * tprime * t * dart.notNull(cpY1) + 3 * tprime * t * t * dart.notNull(cpY2) + t * t * t * dart.notNull(endY);
                      minY = math.min(core.double, extremaY, minY);
                      maxY = math.max(core.double, extremaY, maxY);
                    }
                  } else {
                    s = math.sqrt(s);
                    let t = (-dart.notNull(b) - s) / (2 * dart.notNull(a));
                    let tprime = 1.0 - t;
                    if (t >= 0.0 && t <= 1.0) {
                      extremaY = tprime * tprime * tprime * dart.notNull(startY) + 3 * tprime * tprime * t * dart.notNull(cpY1) + 3 * tprime * t * t * dart.notNull(cpY2) + t * t * t * dart.notNull(endY);
                      minY = math.min(core.double, extremaY, minY);
                      maxY = math.max(core.double, extremaY, maxY);
                    }
                    t = (-dart.notNull(b) + s) / (2 * dart.notNull(a));
                    tprime = 1.0 - t;
                    if (t >= 0.0 && t <= 1.0) {
                      extremaY = tprime * tprime * tprime * dart.notNull(startY) + 3 * tprime * tprime * t * dart.notNull(cpY1) + 3 * tprime * t * t * dart.notNull(cpY2) + t * t * t * dart.notNull(endY);
                      minY = math.min(core.double, extremaY, minY);
                      maxY = math.max(core.double, extremaY, maxY);
                    }
                  }
                }
              }
              break;
            }
            case src__engine.PathCommandTypes.rect:
            {
              let cmd = src__engine.RectCommand._check(op);
              let left = cmd.x;
              let width = cmd.width;
              if (dart.notNull(cmd.width) < 0) {
                left = dart.notNull(left) - dart.notNull(width);
                width = -dart.notNull(width);
              }
              let top = cmd.y;
              let height = cmd.height;
              if (dart.notNull(cmd.height) < 0) {
                top = dart.notNull(top) - dart.notNull(height);
                height = -dart.notNull(height);
              }
              curX = minX = left;
              maxX = dart.notNull(left) + dart.notNull(width);
              curY = minY = top;
              maxY = dart.notNull(top) + dart.notNull(height);
              break;
            }
            case src__engine.PathCommandTypes.rRect:
            {
              let cmd = src__engine.RRectCommand._check(op);
              let rRect = cmd.rrect;
              curX = minX = rRect.left;
              maxX = dart.notNull(rRect.left) + dart.notNull(rRect.width);
              curY = minY = rRect.top;
              maxY = dart.notNull(rRect.top) + dart.notNull(rRect.height);
              break;
            }
            case src__engine.PathCommandTypes.close:
            default:
            {
              skipBounds = false;
              break;
            }
          }
          if (!skipBounds) {
            if (!ltrbInitialized) {
              left = minX;
              right = maxX;
              top = minY;
              bottom = maxY;
              ltrbInitialized = true;
            } else {
              left = math.min(core.double, left, minX);
              right = math.max(core.double, right, maxX);
              top = math.min(core.double, top, minY);
              bottom = math.max(core.double, bottom, maxY);
            }
          }
        }
      }
      return ltrbInitialized ? new ui.Rect.fromLTRB(left, top, right, bottom) : ui.Rect.zero;
    }
    static combine(operation, path1, path2) {
      if (!(path1 != null)) dart.assertFailed();
      if (!(path2 != null)) dart.assertFailed();
      dart.throw(new core.UnimplementedError.new());
    }
    computeMetrics(opts) {
      let forceClosed = opts && 'forceClosed' in opts ? opts.forceClosed : false;
      return new ui.PathMetrics.__(this, forceClosed);
    }
    get webOnlyPathAsRoundedRect() {
      if (this.subpaths[$length] !== 1) return null;
      let subPath = this.subpaths[$_get](0);
      if (subPath.commands[$length] !== 1) return null;
      let command = subPath.commands[$_get](0);
      return src__engine.RRectCommand.is(command) ? command.rrect : null;
    }
    get webOnlyPathAsRect() {
      if (this.subpaths[$length] !== 1) return null;
      let subPath = this.subpaths[$_get](0);
      if (subPath.commands[$length] !== 1) return null;
      let command = subPath.commands[$_get](0);
      return src__engine.RectCommand.is(command) ? new ui.Rect.fromLTWH(command.x, command.y, command.width, command.height) : null;
    }
    get webOnlyPathAsCircle() {
      if (this.subpaths[$length] !== 1) return null;
      let subPath = this.subpaths[$_get](0);
      if (subPath.commands[$length] !== 1) return null;
      let command = subPath.commands[$_get](0);
      if (src__engine.Ellipse.is(command)) {
        let ellipse = command;
        if ((dart.notNull(ellipse.endAngle) - dart.notNull(ellipse.startAngle))[$modulo](2 * 3.141592653589793) === 0.0) {
          return ellipse;
        }
      }
      return null;
    }
    webOnlySerializeToCssPaint() {
      let serializedSubpaths = [];
      for (let i = 0; i < dart.notNull(this.subpaths[$length]); i++) {
        serializedSubpaths[$add](this.subpaths[$_get](i).serializeToCssPaint());
      }
      return serializedSubpaths;
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "Path(" + dart.str(this.subpaths[$join](", ")) + ")";
      } else {
        return super.toString();
      }
    }
  };
  (ui.Path.new = function() {
    this[fillType$] = ui.PathFillType.nonZero;
    this[subpaths$] = JSArrayOfSubpath().of([]);
  }).prototype = ui.Path.prototype;
  (ui.Path.from = function(source) {
    this[fillType$] = ui.PathFillType.nonZero;
    this[subpaths$] = ListOfSubpath().from(source.subpaths);
  }).prototype = ui.Path.prototype;
  (ui.Path._clone = function(subpaths, fillType) {
    this[subpaths$] = subpaths;
    this[fillType$] = fillType;
  }).prototype = ui.Path.prototype;
  dart.addTypeTests(ui.Path);
  const subpaths$ = Symbol("Path.subpaths");
  const fillType$ = Symbol("Path.fillType");
  dart.setMethodSignature(ui.Path, () => ({
    __proto__: dart.getMethods(ui.Path.__proto__),
    [_openNewSubpath]: dart.fnType(dart.void, [core.double, core.double]),
    [_setCurrentPoint]: dart.fnType(dart.void, [core.double, core.double]),
    moveTo: dart.fnType(dart.void, [core.double, core.double]),
    relativeMoveTo: dart.fnType(dart.void, [core.double, core.double]),
    lineTo: dart.fnType(dart.void, [core.double, core.double]),
    relativeLineTo: dart.fnType(dart.void, [core.double, core.double]),
    [_ensurePathStarted]: dart.fnType(dart.void, []),
    quadraticBezierTo: dart.fnType(dart.void, [core.double, core.double, core.double, core.double]),
    relativeQuadraticBezierTo: dart.fnType(dart.void, [core.double, core.double, core.double, core.double]),
    cubicTo: dart.fnType(dart.void, [core.double, core.double, core.double, core.double, core.double, core.double]),
    relativeCubicTo: dart.fnType(dart.void, [core.double, core.double, core.double, core.double, core.double, core.double]),
    conicTo: dart.fnType(dart.void, [core.double, core.double, core.double, core.double, core.double]),
    relativeConicTo: dart.fnType(dart.void, [core.double, core.double, core.double, core.double, core.double]),
    arcTo: dart.fnType(dart.void, [ui.Rect, core.double, core.double, core.bool]),
    arcToPoint: dart.fnType(dart.void, [ui.Offset], {radius: ui.Radius, rotation: core.double, largeArc: core.bool, clockwise: core.bool}),
    relativeArcToPoint: dart.fnType(dart.void, [ui.Offset], {radius: ui.Radius, rotation: core.double, largeArc: core.bool, clockwise: core.bool}),
    addRect: dart.fnType(dart.void, [ui.Rect]),
    addOval: dart.fnType(dart.void, [ui.Rect]),
    addArc: dart.fnType(dart.void, [ui.Rect, core.double, core.double]),
    addPolygon: dart.fnType(dart.void, [core.List$(ui.Offset), core.bool]),
    addRRect: dart.fnType(dart.void, [ui.RRect]),
    addPath: dart.fnType(dart.void, [ui.Path, ui.Offset], {matrix4: typed_data.Float64List}),
    [_addPath]: dart.fnType(dart.void, [ui.Path, core.double, core.double]),
    [_addPathWithMatrix]: dart.fnType(dart.void, [ui.Path, core.double, core.double, typed_data.Float64List]),
    extendWithPath: dart.fnType(dart.void, [ui.Path, ui.Offset], {matrix4: typed_data.Float64List}),
    [_extendWithPath]: dart.fnType(dart.void, [ui.Path, core.double, core.double]),
    [_extendWithPathAndMatrix]: dart.fnType(dart.void, [ui.Path, core.double, core.double, typed_data.Float64List]),
    close: dart.fnType(dart.void, []),
    reset: dart.fnType(dart.void, []),
    contains: dart.fnType(core.bool, [ui.Offset]),
    shift: dart.fnType(ui.Path, [ui.Offset]),
    transform: dart.fnType(ui.Path, [typed_data.Float64List]),
    getBounds: dart.fnType(ui.Rect, []),
    computeMetrics: dart.fnType(ui.PathMetrics, [], {forceClosed: core.bool}),
    webOnlySerializeToCssPaint: dart.fnType(core.List, [])
  }));
  dart.setGetterSignature(ui.Path, () => ({
    __proto__: dart.getGetters(ui.Path.__proto__),
    [_currentSubpath]: src__engine.Subpath,
    [_commands]: core.List$(src__engine.PathCommand),
    [_currentX]: core.double,
    [_currentY]: core.double,
    webOnlyPathAsRoundedRect: ui.RRect,
    webOnlyPathAsRect: ui.Rect,
    webOnlyPathAsCircle: src__engine.Ellipse
  }));
  dart.setFieldSignature(ui.Path, () => ({
    __proto__: dart.getFields(ui.Path.__proto__),
    subpaths: dart.finalFieldType(ListOfSubpath()),
    fillType: dart.fieldType(ui.PathFillType)
  }));
  dart.defineExtensionMethods(ui.Path, ['toString']);
  dart.defineLazy(ui.Path, {
    /*ui.Path._rawRecorder*/get _rawRecorder() {
      return null;
    },
    set _rawRecorder(_) {}
  });
  const _iterator = dart.privateName(ui, "_iterator");
  const _getPosTan = dart.privateName(ui, "_getPosTan");
  const _moveNext = dart.privateName(ui, "_moveNext");
  ui.PathMetric = class PathMetric extends core.Object {
    get path() {
      return this[path$];
    }
    set path(value) {
      super.path = value;
    }
    get forceClosed() {
      return this[forceClosed$];
    }
    set forceClosed(value) {
      super.forceClosed = value;
    }
    get length() {
      return dart.throw(new core.UnimplementedError.new());
    }
    getTangentForOffset(distance) {
      let posTan = this[_getPosTan](distance);
      if (posTan[$_get](0) === 0.0) {
        return null;
      } else {
        return new ui.Tangent.new(new ui.Offset.new(posTan[$_get](1), posTan[$_get](2)), new ui.Offset.new(posTan[$_get](3), posTan[$_get](4)));
      }
    }
    [_getPosTan](distance) {
      return dart.throw(new core.UnimplementedError.new());
    }
    extractPath(start, end, opts) {
      let startWithMoveTo = opts && 'startWithMoveTo' in opts ? opts.startWithMoveTo : true;
      return dart.throw(new core.UnimplementedError.new());
    }
    get isClosed() {
      return dart.throw(new core.UnimplementedError.new());
    }
    [_moveNext]() {
      return dart.throw(new core.UnimplementedError.new());
    }
  };
  (ui.PathMetric.__ = function(path, forceClosed) {
    this[path$] = path;
    this[forceClosed$] = forceClosed;
  }).prototype = ui.PathMetric.prototype;
  dart.addTypeTests(ui.PathMetric);
  const path$ = Symbol("PathMetric.path");
  const forceClosed$ = Symbol("PathMetric.forceClosed");
  dart.setMethodSignature(ui.PathMetric, () => ({
    __proto__: dart.getMethods(ui.PathMetric.__proto__),
    getTangentForOffset: dart.fnType(ui.Tangent, [core.double]),
    [_getPosTan]: dart.fnType(typed_data.Float32List, [core.double]),
    extractPath: dart.fnType(ui.Path, [core.double, core.double], {startWithMoveTo: core.bool}),
    [_moveNext]: dart.fnType(core.bool, [])
  }));
  dart.setGetterSignature(ui.PathMetric, () => ({
    __proto__: dart.getGetters(ui.PathMetric.__proto__),
    length: core.double,
    isClosed: core.bool
  }));
  dart.setFieldSignature(ui.PathMetric, () => ({
    __proto__: dart.getFields(ui.PathMetric.__proto__),
    path: dart.finalFieldType(ui.Path),
    forceClosed: dart.finalFieldType(core.bool)
  }));
  ui.PathMetrics = class PathMetrics extends collection.IterableBase$(ui.PathMetric) {
    get iterator() {
      return this[_iterator];
    }
  };
  (ui.PathMetrics.__ = function(path, forceClosed) {
    this[_iterator] = new ui.PathMetricIterator.__(new ui.PathMetric.__(path, forceClosed));
    ui.PathMetrics.__proto__.new.call(this);
  }).prototype = ui.PathMetrics.prototype;
  dart.addTypeTests(ui.PathMetrics);
  dart.setGetterSignature(ui.PathMetrics, () => ({
    __proto__: dart.getGetters(ui.PathMetrics.__proto__),
    iterator: core.Iterator$(ui.PathMetric),
    [$iterator]: core.Iterator$(ui.PathMetric)
  }));
  dart.setFieldSignature(ui.PathMetrics, () => ({
    __proto__: dart.getFields(ui.PathMetrics.__proto__),
    [_iterator]: dart.finalFieldType(IteratorOfPathMetric())
  }));
  dart.defineExtensionAccessors(ui.PathMetrics, ['iterator']);
  const _pathMetric = dart.privateName(ui, "_pathMetric");
  const _firstTime = dart.privateName(ui, "_firstTime");
  ui.PathMetricIterator = class PathMetricIterator extends core.Object {
    get current() {
      return dart.test(this[_firstTime]) ? null : this[_pathMetric];
    }
    moveNext() {
      if (this[_firstTime] === true) {
        this[_firstTime] = false;
        return true;
      } else if ((() => {
        let t = this[_pathMetric];
        return t == null ? null : t[_moveNext]();
      })() === true) {
        return true;
      }
      this[_pathMetric] = null;
      return false;
    }
  };
  (ui.PathMetricIterator.__ = function(pathMetric) {
    this[_firstTime] = true;
    this[_pathMetric] = pathMetric;
  }).prototype = ui.PathMetricIterator.prototype;
  dart.addTypeTests(ui.PathMetricIterator);
  ui.PathMetricIterator[dart.implements] = () => [IteratorOfPathMetric()];
  dart.setMethodSignature(ui.PathMetricIterator, () => ({
    __proto__: dart.getMethods(ui.PathMetricIterator.__proto__),
    moveNext: dart.fnType(core.bool, [])
  }));
  dart.setGetterSignature(ui.PathMetricIterator, () => ({
    __proto__: dart.getGetters(ui.PathMetricIterator.__proto__),
    current: ui.PathMetric
  }));
  dart.setFieldSignature(ui.PathMetricIterator, () => ({
    __proto__: dart.getFields(ui.PathMetricIterator.__proto__),
    [_pathMetric]: dart.fieldType(ui.PathMetric),
    [_firstTime]: dart.fieldType(core.bool)
  }));
  ui.Tangent = class Tangent extends core.Object {
    static fromAngle(position, angle) {
      return new ui.Tangent.new(position, new ui.Offset.new(math.cos(angle), math.sin(angle)));
    }
    get position() {
      return this[position$];
    }
    set position(value) {
      super.position = value;
    }
    get vector() {
      return this[vector$];
    }
    set vector(value) {
      super.vector = value;
    }
    get angle() {
      return -math.atan2(this.vector.dy, this.vector.dx);
    }
  };
  (ui.Tangent.new = function(position, vector) {
    this[position$] = position;
    this[vector$] = vector;
    if (!(position != null)) dart.assertFailed();
    if (!(vector != null)) dart.assertFailed();
  }).prototype = ui.Tangent.prototype;
  dart.addTypeTests(ui.Tangent);
  const position$ = Symbol("Tangent.position");
  const vector$ = Symbol("Tangent.vector");
  dart.setGetterSignature(ui.Tangent, () => ({
    __proto__: dart.getGetters(ui.Tangent.__proto__),
    angle: core.double
  }));
  dart.setFieldSignature(ui.Tangent, () => ({
    __proto__: dart.getFields(ui.Tangent.__proto__),
    position: dart.finalFieldType(ui.Offset),
    vector: dart.finalFieldType(ui.Offset)
  }));
  const _canvas$ = dart.privateName(src__engine, "_canvas");
  const _ctx = dart.privateName(src__engine, "_ctx");
  const _cachedLastStyle = dart.privateName(src__engine, "_cachedLastStyle");
  const _children = dart.privateName(src__engine, "_children");
  const _widthInBitmapPixels = dart.privateName(src__engine, "_widthInBitmapPixels");
  const _heightInBitmapPixels = dart.privateName(src__engine, "_heightInBitmapPixels");
  const _saveCount = dart.privateName(src__engine, "_saveCount");
  const _devicePixelRatio = dart.privateName(src__engine, "_devicePixelRatio");
  const _prevFilter = dart.privateName(src__engine, "_prevFilter");
  const _prevFillStyle = dart.privateName(src__engine, "_prevFillStyle");
  const _prevStrokeStyle = dart.privateName(src__engine, "_prevStrokeStyle");
  const _initializeViewport = dart.privateName(src__engine, "_initializeViewport");
  const _setFillAndStrokeStyle = dart.privateName(src__engine, "_setFillAndStrokeStyle");
  const _setFilter = dart.privateName(src__engine, "_setFilter");
  const _applyPaint = dart.privateName(src__engine, "_applyPaint");
  const _resetPaint = dart.privateName(src__engine, "_resetPaint");
  const _strokeOrFill = dart.privateName(src__engine, "_strokeOrFill");
  const _runPath = dart.privateName(src__engine, "_runPath");
  const _drawRRectPath = dart.privateName(src__engine, "_drawRRectPath");
  const _drawRRectPathReverse = dart.privateName(src__engine, "_drawRRectPathReverse");
  const _clipStack = dart.privateName(src__engine, "_clipStack");
  src__engine.EngineCanvas = class EngineCanvas extends core.Object {
    dispose() {
      this.clear();
    }
  };
  (src__engine.EngineCanvas.new = function() {
  }).prototype = src__engine.EngineCanvas.prototype;
  dart.addTypeTests(src__engine.EngineCanvas);
  dart.setMethodSignature(src__engine.EngineCanvas, () => ({
    __proto__: dart.getMethods(src__engine.EngineCanvas.__proto__),
    dispose: dart.fnType(dart.void, [])
  }));
  const _saveStack = dart.privateName(src__engine, "_saveStack");
  const _currentTransform = dart.privateName(src__engine, "_currentTransform");
  src__engine.SaveStackTracking = class SaveStackTracking extends core.Object {};
  src__engine.SaveStackTracking[dart.mixinOn] = EngineCanvas => class SaveStackTracking extends EngineCanvas {
    get isClipped() {
      return this[_clipStack] != null;
    }
    clear() {
      this[_saveStack][$clear]();
      this[_clipStack] = null;
      this[_currentTransform] = src__engine.Matrix4.identity();
    }
    get currentTransform() {
      return this[_currentTransform];
    }
    save() {
      this[_saveStack][$add](new src__engine._SaveStackEntry.new({transform: this[_currentTransform].clone(), clipStack: this[_clipStack] == null ? null : ListOf_SaveClipEntry().from(this[_clipStack])}));
    }
    restore() {
      if (dart.test(this[_saveStack][$isEmpty])) {
        return;
      }
      let entry = this[_saveStack][$removeLast]();
      this[_currentTransform] = entry.transform;
      this[_clipStack] = entry.clipStack;
    }
    translate(dx, dy) {
      this[_currentTransform].translate(dx, dy);
    }
    scale(sx, sy) {
      this[_currentTransform].scale(sx, sy);
    }
    rotate(radians) {
      this[_currentTransform].rotate(src__engine.SaveStackTracking._unitZ, radians);
    }
    skew(sx, sy) {
      let skewMatrix = src__engine.Matrix4.identity();
      let storage = skewMatrix.storage;
      storage[$_set](1, sy);
      storage[$_set](4, sx);
      this[_currentTransform].multiply(skewMatrix);
    }
    transform(matrix4) {
      this[_currentTransform].multiply(new src__engine.Matrix4.fromFloat64List(matrix4));
    }
    clipRect(rect) {
      let t = this[_clipStack];
      t == null ? this[_clipStack] = JSArrayOf_SaveClipEntry().of([]) : t;
      this[_clipStack][$add](new src__engine._SaveClipEntry.rect(rect, this[_currentTransform].clone()));
    }
    clipRRect(rrect) {
      let t = this[_clipStack];
      t == null ? this[_clipStack] = JSArrayOf_SaveClipEntry().of([]) : t;
      this[_clipStack][$add](new src__engine._SaveClipEntry.rrect(rrect, this[_currentTransform].clone()));
    }
    clipPath(path) {
      let t = this[_clipStack];
      t == null ? this[_clipStack] = JSArrayOf_SaveClipEntry().of([]) : t;
      this[_clipStack][$add](new src__engine._SaveClipEntry.path(path, this[_currentTransform].clone()));
    }
  };
  (src__engine.SaveStackTracking.new = function() {
    this[_saveStack] = JSArrayOf_SaveStackEntry().of([]);
    this[_clipStack] = null;
    this[_currentTransform] = src__engine.Matrix4.identity();
  }).prototype = src__engine.SaveStackTracking.prototype;
  dart.addTypeTests(src__engine.SaveStackTracking);
  src__engine.SaveStackTracking[dart.implements] = () => [src__engine.EngineCanvas];
  dart.setMethodSignature(src__engine.SaveStackTracking, () => ({
    __proto__: dart.getMethods(src__engine.SaveStackTracking.__proto__),
    clear: dart.fnType(dart.void, []),
    save: dart.fnType(dart.void, []),
    restore: dart.fnType(dart.void, []),
    translate: dart.fnType(dart.void, [core.double, core.double]),
    scale: dart.fnType(dart.void, [core.double, core.double]),
    rotate: dart.fnType(dart.void, [core.double]),
    skew: dart.fnType(dart.void, [core.double, core.double]),
    transform: dart.fnType(dart.void, [typed_data.Float64List]),
    clipRect: dart.fnType(dart.void, [ui.Rect]),
    clipRRect: dart.fnType(dart.void, [ui.RRect]),
    clipPath: dart.fnType(dart.void, [ui.Path])
  }));
  dart.setGetterSignature(src__engine.SaveStackTracking, () => ({
    __proto__: dart.getGetters(src__engine.SaveStackTracking.__proto__),
    isClipped: core.bool,
    currentTransform: src__engine.Matrix4
  }));
  dart.setFieldSignature(src__engine.SaveStackTracking, () => ({
    __proto__: dart.getFields(src__engine.SaveStackTracking.__proto__),
    [_saveStack]: dart.finalFieldType(ListOf_SaveStackEntry()),
    [_clipStack]: dart.fieldType(ListOf_SaveClipEntry()),
    [_currentTransform]: dart.fieldType(src__engine.Matrix4)
  }));
  dart.defineLazy(src__engine.SaveStackTracking, {
    /*src__engine.SaveStackTracking._unitZ*/get _unitZ() {
      return src__engine.Vector3.new(0.0, 0.0, 1.0);
    }
  });
  const EngineCanvas_SaveStackTracking$ = class EngineCanvas_SaveStackTracking extends src__engine.EngineCanvas {};
  (EngineCanvas_SaveStackTracking$.new = function() {
    src__engine.SaveStackTracking.new.call(this);
  }).prototype = EngineCanvas_SaveStackTracking$.prototype;
  dart.applyMixin(EngineCanvas_SaveStackTracking$, src__engine.SaveStackTracking);
  src__engine.BitmapCanvas = class BitmapCanvas extends EngineCanvas_SaveStackTracking$ {
    get bounds() {
      return this[bounds$];
    }
    set bounds(value) {
      this[bounds$] = value;
    }
    get rootElement() {
      return this[rootElement];
    }
    set rootElement(value) {
      super.rootElement = value;
    }
    get size() {
      return this.bounds.size;
    }
    get widthInBitmapPixels() {
      return this[_widthInBitmapPixels];
    }
    get heightInBitmapPixels() {
      return this[_heightInBitmapPixels];
    }
    get bitmapPixelCount() {
      return dart.notNull(this.widthInBitmapPixels) * dart.notNull(this.heightInBitmapPixels);
    }
    dispose() {
      super.dispose();
      if (src__engine.browserEngine === src__engine.BrowserEngine.webkit) {
        this[_canvas$].width = this[_canvas$].height = 0;
      }
    }
    clear() {
      super.clear();
      for (let i = 0, len = this[_children][$length]; i < dart.notNull(len); i++) {
        this[_children][$_get](i)[$remove]();
      }
      this[_children][$clear]();
      this[_cachedLastStyle] = null;
      if (this[_ctx] != null) {
        this[_ctx].restore();
        this[_ctx].clearRect(0, 0, this[_widthInBitmapPixels], this[_heightInBitmapPixels]);
        this[_ctx].font = "";
        this[_initializeViewport]();
      }
      if (this[_canvas$] != null) {
        this[_canvas$].style[$transformOrigin] = "";
        this[_canvas$].style[$transform] = "";
      }
    }
    isReusable() {
      return this[_devicePixelRatio] == html.window.devicePixelRatio;
    }
    [_initializeViewport]() {
      this[_ctx].save();
      this[_ctx].setTransform(1, 0, 0, 1, 0, 0);
      this[_ctx].scale(html.window.devicePixelRatio, html.window.devicePixelRatio);
      let canvasPositionX = this.bounds.left[$floor]() - 1;
      let canvasPositionY = this.bounds.top[$floor]() - 1;
      let canvasPositionCorrectionX = dart.notNull(this.bounds.left) - 1 - canvasPositionX[$toDouble]();
      let canvasPositionCorrectionY = dart.notNull(this.bounds.top) - 1 - canvasPositionY[$toDouble]();
      this.rootElement.style[$transform] = "translate(" + dart.str(canvasPositionX) + "px, " + dart.str(canvasPositionY) + "px)";
      this.translate(-dart.notNull(this.bounds.left) + canvasPositionCorrectionX + 1, -dart.notNull(this.bounds.top) + canvasPositionCorrectionY + 1);
    }
    get canvas() {
      return this[_canvas$];
    }
    get ctx() {
      return this[_ctx];
    }
    [_applyPaint](paint) {
      this.ctx.globalCompositeOperation = (() => {
        let l = src__engine._stringForBlendMode(paint.blendMode);
        return l != null ? l : "source-over";
      })();
      this.ctx.lineWidth = (() => {
        let l = paint.strokeWidth;
        return l != null ? l : 1.0;
      })();
      let cap = paint.strokeCap;
      if (cap != null) {
        this.ctx.lineCap = src__engine._stringForStrokeCap(cap);
      } else {
        this.ctx.lineCap = "butt";
      }
      let join = paint.strokeJoin;
      if (join != null) {
        this.ctx.lineJoin = src__engine._stringForStrokeJoin(join);
      } else {
        this.ctx.lineJoin = "miter";
      }
      if (paint.shader != null) {
        let paintStyle = paint.shader.createPaintStyle(this.ctx);
        this[_setFillAndStrokeStyle](paintStyle, paintStyle);
      } else if (paint.color != null) {
        let colorString = paint.color.toCssString();
        this[_setFillAndStrokeStyle](colorString, colorString);
      }
      if (paint.maskFilter != null) {
        this[_setFilter]("blur(" + dart.str(paint.maskFilter.webOnlySigma) + "px)");
      }
    }
    [_strokeOrFill](paint, opts) {
      let resetPaint = opts && 'resetPaint' in opts ? opts.resetPaint : true;
      switch (paint.style) {
        case ui.PaintingStyle.stroke:
        {
          this.ctx.stroke();
          break;
        }
        case ui.PaintingStyle.fill:
        default:
        {
          this.ctx.fill();
          break;
        }
      }
      if (dart.test(resetPaint)) {
        this[_resetPaint]();
      }
    }
    [_resetPaint]() {
      this[_setFilter]("none");
      this[_setFillAndStrokeStyle](null, null);
    }
    [_setFilter](value) {
      if (this[_prevFilter] != value) {
        this[_prevFilter] = this.ctx.filter = value;
      }
    }
    [_setFillAndStrokeStyle](fillStyle, strokeStyle) {
      let _ctx = this.ctx;
      if (!core.identical(this[_prevFillStyle], fillStyle)) {
        this[_prevFillStyle] = _ctx.fillStyle = fillStyle;
      }
      if (!core.identical(this[_prevStrokeStyle], strokeStyle)) {
        this[_prevStrokeStyle] = _ctx.strokeStyle = strokeStyle;
      }
    }
    save() {
      super.save();
      this.ctx.save();
      let x = this[_saveCount];
      this[_saveCount] = dart.notNull(x) + 1;
      return x;
    }
    saveLayer(bounds, _) {
      this.save();
    }
    restore() {
      super.restore();
      this.ctx.restore();
      this[_saveCount] = dart.notNull(this[_saveCount]) - 1;
      this[_cachedLastStyle] = null;
    }
    restoreToCount(count) {
      if (!(dart.notNull(this[_saveCount]) >= dart.notNull(count))) dart.assertFailed();
      let restores = dart.notNull(this[_saveCount]) - dart.notNull(count);
      for (let i = 0; i < restores; i++) {
        this.ctx.restore();
      }
      this[_saveCount] = count;
    }
    translate(dx, dy) {
      super.translate(dx, dy);
      this.ctx.translate(dx, dy);
    }
    scale(sx, sy) {
      super.scale(sx, sy);
      this.ctx.scale(sx, sy);
    }
    rotate(radians) {
      super.rotate(radians);
      this.ctx.rotate(radians);
    }
    skew(sx, sy) {
      super.skew(sx, sy);
      this.ctx.transform(1, sy, sx, 1, 0, 0);
    }
    transform(matrix4) {
      super.transform(matrix4);
      if (!dart.test(dart.fn(() => {
        if (matrix4[$_get](2) !== 0.0 || matrix4[$_get](3) !== 0.0 || matrix4[$_get](7) !== 0.0 || matrix4[$_get](8) !== 0.0 || matrix4[$_get](9) !== 0.0 || matrix4[$_get](10) !== 1.0 || matrix4[$_get](11) !== 0.0 || matrix4[$_get](14) !== 0.0 || matrix4[$_get](15) !== 1.0) {
          core.print("WARNING: 3D transformation matrix was passed to BitmapCanvas.");
        }
        return true;
      }, VoidTobool())())) dart.assertFailed();
      this[_ctx].transform(matrix4[$_get](0), matrix4[$_get](1), matrix4[$_get](4), matrix4[$_get](5), matrix4[$_get](12), matrix4[$_get](13));
    }
    clipRect(rect) {
      super.clipRect(rect);
      this.ctx.beginPath();
      this.ctx.rect(rect.left, rect.top, rect.width, rect.height);
      this.ctx.clip();
    }
    clipRRect(rrect) {
      super.clipRRect(rrect);
      let path = new ui.Path.new();
      path.addRRect(rrect);
      this[_runPath](path);
      this.ctx.clip();
    }
    clipPath(path) {
      super.clipPath(path);
      this[_runPath](path);
      this.ctx.clip();
    }
    drawColor(color, blendMode) {
      this.ctx.globalCompositeOperation = src__engine._stringForBlendMode(blendMode);
      this.ctx.fillRect(-10000, -10000, 20000, 20000);
    }
    drawLine(p1, p2, paint) {
      this[_applyPaint](paint);
      this.ctx.beginPath();
      this.ctx.moveTo(p1.dx, p1.dy);
      this.ctx.lineTo(p2.dx, p2.dy);
      this.ctx.stroke();
      this[_resetPaint]();
    }
    drawPaint(paint) {
      this[_applyPaint](paint);
      this.ctx.beginPath();
      this.ctx.fillRect(-10000, -10000, 20000, 20000);
      this[_resetPaint]();
    }
    drawRect(rect, paint) {
      this[_applyPaint](paint);
      this.ctx.beginPath();
      this.ctx.rect(rect.left, rect.top, rect.width, rect.height);
      this[_strokeOrFill](paint);
    }
    drawRRect(rrect, paint) {
      this[_applyPaint](paint);
      this[_drawRRectPath](rrect);
      this[_strokeOrFill](paint);
    }
    [_drawRRectPath](rrect, opts) {
      let startNewPath = opts && 'startNewPath' in opts ? opts.startNewPath : true;
      let left = rrect.left;
      let right = rrect.right;
      let top = rrect.top;
      let bottom = rrect.bottom;
      if (dart.notNull(left) > dart.notNull(right)) {
        left = right;
        right = rrect.left;
      }
      if (dart.notNull(top) > dart.notNull(bottom)) {
        top = bottom;
        bottom = rrect.top;
      }
      let trRadiusX = rrect.trRadiusX[$abs]();
      let tlRadiusX = rrect.tlRadiusX[$abs]();
      let trRadiusY = rrect.trRadiusY[$abs]();
      let tlRadiusY = rrect.tlRadiusY[$abs]();
      let blRadiusX = rrect.blRadiusX[$abs]();
      let brRadiusX = rrect.brRadiusX[$abs]();
      let blRadiusY = rrect.blRadiusY[$abs]();
      let brRadiusY = rrect.brRadiusY[$abs]();
      this.ctx.moveTo(dart.notNull(left) + trRadiusX, top);
      if (dart.test(startNewPath)) {
        this.ctx.beginPath();
      }
      this.ctx.lineTo(dart.notNull(right) - trRadiusX, top);
      this.ctx.ellipse(dart.notNull(right) - trRadiusX, dart.notNull(top) + trRadiusY, trRadiusX, trRadiusY, 0, 1.5 * 3.141592653589793, 2.0 * 3.141592653589793, false);
      this.ctx.lineTo(right, dart.notNull(bottom) - brRadiusY);
      this.ctx.ellipse(dart.notNull(right) - brRadiusX, dart.notNull(bottom) - brRadiusY, brRadiusX, brRadiusY, 0, 0, 0.5 * 3.141592653589793, false);
      this.ctx.lineTo(dart.notNull(left) + blRadiusX, bottom);
      this.ctx.ellipse(dart.notNull(left) + blRadiusX, dart.notNull(bottom) - blRadiusY, blRadiusX, blRadiusY, 0, 0.5 * 3.141592653589793, 3.141592653589793, false);
      this.ctx.lineTo(left, dart.notNull(top) + tlRadiusY);
      this.ctx.ellipse(dart.notNull(left) + tlRadiusX, dart.notNull(top) + tlRadiusY, tlRadiusX, tlRadiusY, 0, 3.141592653589793, 1.5 * 3.141592653589793, false);
    }
    [_drawRRectPathReverse](rrect, opts) {
      let startNewPath = opts && 'startNewPath' in opts ? opts.startNewPath : true;
      let left = rrect.left;
      let right = rrect.right;
      let top = rrect.top;
      let bottom = rrect.bottom;
      let trRadiusX = rrect.trRadiusX[$abs]();
      let tlRadiusX = rrect.tlRadiusX[$abs]();
      let trRadiusY = rrect.trRadiusY[$abs]();
      let tlRadiusY = rrect.tlRadiusY[$abs]();
      let blRadiusX = rrect.blRadiusX[$abs]();
      let brRadiusX = rrect.brRadiusX[$abs]();
      let blRadiusY = rrect.blRadiusY[$abs]();
      let brRadiusY = rrect.brRadiusY[$abs]();
      if (dart.notNull(left) > dart.notNull(right)) {
        left = right;
        right = rrect.left;
      }
      if (dart.notNull(top) > dart.notNull(bottom)) {
        top = bottom;
        bottom = rrect.top;
      }
      this.ctx.moveTo(dart.notNull(right) - trRadiusX, top);
      if (dart.test(startNewPath)) {
        this.ctx.beginPath();
      }
      this.ctx.lineTo(dart.notNull(left) + tlRadiusX, top);
      this.ctx.ellipse(dart.notNull(left) + tlRadiusX, dart.notNull(top) + tlRadiusY, tlRadiusX, tlRadiusY, 0, 1.5 * 3.141592653589793, 1 * 3.141592653589793, true);
      this.ctx.lineTo(left, dart.notNull(bottom) - blRadiusY);
      this.ctx.ellipse(dart.notNull(left) + blRadiusX, dart.notNull(bottom) - blRadiusY, blRadiusX, blRadiusY, 0, 1 * 3.141592653589793, 0.5 * 3.141592653589793, true);
      this.ctx.lineTo(dart.notNull(right) - brRadiusX, bottom);
      this.ctx.ellipse(dart.notNull(right) - brRadiusX, dart.notNull(bottom) - brRadiusY, brRadiusX, brRadiusY, 0, 0.5 * 3.141592653589793, 0 * 3.141592653589793, true);
      this.ctx.lineTo(right, dart.notNull(top) + trRadiusY);
      this.ctx.ellipse(dart.notNull(right) - trRadiusX, dart.notNull(top) + trRadiusY, trRadiusX, trRadiusY, 0, 0 * 3.141592653589793, 1.5 * 3.141592653589793, true);
    }
    drawDRRect(outer, inner, paint) {
      this[_applyPaint](paint);
      this[_drawRRectPath](outer);
      this[_drawRRectPathReverse](inner, {startNewPath: false});
      this[_strokeOrFill](paint);
    }
    drawOval(rect, paint) {
      this[_applyPaint](paint);
      this.ctx.beginPath();
      this.ctx.ellipse(rect.center.dx, rect.center.dy, dart.notNull(rect.width) / 2, dart.notNull(rect.height) / 2, 0, 0, 2.0 * 3.141592653589793, false);
      this[_strokeOrFill](paint);
    }
    drawCircle(c, radius, paint) {
      this[_applyPaint](paint);
      this.ctx.beginPath();
      this.ctx.ellipse(c.dx, c.dy, radius, radius, 0, 0, 2.0 * 3.141592653589793, false);
      this[_strokeOrFill](paint);
    }
    drawPath(path, paint) {
      this[_applyPaint](paint);
      this[_runPath](path);
      this[_strokeOrFill](paint);
    }
    drawShadow(path, color, elevation, transparentOccluder) {
      let shadows = src__engine.ElevationShadow.computeCanvasShadows(elevation, color);
      if (dart.test(shadows[$isNotEmpty])) {
        for (let shadow of shadows) {
          if (dart.test(transparentOccluder) && src__engine.browserEngine !== src__engine.BrowserEngine.webkit) {
            let paint = new ui.Paint.new();
            paint.color = shadow.color;
            paint.style = ui.PaintingStyle.fill;
            paint.strokeWidth = 0.0;
            paint.maskFilter = new ui.MaskFilter.blur(ui.BlurStyle.normal, shadow.blur);
            this[_ctx].save();
            this[_ctx].translate(shadow.offsetX, shadow.offsetY);
            let paintData = paint.webOnlyPaintData;
            this[_applyPaint](paintData);
            this[_runPath](path);
            this[_strokeOrFill](paintData, {resetPaint: false});
            this[_ctx].restore();
          } else {
            let paint = new ui.Paint.new();
            paint.color = shadow.color;
            paint.style = ui.PaintingStyle.fill;
            paint.strokeWidth = 0.0;
            this[_ctx].save();
            let paintData = paint.webOnlyPaintData;
            this[_applyPaint](paintData);
            this[_ctx].shadowBlur = shadow.blur;
            this[_ctx].shadowColor = shadow.color.withAlpha(255).toCssString();
            this[_ctx].shadowOffsetX = shadow.offsetX;
            this[_ctx].shadowOffsetY = shadow.offsetY;
            this[_runPath](path);
            this[_strokeOrFill](paintData, {resetPaint: false});
            this[_ctx].restore();
          }
        }
        this[_resetPaint]();
      }
    }
    drawImage(image, p, paint) {
      this[_applyPaint](paint);
      let imgElement = html.Element._check(src__engine.HtmlImage.as(image).imgElement[$clone](true));
      imgElement.style[$position] = "absolute";
      imgElement.style[$transform] = "translate(" + dart.str(p.dx) + "px, " + dart.str(p.dy) + "px)";
      this.rootElement[$append](imgElement);
    }
    drawImageRect(image, src, dst, paint) {
      this.ctx[$drawImageScaledFromSource](src__engine.HtmlImage.as(image).imgElement, src.left, src.top, src.width, src.height, dst.left, dst.top, dst.width, dst.height);
    }
    drawParagraph(paragraph, offset) {
      if (!dart.test(paragraph.webOnlyIsLaidOut)) dart.assertFailed();
      let style = paragraph.webOnlyGetParagraphGeometricStyle();
      if (dart.test(paragraph.webOnlyDrawOnCanvas)) {
        if (!dart.equals(style, this[_cachedLastStyle])) {
          this.ctx.font = style.cssFontString;
          this[_cachedLastStyle] = style;
        }
        this[_applyPaint](paragraph.webOnlyGetPaint().webOnlyPaintData);
        this.ctx[$fillText](paragraph.webOnlyGetPlainText(), dart.notNull(offset.dx) + dart.notNull(paragraph.webOnlyAlignOffset), dart.notNull(offset.dy) + dart.notNull(paragraph.alphabeticBaseline));
        this[_resetPaint]();
        return;
      }
      let paragraphElement = html.Element._check(paragraph.webOnlyGetParagraphElement()[$clone](true));
      let paragraphStyle = paragraphElement.style;
      paragraphStyle[$position] = "absolute";
      paragraphStyle[$whiteSpace] = "pre-wrap";
      paragraphStyle[$width] = dart.str(paragraph.width) + "px";
      if (style.ellipsis != null && (style.maxLines == null || style.maxLines === 1)) {
        paragraphStyle[$height] = dart.str(paragraph.webOnlyMaxLinesHeight) + "px";
        paragraphStyle[$whiteSpace] = "pre";
        paragraphStyle[$overflow] = "hidden";
        paragraphStyle[$textOverflow] = "ellipsis";
      } else if (dart.test(paragraph.didExceedMaxLines)) {
        paragraphStyle[$height] = dart.str(paragraph.webOnlyMaxLinesHeight) + "px";
        paragraphStyle[$overflowY] = "hidden";
      } else {
        paragraphStyle[$height] = dart.str(paragraph.height) + "px";
      }
      if (dart.test(this.isClipped)) {
        let clipElements = src__engine._clipContent(this[_clipStack], html.HtmlElement._check(paragraphElement), offset, this.currentTransform);
        for (let clipElement of clipElements) {
          this.rootElement[$append](clipElement);
          this[_children][$add](clipElement);
        }
      } else {
        let cssTransform = src__engine.matrix4ToCssTransform(src__engine.transformWithOffset(this.currentTransform, offset));
        paragraphStyle[$transform] = cssTransform;
        this.rootElement[$append](paragraphElement);
      }
      this[_children][$add](paragraphElement);
    }
    drawPicture(picture) {
      picture.recordingCanvas.apply(this);
    }
    [_runPath](path) {
      this.ctx.beginPath();
      for (let subpath of path.subpaths) {
        for (let command of subpath.commands) {
          switch (command.type) {
            case src__engine.PathCommandTypes.bezierCurveTo:
            {
              let curve = src__engine.BezierCurveTo._check(command);
              this.ctx.bezierCurveTo(curve.x1, curve.y1, curve.x2, curve.y2, curve.x3, curve.y3);
              break;
            }
            case src__engine.PathCommandTypes.close:
            {
              this.ctx.closePath();
              break;
            }
            case src__engine.PathCommandTypes.ellipse:
            {
              let ellipse = src__engine.Ellipse._check(command);
              this.ctx.ellipse(ellipse.x, ellipse.y, ellipse.radiusX, ellipse.radiusY, ellipse.rotation, ellipse.startAngle, ellipse.endAngle, ellipse.anticlockwise);
              break;
            }
            case src__engine.PathCommandTypes.lineTo:
            {
              let lineTo = src__engine.LineTo._check(command);
              this.ctx.lineTo(lineTo.x, lineTo.y);
              break;
            }
            case src__engine.PathCommandTypes.moveTo:
            {
              let moveTo = src__engine.MoveTo._check(command);
              this.ctx.moveTo(moveTo.x, moveTo.y);
              break;
            }
            case src__engine.PathCommandTypes.rRect:
            {
              let rrectCommand = src__engine.RRectCommand._check(command);
              this[_drawRRectPath](rrectCommand.rrect, {startNewPath: false});
              break;
            }
            case src__engine.PathCommandTypes.rect:
            {
              let rectCommand = src__engine.RectCommand._check(command);
              this.ctx.rect(rectCommand.x, rectCommand.y, rectCommand.width, rectCommand.height);
              break;
            }
            case src__engine.PathCommandTypes.quadraticCurveTo:
            {
              let quadraticCurveTo = src__engine.QuadraticCurveTo._check(command);
              this.ctx.quadraticCurveTo(quadraticCurveTo.x1, quadraticCurveTo.y1, quadraticCurveTo.x2, quadraticCurveTo.y2);
              break;
            }
            default:
            {
              dart.throw(new core.UnimplementedError.new("Unknown path command " + dart.str(command)));
            }
          }
        }
      }
    }
  };
  (src__engine.BitmapCanvas.new = function(bounds) {
    this[rootElement] = html.Element.tag("flt-canvas");
    this[_canvas$] = null;
    this[_ctx] = null;
    this[_cachedLastStyle] = null;
    this[_children] = JSArrayOfElement().of([]);
    this[_widthInBitmapPixels] = null;
    this[_heightInBitmapPixels] = null;
    this[_saveCount] = 0;
    this[_devicePixelRatio] = html.window.devicePixelRatio;
    this[_prevFilter] = "none";
    this[_prevFillStyle] = null;
    this[_prevStrokeStyle] = null;
    this[bounds$] = bounds;
    src__engine.BitmapCanvas.__proto__.new.call(this);
    this.rootElement.style[$position] = "absolute";
    let boundsWidth = dart.notNull(this.size.width) + 1 + 2 * 1;
    let boundsHeight = dart.notNull(this.size.height) + 1 + 2 * 1;
    this[_widthInBitmapPixels] = (boundsWidth * dart.notNull(html.window.devicePixelRatio))[$ceil]();
    this[_heightInBitmapPixels] = (boundsHeight * dart.notNull(html.window.devicePixelRatio))[$ceil]();
    let cssWidth = dart.notNull(this[_widthInBitmapPixels]) / dart.notNull(html.window.devicePixelRatio);
    let cssHeight = dart.notNull(this[_heightInBitmapPixels]) / dart.notNull(html.window.devicePixelRatio);
    this[_canvas$] = html.CanvasElement.new({width: this[_widthInBitmapPixels], height: this[_heightInBitmapPixels]});
    this[_canvas$].style[$position] = "absolute";
    this[_canvas$].style[$width] = dart.str(cssWidth) + "px";
    this[_canvas$].style[$height] = dart.str(cssHeight) + "px";
    this[_ctx] = this[_canvas$][$context2D];
    this.rootElement[$append](this[_canvas$]);
    this[_initializeViewport]();
  }).prototype = src__engine.BitmapCanvas.prototype;
  dart.addTypeTests(src__engine.BitmapCanvas);
  const bounds$ = Symbol("BitmapCanvas.bounds");
  const rootElement = Symbol("BitmapCanvas.rootElement");
  dart.setMethodSignature(src__engine.BitmapCanvas, () => ({
    __proto__: dart.getMethods(src__engine.BitmapCanvas.__proto__),
    isReusable: dart.fnType(core.bool, []),
    [_initializeViewport]: dart.fnType(dart.void, []),
    [_applyPaint]: dart.fnType(dart.void, [ui.PaintData]),
    [_strokeOrFill]: dart.fnType(dart.void, [ui.PaintData], {resetPaint: core.bool}),
    [_resetPaint]: dart.fnType(dart.void, []),
    [_setFilter]: dart.fnType(dart.void, [core.String]),
    [_setFillAndStrokeStyle]: dart.fnType(dart.void, [core.Object, core.Object]),
    save: dart.fnType(core.int, []),
    saveLayer: dart.fnType(dart.void, [ui.Rect, dart.dynamic]),
    restoreToCount: dart.fnType(dart.void, [core.int]),
    drawColor: dart.fnType(dart.void, [ui.Color, ui.BlendMode]),
    drawLine: dart.fnType(dart.void, [ui.Offset, ui.Offset, ui.PaintData]),
    drawPaint: dart.fnType(dart.void, [ui.PaintData]),
    drawRect: dart.fnType(dart.void, [ui.Rect, ui.PaintData]),
    drawRRect: dart.fnType(dart.void, [ui.RRect, ui.PaintData]),
    [_drawRRectPath]: dart.fnType(dart.void, [ui.RRect], {startNewPath: core.bool}),
    [_drawRRectPathReverse]: dart.fnType(dart.void, [ui.RRect], {startNewPath: core.bool}),
    drawDRRect: dart.fnType(dart.void, [ui.RRect, ui.RRect, ui.PaintData]),
    drawOval: dart.fnType(dart.void, [ui.Rect, ui.PaintData]),
    drawCircle: dart.fnType(dart.void, [ui.Offset, core.double, ui.PaintData]),
    drawPath: dart.fnType(dart.void, [ui.Path, ui.PaintData]),
    drawShadow: dart.fnType(dart.void, [ui.Path, ui.Color, core.double, core.bool]),
    drawImage: dart.fnType(dart.void, [ui.Image, ui.Offset, ui.PaintData]),
    drawImageRect: dart.fnType(dart.void, [ui.Image, ui.Rect, ui.Rect, ui.PaintData]),
    drawParagraph: dart.fnType(dart.void, [ui.Paragraph, ui.Offset]),
    drawPicture: dart.fnType(dart.void, [ui.Picture]),
    [_runPath]: dart.fnType(dart.void, [ui.Path])
  }));
  dart.setGetterSignature(src__engine.BitmapCanvas, () => ({
    __proto__: dart.getGetters(src__engine.BitmapCanvas.__proto__),
    size: ui.Size,
    widthInBitmapPixels: core.int,
    heightInBitmapPixels: core.int,
    bitmapPixelCount: core.int,
    canvas: html.CanvasElement,
    ctx: html.CanvasRenderingContext2D
  }));
  dart.setFieldSignature(src__engine.BitmapCanvas, () => ({
    __proto__: dart.getFields(src__engine.BitmapCanvas.__proto__),
    bounds: dart.fieldType(ui.Rect),
    rootElement: dart.finalFieldType(html.Element),
    [_canvas$]: dart.fieldType(html.CanvasElement),
    [_ctx]: dart.fieldType(html.CanvasRenderingContext2D),
    [_cachedLastStyle]: dart.fieldType(src__engine.ParagraphGeometricStyle),
    [_children]: dart.finalFieldType(ListOfElement()),
    [_widthInBitmapPixels]: dart.fieldType(core.int),
    [_heightInBitmapPixels]: dart.fieldType(core.int),
    [_saveCount]: dart.fieldType(core.int),
    [_devicePixelRatio]: dart.finalFieldType(core.double),
    [_prevFilter]: dart.fieldType(core.String),
    [_prevFillStyle]: dart.fieldType(core.Object),
    [_prevStrokeStyle]: dart.fieldType(core.Object)
  }));
  dart.defineLazy(src__engine.BitmapCanvas, {
    /*src__engine.BitmapCanvas.paddingPixels*/get paddingPixels() {
      return 1;
    }
  });
  ui.RawRecordingCanvas = class RawRecordingCanvas extends src__engine.BitmapCanvas {
    dispose() {
      this.clear();
    }
    beginRecording(bounds) {
      return dart.throw(new core.UnsupportedError.new(""));
    }
    endRecording() {
      return dart.throw(new core.UnsupportedError.new(""));
    }
    get isRecording() {
      return true;
    }
    get cullRect() {
      return this[cullRect$0];
    }
    set cullRect(value) {
      this[cullRect$0] = value;
    }
  };
  (ui.RawRecordingCanvas.new = function(size) {
    this[_canvas] = null;
    this[_isRecording] = true;
    this[cullRect$0] = null;
    ui.RawRecordingCanvas.__proto__.new.call(this, ui.Offset.zero['&'](size));
  }).prototype = ui.RawRecordingCanvas.prototype;
  dart.addTypeTests(ui.RawRecordingCanvas);
  const cullRect$0 = Symbol("RawRecordingCanvas.cullRect");
  ui.RawRecordingCanvas[dart.implements] = () => [ui.PictureRecorder];
  dart.setMethodSignature(ui.RawRecordingCanvas, () => ({
    __proto__: dart.getMethods(ui.RawRecordingCanvas.__proto__),
    beginRecording: dart.fnType(src__engine.RecordingCanvas, [ui.Rect]),
    endRecording: dart.fnType(ui.Picture, [])
  }));
  dart.setGetterSignature(ui.RawRecordingCanvas, () => ({
    __proto__: dart.getGetters(ui.RawRecordingCanvas.__proto__),
    isRecording: core.bool
  }));
  dart.setFieldSignature(ui.RawRecordingCanvas, () => ({
    __proto__: dart.getFields(ui.RawRecordingCanvas.__proto__),
    [_canvas]: dart.fieldType(src__engine.RecordingCanvas),
    [_isRecording]: dart.fieldType(core.bool),
    cullRect: dart.fieldType(ui.Rect)
  }));
  ui._ellipseContains = function(px, py, centerX, centerY, radiusX, radiusY) {
    let dx = dart.notNull(px) - dart.notNull(centerX);
    let dy = dart.notNull(py) - dart.notNull(centerY);
    return dx * dx / (dart.notNull(radiusX) * dart.notNull(radiusX)) + dy * dy / (dart.notNull(radiusY) * dart.notNull(radiusY)) < 1.0;
  };
  dart.defineLazy(ui, {
    /*ui._debugExplainSurfaceStats*/get _debugExplainSurfaceStats() {
      return false;
    },
    /*ui._debugShowCanvasReuseStats*/get _debugShowCanvasReuseStats() {
      return false;
    },
    /*ui.debugShowClipLayers*/get debugShowClipLayers() {
      return false;
    },
    set debugShowClipLayers(_) {},
    /*ui._kScreenPixelRatioWarningThreshold*/get _kScreenPixelRatioWarningThreshold() {
      return 6.0;
    },
    /*ui._webOnlyDidWarnAboutPerformanceOverlay*/get _webOnlyDidWarnAboutPerformanceOverlay() {
      return false;
    },
    set _webOnlyDidWarnAboutPerformanceOverlay(_) {}
  });
  ui.Scene = class Scene extends core.Object {
    get webOnlyRootElement() {
      return this[webOnlyRootElement$];
    }
    set webOnlyRootElement(value) {
      super.webOnlyRootElement = value;
    }
    toImage(width, height) {
      if (dart.notNull(width) <= 0 || dart.notNull(height) <= 0) dart.throw(core.Exception.new("Invalid image dimensions."));
      dart.throw(new core.UnsupportedError.new("toImage is not supported on the Web"));
    }
    dispose() {}
  };
  (ui.Scene.__ = function(webOnlyRootElement) {
    this[webOnlyRootElement$] = webOnlyRootElement;
  }).prototype = ui.Scene.prototype;
  dart.addTypeTests(ui.Scene);
  const webOnlyRootElement$ = Symbol("Scene.webOnlyRootElement");
  dart.setMethodSignature(ui.Scene, () => ({
    __proto__: dart.getMethods(ui.Scene.__proto__),
    toImage: dart.fnType(async.Future$(ui.Image), [core.int, core.int]),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setFieldSignature(ui.Scene, () => ({
    __proto__: dart.getFields(ui.Scene.__proto__),
    webOnlyRootElement: dart.finalFieldType(html.Element)
  }));
  const _surfaceStack = dart.privateName(ui, "_surfaceStack");
  const _persistedScene = dart.privateName(ui, "_persistedScene");
  const _currentSurface = dart.privateName(ui, "_currentSurface");
  const _adoptSurface = dart.privateName(ui, "_adoptSurface");
  const _pushSurface = dart.privateName(ui, "_pushSurface");
  const _addSurface = dart.privateName(ui, "_addSurface");
  const _addPerformanceOverlay = dart.privateName(ui, "_addPerformanceOverlay");
  const _addPicture = dart.privateName(ui, "_addPicture");
  const _addTexture = dart.privateName(ui, "_addTexture");
  const _addPlatformView = dart.privateName(ui, "_addPlatformView");
  const _addChildScene = dart.privateName(ui, "_addChildScene");
  ui.SceneBuilder = class SceneBuilder extends core.Object {
    static new() {
      if (false) {
        return new src__engine.LayerSceneBuilder.new();
      } else {
        return new ui.SceneBuilder.__();
      }
    }
    static layer() {
      return new src__engine.LayerSceneBuilder.new();
    }
    get [_persistedScene]() {
      if (!dart.test(dart.fn(() => {
        if (this[_surfaceStack][$length] !== 1) {
          let surfacePrintout = IterableOfType()._check(this[_surfaceStack][$map](core.Type, dart.fn(l => dart.runtimeType(l), PersistedContainerSurfaceToType())))[$toList]()[$join](", ");
          dart.throw(core.Exception.new("Incorrect sequence of push/pop operations while " + "building scene surfaces. After building the scene the persisted " + "surface stack must contain a single element which corresponds " + "to the scene itself (_PersistedScene). All other surfaces " + "should have been popped off the stack. Found the following " + ("surfaces in the stack:\n" + dart.str(surfacePrintout))));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed();
      return ui.PersistedScene._check(this[_surfaceStack][$first]);
    }
    get [_currentSurface]() {
      return this[_surfaceStack][$last];
    }
    [_pushSurface](surface) {
      this[_adoptSurface](surface);
      this[_surfaceStack][$add](surface);
      return surface;
    }
    [_addSurface](surface) {
      this[_adoptSurface](surface);
    }
    [_adoptSurface](surface) {
      this[_currentSurface].appendChild(surface);
    }
    pushOffset(dx, dy, opts) {
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      return this[_pushSurface](new ui.PersistedOffset.new(webOnlyPaintedBy, dx, dy));
    }
    pushTransform(matrix4, opts) {
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      if (matrix4 == null) dart.throw(new core.ArgumentError.new("\"matrix4\" argument cannot be null"));
      if (matrix4[$length] !== 16) dart.throw(new core.ArgumentError.new("\"matrix4\" must have 16 entries."));
      return this[_pushSurface](new ui.PersistedTransform.new(webOnlyPaintedBy, matrix4));
    }
    pushClipRect(rect, opts) {
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : ui.Clip.antiAlias;
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      if (!(clipBehavior != null)) dart.assertFailed();
      if (!(clipBehavior !== ui.Clip.none)) dart.assertFailed();
      return this[_pushSurface](new ui.PersistedClipRect.new(webOnlyPaintedBy, rect));
    }
    pushClipRRect(rrect, opts) {
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      return this[_pushSurface](new ui.PersistedClipRRect.new(webOnlyPaintedBy, rrect, clipBehavior));
    }
    pushClipPath(path, opts) {
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : ui.Clip.antiAlias;
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      if (!(clipBehavior != null)) dart.assertFailed();
      if (!(clipBehavior !== ui.Clip.none)) dart.assertFailed();
      return this[_pushSurface](new ui._PersistedClipPath.new(webOnlyPaintedBy, path, clipBehavior));
    }
    pushOpacity(alpha, opts) {
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      let offset = opts && 'offset' in opts ? opts.offset : ui.Offset.zero;
      return this[_pushSurface](new ui.PersistedOpacity.new(webOnlyPaintedBy, alpha, offset));
    }
    pushColorFilter(color, blendMode, opts) {
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      dart.throw(new core.UnimplementedError.new());
    }
    pushBackdropFilter(filter, opts) {
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      dart.throw(new core.UnimplementedError.new());
    }
    pushShaderMask(shader, maskRect, blendMode, opts) {
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      dart.throw(new core.UnimplementedError.new());
    }
    pushPhysicalShape(opts) {
      let path = opts && 'path' in opts ? opts.path : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : ui.Clip.none;
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      return this[_pushSurface](new ui.PersistedPhysicalShape.new(webOnlyPaintedBy, path, elevation, color.value, (() => {
        let l = shadowColor == null ? null : shadowColor.value;
        return l != null ? l : 4278190080;
      })(), clipBehavior));
    }
    addRetained(retainedLayer) {
      let retainedSurface = ui.PersistedContainerSurface._check(retainedLayer);
      if (retainedSurface.rootElement != null) {
        retainedSurface.reuseStrategy = ui.PersistedSurfaceReuseStrategy.retain;
      }
      this[_adoptSurface](retainedSurface);
    }
    pop() {
      if (!dart.test(this[_surfaceStack][$isNotEmpty])) dart.assertFailed();
      this[_surfaceStack][$removeLast]();
    }
    addPerformanceOverlay(enabledOptions, bounds, opts) {
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      this[_addPerformanceOverlay](enabledOptions, bounds.left, bounds.right, bounds.top, bounds.bottom, webOnlyPaintedBy);
    }
    [_addPerformanceOverlay](enabledOptions, left, right, top, bottom, webOnlyPaintedBy) {
      if (!dart.test(ui._webOnlyDidWarnAboutPerformanceOverlay)) {
        ui._webOnlyDidWarnAboutPerformanceOverlay = true;
        html.window[$console].warn("The performance overlay isn't supported on the web");
      }
    }
    addPicture(offset, picture, opts) {
      let isComplexHint = opts && 'isComplexHint' in opts ? opts.isComplexHint : false;
      let willChangeHint = opts && 'willChangeHint' in opts ? opts.willChangeHint : false;
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      let hints = 0;
      if (dart.test(isComplexHint)) {
        hints = (hints | 1) >>> 0;
      }
      if (dart.test(willChangeHint)) {
        hints = (hints | 2) >>> 0;
      }
      this[_addPicture](offset.dx, offset.dy, picture, hints, {webOnlyPaintedBy: webOnlyPaintedBy});
    }
    [_addPicture](dx, dy, picture, hints, opts) {
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      this[_addSurface](ui.persistedPictureFactory(webOnlyPaintedBy, dx, dy, picture, hints));
    }
    addTexture(textureId, opts) {
      let offset = opts && 'offset' in opts ? opts.offset : ui.Offset.zero;
      let width = opts && 'width' in opts ? opts.width : 0.0;
      let height = opts && 'height' in opts ? opts.height : 0.0;
      let freeze = opts && 'freeze' in opts ? opts.freeze : false;
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      if (!(offset != null)) dart.assertFailed("Offset argument was null");
      this[_addTexture](offset.dx, offset.dy, width, height, textureId, webOnlyPaintedBy);
    }
    [_addTexture](dx, dy, width, height, textureId, webOnlyPaintedBy) {
      dart.throw(new core.UnimplementedError.new());
    }
    addPlatformView(viewId, opts) {
      let offset = opts && 'offset' in opts ? opts.offset : ui.Offset.zero;
      let width = opts && 'width' in opts ? opts.width : 0.0;
      let height = opts && 'height' in opts ? opts.height : 0.0;
      if (!(offset != null)) dart.assertFailed("Offset argument was null");
      this[_addPlatformView](offset.dx, offset.dy, width, height, viewId);
    }
    [_addPlatformView](dx, dy, width, height, viewId) {
      dart.throw(new core.UnimplementedError.new());
    }
    addChildScene(opts) {
      let offset = opts && 'offset' in opts ? opts.offset : ui.Offset.zero;
      let width = opts && 'width' in opts ? opts.width : 0.0;
      let height = opts && 'height' in opts ? opts.height : 0.0;
      let sceneHost = opts && 'sceneHost' in opts ? opts.sceneHost : null;
      let hitTestable = opts && 'hitTestable' in opts ? opts.hitTestable : true;
      this[_addChildScene](offset.dx, offset.dy, width, height, sceneHost, hitTestable);
    }
    [_addChildScene](dx, dy, width, height, sceneHost, hitTestable) {
      dart.throw(new core.UnimplementedError.new());
    }
    setRasterizerTracingThreshold(frameInterval) {}
    setCheckerboardRasterCacheImages(checkerboard) {}
    setCheckerboardOffscreenLayers(checkerboard) {}
    static get debugLastFrameScene() {
      let result = null;
      if (!dart.test(dart.fn(() => {
        result = ui.SceneBuilder._lastFrameScene;
        return true;
      }, VoidTobool())())) dart.assertFailed();
      return result;
    }
    static debugForgetFrameScene() {
      let t = ui.SceneBuilder._lastFrameScene;
      let t$ = t == null ? null : t.rootElement;
      t$ == null ? null : t$[$remove]();
      ui.SceneBuilder._lastFrameScene = null;
      ui._clipCounter = 0;
      ui._recycledCanvases[$clear]();
    }
    build() {
      if (!dart.test(dart.fn(() => {
        ui.SceneBuilder._debugFrameNumber = dart.notNull(ui.SceneBuilder._debugFrameNumber) + 1;
        return true;
      }, VoidTobool())())) dart.assertFailed();
      if (ui.SceneBuilder._lastFrameScene == null) {
        this[_persistedScene].build();
      } else {
        this[_persistedScene].update(ui.SceneBuilder._lastFrameScene);
      }
      if (dart.test(ui._paintQueue[$isNotEmpty])) {
        if (dart.notNull(ui._paintQueue[$length]) > 1) {
          ui._paintQueue[$sort](dart.fn((a, b) => {
            let aSize = dart.notNull(a.canvasSize.height) * dart.notNull(a.canvasSize.width);
            let bSize = dart.notNull(b.canvasSize.height) * dart.notNull(b.canvasSize.width);
            return bSize[$compareTo](aSize);
          }, _PaintRequestAnd_PaintRequestToint()));
        }
        for (let request of ui._paintQueue) {
          request.paintCallback();
        }
        ui._paintQueue = JSArrayOf_PaintRequest().of([]);
      }
      if (dart.test(ui._retainedSurfaces[$isNotEmpty])) {
        for (let i = 0; i < dart.notNull(ui._retainedSurfaces[$length]); i++) {
          ui._retainedSurfaces[$_get](i).reuseStrategy = ui.PersistedSurfaceReuseStrategy.match;
        }
        ui._retainedSurfaces = JSArrayOfPersistedSurface().of([]);
      }
      if (false) {
        ui._debugPrintSurfaceStats(this[_persistedScene], ui.SceneBuilder._debugFrameNumber);
        ui._debugRepaintSurfaceStatsOverlay(this[_persistedScene]);
      }
      if (!dart.test(dart.fn(() => {
        let validationErrors = JSArrayOfString().of([]);
        this[_persistedScene].debugValidate(validationErrors);
        if (dart.test(validationErrors[$isNotEmpty])) {
          core.print("ENGINE LAYER TREE INCONSISTENT:\n" + dart.str(IterableOfString()._check(validationErrors[$map](core.String, dart.fn(e => "  - " + dart.str(e) + "\n", StringToString())))[$join]()));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed();
      ui.SceneBuilder._lastFrameScene = this[_persistedScene];
      if (false) {
        ui._surfaceStats = new (LinkedMapOfPersistedSurface$_DebugSurfaceStats()).new();
      }
      return new ui.Scene.__(this[_persistedScene].rootElement);
    }
  };
  (ui.SceneBuilder.__ = function() {
    this[_surfaceStack] = JSArrayOfPersistedContainerSurface().of([]);
    this[_surfaceStack][$add](new ui.PersistedScene.new());
  }).prototype = ui.SceneBuilder.prototype;
  dart.addTypeTests(ui.SceneBuilder);
  dart.setMethodSignature(ui.SceneBuilder, () => ({
    __proto__: dart.getMethods(ui.SceneBuilder.__proto__),
    [_pushSurface]: dart.fnType(ui.EngineLayer, [ui.PersistedContainerSurface]),
    [_addSurface]: dart.fnType(dart.void, [ui.PersistedSurface]),
    [_adoptSurface]: dart.fnType(dart.void, [ui.PersistedSurface]),
    pushOffset: dart.fnType(ui.EngineLayer, [core.double, core.double], {webOnlyPaintedBy: core.Object}),
    pushTransform: dart.fnType(ui.EngineLayer, [typed_data.Float64List], {webOnlyPaintedBy: core.Object}),
    pushClipRect: dart.fnType(ui.EngineLayer, [ui.Rect], {clipBehavior: ui.Clip, webOnlyPaintedBy: core.Object}),
    pushClipRRect: dart.fnType(ui.EngineLayer, [ui.RRect], {clipBehavior: ui.Clip, webOnlyPaintedBy: core.Object}),
    pushClipPath: dart.fnType(ui.EngineLayer, [ui.Path], {clipBehavior: ui.Clip, webOnlyPaintedBy: core.Object}),
    pushOpacity: dart.fnType(ui.EngineLayer, [core.int], {webOnlyPaintedBy: core.Object, offset: ui.Offset}),
    pushColorFilter: dart.fnType(ui.EngineLayer, [ui.Color, ui.BlendMode], {webOnlyPaintedBy: core.Object}),
    pushBackdropFilter: dart.fnType(ui.EngineLayer, [ui.ImageFilter], {webOnlyPaintedBy: core.Object}),
    pushShaderMask: dart.fnType(ui.EngineLayer, [ui.Shader, ui.Rect, ui.BlendMode], {webOnlyPaintedBy: core.Object}),
    pushPhysicalShape: dart.fnType(ui.EngineLayer, [], {path: ui.Path, elevation: core.double, color: ui.Color, shadowColor: ui.Color, clipBehavior: ui.Clip, webOnlyPaintedBy: core.Object}),
    addRetained: dart.fnType(dart.void, [ui.EngineLayer]),
    pop: dart.fnType(dart.void, []),
    addPerformanceOverlay: dart.fnType(dart.void, [core.int, ui.Rect], {webOnlyPaintedBy: core.Object}),
    [_addPerformanceOverlay]: dart.fnType(dart.void, [core.int, core.double, core.double, core.double, core.double, core.Object]),
    addPicture: dart.fnType(dart.void, [ui.Offset, ui.Picture], {isComplexHint: core.bool, willChangeHint: core.bool, webOnlyPaintedBy: core.Object}),
    [_addPicture]: dart.fnType(dart.void, [core.double, core.double, ui.Picture, core.int], {webOnlyPaintedBy: core.Object}),
    addTexture: dart.fnType(dart.void, [core.int], {offset: ui.Offset, width: core.double, height: core.double, freeze: core.bool, webOnlyPaintedBy: core.Object}),
    [_addTexture]: dart.fnType(dart.void, [core.double, core.double, core.double, core.double, core.int, core.Object]),
    addPlatformView: dart.fnType(dart.void, [core.int], {offset: ui.Offset, width: core.double, height: core.double}),
    [_addPlatformView]: dart.fnType(dart.void, [core.double, core.double, core.double, core.double, core.int]),
    addChildScene: dart.fnType(dart.void, [], {offset: ui.Offset, width: core.double, height: core.double, sceneHost: ui.SceneHost, hitTestable: core.bool}),
    [_addChildScene]: dart.fnType(dart.void, [core.double, core.double, core.double, core.double, ui.SceneHost, core.bool]),
    setRasterizerTracingThreshold: dart.fnType(dart.void, [core.int]),
    setCheckerboardRasterCacheImages: dart.fnType(dart.void, [core.bool]),
    setCheckerboardOffscreenLayers: dart.fnType(dart.void, [core.bool]),
    build: dart.fnType(ui.Scene, [])
  }));
  dart.setGetterSignature(ui.SceneBuilder, () => ({
    __proto__: dart.getGetters(ui.SceneBuilder.__proto__),
    [_persistedScene]: ui.PersistedScene,
    [_currentSurface]: ui.PersistedContainerSurface
  }));
  dart.setFieldSignature(ui.SceneBuilder, () => ({
    __proto__: dart.getFields(ui.SceneBuilder.__proto__),
    [_surfaceStack]: dart.finalFieldType(ListOfPersistedContainerSurface())
  }));
  dart.defineLazy(ui.SceneBuilder, {
    /*ui.SceneBuilder.webOnlyUseLayerSceneBuilder*/get webOnlyUseLayerSceneBuilder() {
      return false;
    },
    /*ui.SceneBuilder._lastFrameScene*/get _lastFrameScene() {
      return null;
    },
    set _lastFrameScene(_) {},
    /*ui.SceneBuilder._debugFrameNumber*/get _debugFrameNumber() {
      return 0;
    },
    set _debugFrameNumber(_) {}
  });
  ui._DebugSurfaceStats = class _DebugSurfaceStats extends core.Object {
    aggregate(oneSurfaceStats) {
      this.retainSurfaceCount = dart.notNull(this.retainSurfaceCount) + dart.notNull(oneSurfaceStats.retainSurfaceCount);
      this.reuseElementCount = dart.notNull(this.reuseElementCount) + dart.notNull(oneSurfaceStats.reuseElementCount);
      this.paintCount = dart.notNull(this.paintCount) + dart.notNull(oneSurfaceStats.paintCount);
      this.paintPixelCount = dart.notNull(this.paintPixelCount) + dart.notNull(oneSurfaceStats.paintPixelCount);
      this.reuseCanvasCount = dart.notNull(this.reuseCanvasCount) + dart.notNull(oneSurfaceStats.reuseCanvasCount);
      this.allocateBitmapCanvasCount = dart.notNull(this.allocateBitmapCanvasCount) + dart.notNull(oneSurfaceStats.allocateBitmapCanvasCount);
      this.allocatedBitmapSizeInPixels = dart.notNull(this.allocatedBitmapSizeInPixels) + dart.notNull(oneSurfaceStats.allocatedBitmapSizeInPixels);
      this.allocatedDomNodeCount = dart.notNull(this.allocatedDomNodeCount) + dart.notNull(oneSurfaceStats.allocatedDomNodeCount);
    }
  };
  (ui._DebugSurfaceStats.new = function(surface) {
    this.retainSurfaceCount = 0;
    this.reuseElementCount = 0;
    this.paintCount = 0;
    this.paintPixelCount = 0;
    this.reuseCanvasCount = 0;
    this.allocateBitmapCanvasCount = 0;
    this.allocatedBitmapSizeInPixels = 0;
    this.allocatedDomNodeCount = 0;
    this.surface = surface;
  }).prototype = ui._DebugSurfaceStats.prototype;
  dart.addTypeTests(ui._DebugSurfaceStats);
  dart.setMethodSignature(ui._DebugSurfaceStats, () => ({
    __proto__: dart.getMethods(ui._DebugSurfaceStats.__proto__),
    aggregate: dart.fnType(dart.void, [ui._DebugSurfaceStats])
  }));
  dart.setFieldSignature(ui._DebugSurfaceStats, () => ({
    __proto__: dart.getFields(ui._DebugSurfaceStats.__proto__),
    surface: dart.finalFieldType(ui.PersistedSurface),
    retainSurfaceCount: dart.fieldType(core.int),
    reuseElementCount: dart.fieldType(core.int),
    paintCount: dart.fieldType(core.int),
    paintPixelCount: dart.fieldType(core.int),
    reuseCanvasCount: dart.fieldType(core.int),
    allocateBitmapCanvasCount: dart.fieldType(core.int),
    allocatedBitmapSizeInPixels: dart.fieldType(core.int),
    allocatedDomNodeCount: dart.fieldType(core.int)
  }));
  dart.defineLazy(ui, {
    /*ui._surfaceStats*/get _surfaceStats() {
      return new (LinkedMapOfPersistedSurface$_DebugSurfaceStats()).new();
    },
    set _surfaceStats(_) {},
    /*ui._surfaceStatsTimeline*/get _surfaceStatsTimeline() {
      return JSArrayOfMapOfPersistedSurface$_DebugSurfaceStats().of([]);
    },
    set _surfaceStatsTimeline(_) {}
  });
  ui._surfaceStatsFor = function(surface) {
    if (!false) {
      dart.throw(core.Exception.new("_surfaceStatsFor is only available when _debugExplainSurfaceStats is set to true."));
    }
    return ui._surfaceStats[$putIfAbsent](surface, dart.fn(() => new ui._DebugSurfaceStats.new(surface), VoidTo_DebugSurfaceStats()));
  };
  dart.defineLazy(ui, {
    /*ui._debugSurfaceStatsOverlayCtx*/get _debugSurfaceStatsOverlayCtx() {
      return null;
    },
    set _debugSurfaceStatsOverlayCtx(_) {}
  });
  ui._debugRepaintSurfaceStatsOverlay = function(scene) {
    let overlayWidth = html.window.innerWidth;
    let rowHeight = 30;
    let rowCount = 4;
    let overlayHeight = rowHeight * rowCount;
    let strokeWidth = 2;
    ui._surfaceStatsTimeline[$add](ui._surfaceStats);
    while (dart.notNull(ui._surfaceStatsTimeline[$length]) > dart.notNull(overlayWidth) / strokeWidth) {
      ui._surfaceStatsTimeline[$removeAt](0);
    }
    if (ui._debugSurfaceStatsOverlayCtx == null) {
      let _debugSurfaceStatsOverlay = html.CanvasElement.new({width: overlayWidth, height: overlayHeight});
      _debugSurfaceStatsOverlay.style[$position] = "fixed";
      _debugSurfaceStatsOverlay.style[$left] = "0";
      _debugSurfaceStatsOverlay.style[$top] = "0";
      _debugSurfaceStatsOverlay.style[$zIndex] = "1000";
      _debugSurfaceStatsOverlay.style[$opacity] = "0.8";
      ui._debugSurfaceStatsOverlayCtx = _debugSurfaceStatsOverlay[$context2D];
      html.document.body[$append](_debugSurfaceStatsOverlay);
    }
    let _ = ui._debugSurfaceStatsOverlayCtx;
    _.fillStyle = "black";
    _.beginPath();
    _.rect(0, 0, overlayWidth, overlayHeight);
    _.fill();
    let physicalScreenWidth = dart.notNull(html.window.innerWidth) * dart.notNull(html.window.devicePixelRatio);
    let physicalScreenHeight = dart.notNull(html.window.innerHeight) * dart.notNull(html.window.devicePixelRatio);
    let physicsScreenPixelCount = dart.notNull(physicalScreenWidth) * dart.notNull(physicalScreenHeight);
    let totalDomNodeCount = scene.rootElement[$querySelectorAll](html.Element, "*").length;
    for (let i = 0; i < dart.notNull(ui._surfaceStatsTimeline[$length]); i++) {
      let totals = new ui._DebugSurfaceStats.new(null);
      let pixelCount = 0;
      ui._surfaceStatsTimeline[$_get](i)[$values][$forEach](dart.fn(oneSurfaceStats => {
        totals.aggregate(oneSurfaceStats);
        if (ui.PersistedPicture.is(oneSurfaceStats.surface)) {
          let picture = ui.PersistedPicture._check(oneSurfaceStats.surface);
          pixelCount = pixelCount + dart.notNull(picture.bitmapPixelCount);
        }
      }, _DebugSurfaceStatsToNull()));
      let repaintRate = dart.notNull(totals.paintPixelCount) / pixelCount;
      let domAllocationRate = dart.notNull(totals.allocatedDomNodeCount) / dart.notNull(totalDomNodeCount);
      let bitmapAllocationRate = dart.notNull(totals.allocatedBitmapSizeInPixels) / physicsScreenPixelCount;
      let surfaceRetainRate = dart.notNull(totals.retainSurfaceCount) / dart.notNull(ui._surfaceStatsTimeline[$_get](i)[$length]);
      let _$ = ui._debugSurfaceStatsOverlayCtx;
      _$.lineWidth = strokeWidth;
      _$.strokeStyle = "red";
      _$.beginPath();
      _$.moveTo(strokeWidth * i, rowHeight);
      _$.lineTo(strokeWidth * i, rowHeight * (1 - repaintRate));
      _$.stroke();
      let _$0 = ui._debugSurfaceStatsOverlayCtx;
      _$0.lineWidth = strokeWidth;
      _$0.strokeStyle = "red";
      _$0.beginPath();
      _$0.moveTo(strokeWidth * i, 2 * rowHeight);
      _$0.lineTo(strokeWidth * i, rowHeight * (2 - domAllocationRate));
      _$0.stroke();
      let _$1 = ui._debugSurfaceStatsOverlayCtx;
      _$1.lineWidth = strokeWidth;
      _$1.strokeStyle = "red";
      _$1.beginPath();
      _$1.moveTo(strokeWidth * i, 3 * rowHeight);
      _$1.lineTo(strokeWidth * i, rowHeight * (3 - bitmapAllocationRate));
      _$1.stroke();
      let _$2 = ui._debugSurfaceStatsOverlayCtx;
      _$2.lineWidth = strokeWidth;
      _$2.strokeStyle = "green";
      _$2.beginPath();
      _$2.moveTo(strokeWidth * i, 4 * rowHeight);
      _$2.lineTo(strokeWidth * i, rowHeight * (4 - surfaceRetainRate));
      _$2.stroke();
    }
    let _$3 = ui._debugSurfaceStatsOverlayCtx;
    _$3.font = "normal normal 14px sans-serif";
    _$3.fillStyle = "white";
    _$3[$fillText]("Repaint rate", 5, rowHeight - 5);
    _$3[$fillText]("DOM alloc rate", 5, 2 * rowHeight - 5);
    _$3[$fillText]("Bitmap alloc rate", 5, 3 * rowHeight - 5);
    _$3[$fillText]("Retain rate", 5, 4 * rowHeight - 5);
    for (let i = 1; i <= rowCount; i++) {
      let _$4 = ui._debugSurfaceStatsOverlayCtx;
      _$4.lineWidth = 1;
      _$4.strokeStyle = "blue";
      _$4.beginPath();
      _$4.moveTo(0, overlayHeight - rowHeight * i);
      _$4.lineTo(overlayWidth, overlayHeight - rowHeight * i);
      _$4.stroke();
    }
  };
  ui._debugPrintSurfaceStats = function(scene, frameNumber) {
    let pictureCount = 0;
    let paintCount = 0;
    let bitmapCanvasCount = 0;
    let bitmapReuseCount = 0;
    let bitmapAllocationCount = 0;
    let bitmapPaintCount = 0;
    let bitmapPixelsAllocated = 0;
    let domCanvasCount = 0;
    let domPaintCount = 0;
    let surfaceRetainCount = 0;
    let elementReuseCount = 0;
    let totalAllocatedDomNodeCount = 0;
    function countReusesRecursively(surface) {
      let stats = ui._surfaceStatsFor(surface);
      if (!(stats != null)) dart.assertFailed();
      surfaceRetainCount = surfaceRetainCount + dart.notNull(stats.retainSurfaceCount);
      elementReuseCount = elementReuseCount + dart.notNull(stats.reuseElementCount);
      totalAllocatedDomNodeCount = totalAllocatedDomNodeCount + dart.notNull(stats.allocatedDomNodeCount);
      if (ui.PersistedStandardPicture.is(surface)) {
        pictureCount = pictureCount + 1;
        paintCount = paintCount + dart.notNull(stats.paintCount);
        if (src__engine.DomCanvas.is(surface[_canvas])) {
          domCanvasCount++;
          domPaintCount = domPaintCount + dart.notNull(stats.paintCount);
        }
        if (src__engine.BitmapCanvas.is(surface[_canvas])) {
          bitmapCanvasCount++;
          bitmapPaintCount = bitmapPaintCount + dart.notNull(stats.paintCount);
        }
        bitmapReuseCount = bitmapReuseCount + dart.notNull(stats.reuseCanvasCount);
        bitmapAllocationCount = bitmapAllocationCount + dart.notNull(stats.allocateBitmapCanvasCount);
        bitmapPixelsAllocated = bitmapPixelsAllocated + dart.notNull(stats.allocatedBitmapSizeInPixels);
      }
      surface.visitChildren(countReusesRecursively);
    }
    dart.fn(countReusesRecursively, PersistedSurfaceTovoid());
    scene.visitChildren(countReusesRecursively);
    let buf = new core.StringBuffer.new();
    buf.writeln("---------------------- FRAME #" + dart.str(frameNumber) + " -------------------------");
    buf.writeln("Surfaces retained: " + dart.str(surfaceRetainCount));
    buf.writeln("Elements reused: " + dart.str(elementReuseCount));
    buf.writeln("Elements allocated: " + dart.str(totalAllocatedDomNodeCount));
    buf.writeln("Pictures: " + dart.str(pictureCount));
    buf.writeln("  Painted: " + dart.str(paintCount));
    buf.writeln("  Skipped painting: " + dart.str(pictureCount - paintCount));
    buf.writeln("DOM canvases:");
    buf.writeln("  Painted: " + dart.str(domPaintCount));
    buf.writeln("  Skipped painting: " + dart.str(domCanvasCount - domPaintCount));
    buf.writeln("Bitmap canvases: " + dart.str(bitmapCanvasCount));
    buf.writeln("  Painted: " + dart.str(bitmapPaintCount));
    buf.writeln("  Skipped painting: " + dart.str(bitmapCanvasCount - bitmapPaintCount));
    buf.writeln("  Reused: " + dart.str(bitmapReuseCount));
    buf.writeln("  Allocated: " + dart.str(bitmapAllocationCount));
    buf.writeln("  Allocated pixels: " + dart.str(bitmapPixelsAllocated));
    buf.writeln("  Available for reuse: " + dart.str(ui._recycledCanvases[$length]));
    async.scheduleMicrotask(dart.fn(() => {
      let canvasElements = html.document[$querySelectorAll](html.Element, "canvas");
      let canvasInfo = new core.StringBuffer.new();
      let pixelCount = IterableOfint()._check(ListOfCanvasElement()._check(canvasElements.cast(html.CanvasElement))[$map](core.int, dart.fn(e => {
        let pixels = dart.notNull(e.width) * dart.notNull(e.height);
        canvasInfo.writeln("    - " + dart.str(e.width) + " x " + dart.str(e.height) + " = " + dart.str(pixels) + " pixels");
        return pixels;
      }, CanvasElementToint())))[$fold](core.int, 0, dart.fn((total, pixels) => dart.notNull(total) + dart.notNull(pixels), intAndintToint()));
      let physicalScreenWidth = dart.notNull(html.window.innerWidth) * dart.notNull(html.window.devicePixelRatio);
      let physicalScreenHeight = dart.notNull(html.window.innerHeight) * dart.notNull(html.window.devicePixelRatio);
      let physicsScreenPixelCount = dart.notNull(physicalScreenWidth) * dart.notNull(physicalScreenHeight);
      let screenPixelRatio = dart.notNull(pixelCount) / physicsScreenPixelCount;
      let screenDescription = "1 screen is " + dart.str(physicalScreenWidth) + " x " + dart.str(physicalScreenHeight) + " = " + dart.str(physicsScreenPixelCount) + " pixels";
      let canvasPixelDescription = dart.str(pixelCount) + " (" + screenPixelRatio[$toStringAsFixed](2) + " x screens";
      buf.writeln("  Elements: " + dart.str(canvasElements.length));
      buf.writeln(canvasInfo);
      buf.writeln("  Pixels: " + canvasPixelDescription + "; " + screenDescription + ")");
      buf.writeln("-----------------------------------------------------------");
      let screenPixelRatioTooHigh = screenPixelRatio > 6.0;
      if (screenPixelRatioTooHigh) {
        core.print("WARNING: pixel/screen ratio too high (" + screenPixelRatio[$toStringAsFixed](2) + "x)");
      }
      core.print(buf);
    }, VoidToNull()));
  };
  ui.EngineLayer = class EngineLayer extends core.Object {};
  (ui.EngineLayer.new = function() {
  }).prototype = ui.EngineLayer.prototype;
  dart.addTypeTests(ui.EngineLayer);
  ui.SceneHost = class SceneHost extends core.Object {
    dispose() {}
  };
  (ui.SceneHost.new = function(exportTokenHandle) {
  }).prototype = ui.SceneHost.prototype;
  dart.addTypeTests(ui.SceneHost);
  dart.setMethodSignature(ui.SceneHost, () => ({
    __proto__: dart.getMethods(ui.SceneHost.__proto__),
    dispose: dart.fnType(dart.void, [])
  }));
  ui.PersistedSurfaceReuseStrategy = class PersistedSurfaceReuseStrategy extends core.Object {
    toString() {
      return {
        0: "PersistedSurfaceReuseStrategy.match",
        1: "PersistedSurfaceReuseStrategy.retain"
      }[this.index];
    }
  };
  (ui.PersistedSurfaceReuseStrategy.new = function(x) {
    this.index = x;
  }).prototype = ui.PersistedSurfaceReuseStrategy.prototype;
  dart.addTypeTests(ui.PersistedSurfaceReuseStrategy);
  dart.setFieldSignature(ui.PersistedSurfaceReuseStrategy, () => ({
    __proto__: dart.getFields(ui.PersistedSurfaceReuseStrategy.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.PersistedSurfaceReuseStrategy, ['toString']);
  ui.PersistedSurfaceReuseStrategy.match = dart.const(new ui.PersistedSurfaceReuseStrategy.new(0));
  ui.PersistedSurfaceReuseStrategy.retain = dart.const(new ui.PersistedSurfaceReuseStrategy.new(1));
  ui.PersistedSurfaceReuseStrategy.values = dart.constList([ui.PersistedSurfaceReuseStrategy.match, ui.PersistedSurfaceReuseStrategy.retain], ui.PersistedSurfaceReuseStrategy);
  const _descendants = dart.privateName(ui, "_descendants");
  const _globalClip = dart.privateName(ui, "_globalClip");
  const _hasExactDescendants = dart.privateName(ui, "_hasExactDescendants");
  ui.PersistedSurface = class PersistedSurface extends core.Object {
    get reuseStrategy() {
      return this[reuseStrategy];
    }
    set reuseStrategy(value) {
      this[reuseStrategy] = value;
    }
    get rootElement() {
      return this[rootElement$];
    }
    set rootElement(value) {
      this[rootElement$] = value;
    }
    get childContainer() {
      return this.rootElement;
    }
    get parent() {
      return this[parent];
    }
    set parent(value) {
      this[parent] = value;
    }
    get paintedBy() {
      return this[paintedBy$];
    }
    set paintedBy(value) {
      super.paintedBy = value;
    }
    build() {
      if (!(this.rootElement == null)) dart.assertFailed();
      if (!(this.reuseStrategy !== ui.PersistedSurfaceReuseStrategy.retain)) dart.assertFailed();
      this.recomputeTransformAndClip();
      this.rootElement = this.createElement();
      if (false) {
        let o = ui._surfaceStatsFor(this);
        o.allocatedDomNodeCount = dart.notNull(o.allocatedDomNodeCount) + 1;
      }
      this.apply();
    }
    adoptElements(oldSurface) {
      ui.PersistedSurface._check(oldSurface);
      if (!(oldSurface.rootElement != null)) dart.assertFailed();
      this.rootElement = oldSurface.rootElement;
      if (false) {
        let o = ui._surfaceStatsFor(this);
        o.reuseElementCount = dart.notNull(o.reuseElementCount) + 1;
      }
    }
    update(oldSurface) {
      ui.PersistedSurface._check(oldSurface);
      if (!(oldSurface != null)) dart.assertFailed();
      if (!!(oldSurface === this)) dart.assertFailed();
      if (!(this.reuseStrategy !== ui.PersistedSurfaceReuseStrategy.retain)) dart.assertFailed();
      if (!(oldSurface.reuseStrategy !== ui.PersistedSurfaceReuseStrategy.retain)) dart.assertFailed();
      if (!(dart.test(this.isTotalMatchFor(oldSurface)) || dart.test(this.isFuzzyMatchFor(oldSurface)))) dart.assertFailed();
      this.recomputeTransformAndClip();
      this.adoptElements(oldSurface);
      oldSurface.rootElement = null;
      if (!(this.rootElement != null)) dart.assertFailed();
    }
    retain() {
      if (!(this.rootElement != null)) dart.assertFailed();
      this.recomputeTransformAndClip();
      if (false) {
        let o = ui._surfaceStatsFor(this);
        o.retainSurfaceCount = dart.notNull(o.retainSurfaceCount) + 1;
      }
    }
    recycle() {
      if (!(this.reuseStrategy !== ui.PersistedSurfaceReuseStrategy.retain)) dart.assertFailed();
      this.rootElement[$remove]();
      this.rootElement = null;
    }
    debugValidate(validationErrors) {
      if (this.rootElement == null) {
        validationErrors[$add](dart.str(this[$runtimeType]) + " has null element.");
      }
      if (this.reuseStrategy === ui.PersistedSurfaceReuseStrategy.retain) {
        validationErrors[$add](dart.str(this[$runtimeType]) + " is still scheduled to be retained at " + "the end of the frame.");
      }
    }
    isTotalMatchFor(other) {
      if (!(other != null)) dart.assertFailed();
      if (this.reuseStrategy === ui.PersistedSurfaceReuseStrategy.retain || other.reuseStrategy === ui.PersistedSurfaceReuseStrategy.retain) {
        return false;
      }
      return dart.equals(dart.runtimeType(other), this[$runtimeType]) && core.identical(other.paintedBy, this.paintedBy) && dart.test(this[_hasExactDescendants](other));
    }
    isFuzzyMatchFor(other) {
      if (!(other != null)) dart.assertFailed();
      if (this.reuseStrategy === ui.PersistedSurfaceReuseStrategy.retain || other.reuseStrategy === ui.PersistedSurfaceReuseStrategy.retain) {
        return false;
      }
      return dart.equals(dart.runtimeType(other), this[$runtimeType]);
    }
    [_hasExactDescendants](other) {
      if ((this[_descendants] == null || dart.test(this[_descendants].isEmpty)) && (other[_descendants] == null || dart.test(other[_descendants].isEmpty))) {
        return true;
      } else if (this[_descendants] == null || other[_descendants] == null) {
        return false;
      }
      if (this[_descendants].length != other[_descendants].length) {
        return false;
      }
      return this[_descendants].containsAll(other[_descendants]);
    }
    defaultCreateElement(tagName) {
      let element = html.Element.tag(tagName);
      element.style[$position] = "absolute";
      if (dart.test(src__engine.assertionsEnabled)) {
        element[$setAttribute]("created-by", dart.str(dart.runtimeType(this.paintedBy)));
      }
      return element;
    }
    get transform() {
      return this[_transform];
    }
    get globalClip() {
      return this[_globalClip];
    }
    recomputeTransformAndClip() {
      this[_transform] = this.parent[_transform];
      this[_globalClip] = this.parent[_globalClip];
    }
    debugPrint(buffer, indent) {
      if (this.rootElement != null) {
        buffer.write("  "[$times](indent) + "<" + this.rootElement.tagName[$toLowerCase]() + " ");
      } else {
        buffer.write("  "[$times](indent) + "<" + dart.str(this[$runtimeType]) + " recycled ");
      }
      this.debugPrintAttributes(buffer);
      buffer.writeln(">");
      this.debugPrintChildren(buffer, indent);
      if (this.rootElement != null) {
        buffer.writeln("  "[$times](indent) + "</" + this.rootElement.tagName[$toLowerCase]() + ">");
      } else {
        buffer.writeln("  "[$times](indent) + "</" + dart.str(this[$runtimeType]) + ">");
      }
    }
    debugPrintAttributes(buffer) {
      if (this.rootElement != null) {
        buffer.write("@" + dart.str(dart.hashCode(this.rootElement)) + " ");
      }
      buffer.write("painted-by=\"" + dart.str(dart.runtimeType(this.paintedBy)) + "\"");
    }
    debugPrintChildren(buffer, indent) {}
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        let log = new core.StringBuffer.new();
        this.debugPrint(log, 0);
        return log.toString();
      } else {
        return super.toString();
      }
    }
  };
  (ui.PersistedSurface.new = function(paintedBy) {
    this[reuseStrategy] = ui.PersistedSurfaceReuseStrategy.match;
    this[rootElement$] = null;
    this[parent] = null;
    this[_descendants] = null;
    this[_transform] = null;
    this[_globalClip] = null;
    this[paintedBy$] = paintedBy;
    if (!(paintedBy != null)) dart.assertFailed();
  }).prototype = ui.PersistedSurface.prototype;
  dart.addTypeTests(ui.PersistedSurface);
  const reuseStrategy = Symbol("PersistedSurface.reuseStrategy");
  const rootElement$ = Symbol("PersistedSurface.rootElement");
  const parent = Symbol("PersistedSurface.parent");
  const paintedBy$ = Symbol("PersistedSurface.paintedBy");
  ui.PersistedSurface[dart.implements] = () => [ui.EngineLayer];
  dart.setMethodSignature(ui.PersistedSurface, () => ({
    __proto__: dart.getMethods(ui.PersistedSurface.__proto__),
    build: dart.fnType(dart.void, []),
    adoptElements: dart.fnType(dart.void, [core.Object]),
    update: dart.fnType(dart.void, [core.Object]),
    retain: dart.fnType(dart.void, []),
    recycle: dart.fnType(dart.void, []),
    debugValidate: dart.fnType(dart.void, [core.List$(core.String)]),
    isTotalMatchFor: dart.fnType(core.bool, [ui.PersistedSurface]),
    isFuzzyMatchFor: dart.fnType(core.bool, [ui.PersistedSurface]),
    [_hasExactDescendants]: dart.fnType(core.bool, [ui.PersistedSurface]),
    defaultCreateElement: dart.fnType(html.Element, [core.String]),
    recomputeTransformAndClip: dart.fnType(dart.void, []),
    debugPrint: dart.fnType(dart.void, [core.StringBuffer, core.int]),
    debugPrintAttributes: dart.fnType(dart.void, [core.StringBuffer]),
    debugPrintChildren: dart.fnType(dart.void, [core.StringBuffer, core.int])
  }));
  dart.setGetterSignature(ui.PersistedSurface, () => ({
    __proto__: dart.getGetters(ui.PersistedSurface.__proto__),
    childContainer: html.Element,
    transform: src__engine.Matrix4,
    globalClip: ui.Rect
  }));
  dart.setFieldSignature(ui.PersistedSurface, () => ({
    __proto__: dart.getFields(ui.PersistedSurface.__proto__),
    reuseStrategy: dart.fieldType(ui.PersistedSurfaceReuseStrategy),
    rootElement: dart.fieldType(html.Element),
    parent: dart.fieldType(ui.PersistedContainerSurface),
    paintedBy: dart.finalFieldType(core.Object),
    [_descendants]: dart.fieldType(SetOfObject()),
    [_transform]: dart.fieldType(src__engine.Matrix4),
    [_globalClip]: dart.fieldType(ui.Rect)
  }));
  dart.defineExtensionMethods(ui.PersistedSurface, ['toString']);
  ui.PersistedLeafSurface = class PersistedLeafSurface extends ui.PersistedSurface {
    visitChildren(visitor) {}
  };
  (ui.PersistedLeafSurface.new = function(paintedBy) {
    ui.PersistedLeafSurface.__proto__.new.call(this, paintedBy);
  }).prototype = ui.PersistedLeafSurface.prototype;
  dart.addTypeTests(ui.PersistedLeafSurface);
  dart.setMethodSignature(ui.PersistedLeafSurface, () => ({
    __proto__: dart.getMethods(ui.PersistedLeafSurface.__proto__),
    visitChildren: dart.fnType(dart.void, [dart.fnType(dart.void, [ui.PersistedSurface])])
  }));
  const _children$ = dart.privateName(ui, "_children");
  const _updateChild = dart.privateName(ui, "_updateChild");
  ui.PersistedContainerSurface = class PersistedContainerSurface extends ui.PersistedSurface {
    visitChildren(visitor) {
      this[_children$][$forEach](visitor);
    }
    appendChild(child) {
      this[_children$][$add](child);
      child.parent = this;
      if (!core.identical(child.paintedBy, this.paintedBy)) {
        let container = this;
        while (container != null && core.identical(container.paintedBy, this.paintedBy)) {
          let t = container[_descendants];
          t == null ? container[_descendants] = new (_HashSetOfObject()).new() : t;
          container[_descendants].add(child.paintedBy);
          container = container.parent;
        }
      }
    }
    build() {
      super.build();
      let len = this[_children$][$length];
      let containerElement = this.childContainer;
      for (let i = 0; i < dart.notNull(len); i++) {
        let child = this[_children$][$_get](i);
        if (child.reuseStrategy === ui.PersistedSurfaceReuseStrategy.retain) {
          if (!(child.rootElement != null)) dart.assertFailed();
          ui._retainSurface(child);
        } else {
          child.build();
        }
        containerElement[$append](child.rootElement);
      }
    }
    [_updateChild](newChild, oldChild) {
      if (!(newChild.rootElement == null)) dart.assertFailed();
      if (!(dart.test(oldChild.isTotalMatchFor(newChild)) || dart.test(oldChild.isFuzzyMatchFor(newChild)))) dart.assertFailed();
      let oldElement = oldChild.rootElement;
      if (!(oldElement != null)) dart.assertFailed();
      newChild.update(oldChild);
      if (!(oldChild.rootElement == null)) dart.assertFailed();
      if (!(newChild.rootElement == oldElement)) dart.assertFailed();
    }
    update(oldContainer) {
      ui.PersistedContainerSurface._check(oldContainer);
      if (!(dart.test(this.isTotalMatchFor(oldContainer)) || dart.test(this.isFuzzyMatchFor(oldContainer)))) dart.assertFailed();
      super.update(oldContainer);
      let bottomInNew = dart.notNull(this[_children$][$length]) - 1;
      let bottomInOld = dart.notNull(oldContainer[_children$][$length]) - 1;
      let containerElement = this.childContainer;
      let nextSibling = null;
      const insertDomNodeIfMoved = newChild => {
        if (!(newChild.rootElement != null)) dart.assertFailed();
        if (!dart.equals(newChild.parent, this)) dart.assertFailed();
        let reparented = !dart.equals(newChild.rootElement[$parent], containerElement);
        let moved = reparented || !dart.equals(newChild.rootElement.nextElementSibling, nextSibling == null ? null : nextSibling.rootElement);
        if (moved) {
          if (nextSibling == null) {
            containerElement[$append](newChild.rootElement);
          } else {
            containerElement.insertBefore(newChild.rootElement, nextSibling.rootElement);
          }
        }
      };
      dart.fn(insertDomNodeIfMoved, PersistedSurfaceTovoid());
      while (bottomInNew >= 0 && bottomInOld >= 0) {
        let newChild = this[_children$][$_get](bottomInNew);
        if (newChild.reuseStrategy === ui.PersistedSurfaceReuseStrategy.retain) {
          insertDomNodeIfMoved(newChild);
          ui._retainSurface(newChild);
        } else {
          let oldChild = oldContainer[_children$][$_get](bottomInOld);
          let onlyChildren = this[_children$][$length] === 1 && oldContainer[_children$][$length] === 1;
          if (onlyChildren && dart.test(oldChild.isFuzzyMatchFor(newChild)) || dart.test(oldChild.isTotalMatchFor(newChild))) {
            this[_updateChild](newChild, oldChild);
            bottomInOld--;
          } else {
            let searchPointer = bottomInOld - 1;
            let match = null;
            while (searchPointer >= 0) {
              let candidate = oldContainer[_children$][$_get](searchPointer);
              let isNotYetReused = candidate.rootElement != null;
              if (isNotYetReused && dart.test(candidate.isTotalMatchFor(newChild))) {
                match = candidate;
                break;
              }
              searchPointer--;
            }
            if (match != null) {
              this[_updateChild](newChild, match);
            } else {
              newChild.build();
            }
            insertDomNodeIfMoved(newChild);
          }
        }
        if (!(newChild.rootElement != null)) dart.assertFailed();
        bottomInNew--;
        nextSibling = newChild;
      }
      while (bottomInNew >= 0) {
        if (!(bottomInOld === -1)) dart.assertFailed();
        let newChild = this[_children$][$_get](bottomInNew);
        if (newChild.reuseStrategy === ui.PersistedSurfaceReuseStrategy.retain) {
          ui._retainSurface(newChild);
        } else {
          newChild.build();
        }
        insertDomNodeIfMoved(newChild);
        bottomInNew--;
        if (!(newChild.rootElement != null)) dart.assertFailed();
        nextSibling = newChild;
      }
      let len = oldContainer[_children$][$length];
      for (let i = 0; i < dart.notNull(len); i++) {
        let oldChild = oldContainer[_children$][$_get](i);
        if (oldChild.rootElement != null && oldChild.reuseStrategy !== ui.PersistedSurfaceReuseStrategy.retain) {
          oldChild.recycle();
        }
      }
      if (!dart.test(dart.fn(() => {
        for (let i = 0; i < dart.notNull(oldContainer[_children$][$length]); i++) {
          if (oldContainer[_children$][$_get](i).reuseStrategy !== ui.PersistedSurfaceReuseStrategy.retain) {
            if (!(oldContainer[_children$][$_get](i).rootElement == null)) dart.assertFailed();
            if (!(oldContainer[_children$][$_get](i).childContainer == null)) dart.assertFailed();
          }
        }
        for (let i = 0; i < dart.notNull(this[_children$][$length]); i++) {
          if (!(this[_children$][$_get](i).rootElement != null)) dart.assertFailed();
          if (!dart.equals(this[_children$][$_get](i).rootElement[$parent], containerElement)) dart.assertFailed();
        }
        return true;
      }, VoidTobool())())) dart.assertFailed();
    }
    retain() {
      super.retain();
      let len = this[_children$][$length];
      for (let i = 0; i < dart.notNull(len); i++) {
        this[_children$][$_get](i).retain();
      }
    }
    recycle() {
      for (let i = 0; i < dart.notNull(this[_children$][$length]); i++) {
        let child = this[_children$][$_get](i);
        if (child.reuseStrategy !== ui.PersistedSurfaceReuseStrategy.retain) {
          child.recycle();
        }
      }
      super.recycle();
    }
    debugValidate(validationErrors) {
      super.debugValidate(validationErrors);
      for (let i = 0; i < dart.notNull(this[_children$][$length]); i++) {
        this[_children$][$_get](i).debugValidate(validationErrors);
      }
    }
    debugPrintChildren(buffer, indent) {
      super.debugPrintChildren(buffer, indent);
      for (let i = 0; i < dart.notNull(this[_children$][$length]); i++) {
        this[_children$][$_get](i).debugPrint(buffer, dart.notNull(indent) + 1);
      }
    }
  };
  (ui.PersistedContainerSurface.new = function(paintedBy) {
    this[_children$] = JSArrayOfPersistedSurface().of([]);
    ui.PersistedContainerSurface.__proto__.new.call(this, paintedBy);
  }).prototype = ui.PersistedContainerSurface.prototype;
  dart.addTypeTests(ui.PersistedContainerSurface);
  dart.setMethodSignature(ui.PersistedContainerSurface, () => ({
    __proto__: dart.getMethods(ui.PersistedContainerSurface.__proto__),
    visitChildren: dart.fnType(dart.void, [dart.fnType(dart.void, [ui.PersistedSurface])]),
    appendChild: dart.fnType(dart.void, [ui.PersistedSurface]),
    [_updateChild]: dart.fnType(dart.void, [ui.PersistedSurface, ui.PersistedSurface])
  }));
  dart.setFieldSignature(ui.PersistedContainerSurface, () => ({
    __proto__: dart.getFields(ui.PersistedContainerSurface.__proto__),
    [_children$]: dart.finalFieldType(ListOfPersistedSurface())
  }));
  let const$;
  ui.PersistedScene = class PersistedScene extends ui.PersistedContainerSurface {
    isTotalMatchFor(other) {
      if (!ui.PersistedScene.is(other)) dart.assertFailed();
      return true;
    }
    recomputeTransformAndClip() {
      let screenWidth = html.window.innerWidth[$toDouble]();
      let screenHeight = html.window.innerHeight[$toDouble]();
      this[_globalClip] = new ui.Rect.fromLTRB(0, 0, screenWidth, screenHeight);
    }
    createElement() {
      return this.defaultCreateElement("flt-scene");
    }
    apply() {}
  };
  (ui.PersistedScene.new = function() {
    ui.PersistedScene.__proto__.new.call(this, const$ || (const$ = dart.const(new core.Object.new())));
    this[_transform] = src__engine.Matrix4.identity();
  }).prototype = ui.PersistedScene.prototype;
  dart.addTypeTests(ui.PersistedScene);
  dart.setMethodSignature(ui.PersistedScene, () => ({
    __proto__: dart.getMethods(ui.PersistedScene.__proto__),
    createElement: dart.fnType(html.Element, []),
    apply: dart.fnType(dart.void, [])
  }));
  ui.PersistedTransform = class PersistedTransform extends ui.PersistedContainerSurface {
    get matrix4() {
      return this[matrix4$];
    }
    set matrix4(value) {
      super.matrix4 = value;
    }
    recomputeTransformAndClip() {
      this[_transform] = this.parent[_transform].multiplied(new src__engine.Matrix4.fromFloat64List(this.matrix4));
      this[_globalClip] = this.parent[_globalClip];
    }
    createElement() {
      let _ = this.defaultCreateElement("flt-transform");
      _.style[$transformOrigin] = "0 0 0";
      return _;
    }
    apply() {
      this.rootElement.style[$transform] = src__engine.float64ListToCssTransform(this.matrix4);
    }
    update(oldSurface) {
      ui.PersistedTransform._check(oldSurface);
      super.update(oldSurface);
      if (oldSurface.matrix4 == this.matrix4) {
        return;
      }
      let matrixChanged = false;
      for (let i = 0; i < dart.notNull(this.matrix4[$length]); i++) {
        if (this.matrix4[$_get](i) != oldSurface.matrix4[$_get](i)) {
          matrixChanged = true;
          break;
        }
      }
      if (matrixChanged) {
        this.apply();
      }
    }
  };
  (ui.PersistedTransform.new = function(paintedBy, matrix4) {
    this[matrix4$] = matrix4;
    ui.PersistedTransform.__proto__.new.call(this, paintedBy);
  }).prototype = ui.PersistedTransform.prototype;
  dart.addTypeTests(ui.PersistedTransform);
  const matrix4$ = Symbol("PersistedTransform.matrix4");
  dart.setMethodSignature(ui.PersistedTransform, () => ({
    __proto__: dart.getMethods(ui.PersistedTransform.__proto__),
    createElement: dart.fnType(html.Element, []),
    apply: dart.fnType(dart.void, [])
  }));
  dart.setFieldSignature(ui.PersistedTransform, () => ({
    __proto__: dart.getFields(ui.PersistedTransform.__proto__),
    matrix4: dart.finalFieldType(typed_data.Float64List)
  }));
  ui.PersistedOffset = class PersistedOffset extends ui.PersistedContainerSurface {
    get dx() {
      return this[dx$];
    }
    set dx(value) {
      super.dx = value;
    }
    get dy() {
      return this[dy$];
    }
    set dy(value) {
      super.dy = value;
    }
    recomputeTransformAndClip() {
      this[_transform] = this.parent[_transform];
      if (this.dx !== 0.0 || this.dy !== 0.0) {
        this[_transform] = this[_transform].clone();
        this[_transform].translate(this.dx, this.dy);
      }
      this[_globalClip] = this.parent[_globalClip];
    }
    createElement() {
      let _ = this.defaultCreateElement("flt-offset");
      _.style[$transformOrigin] = "0 0 0";
      return _;
    }
    apply() {
      this.rootElement.style[$transform] = "translate(" + dart.str(this.dx) + "px, " + dart.str(this.dy) + "px)";
    }
    update(oldSurface) {
      ui.PersistedOffset._check(oldSurface);
      super.update(oldSurface);
      if (oldSurface.dx != this.dx || oldSurface.dy != this.dy) {
        this.apply();
      }
    }
  };
  (ui.PersistedOffset.new = function(paintedBy, dx, dy) {
    this[dx$] = dx;
    this[dy$] = dy;
    ui.PersistedOffset.__proto__.new.call(this, paintedBy);
  }).prototype = ui.PersistedOffset.prototype;
  dart.addTypeTests(ui.PersistedOffset);
  const dx$ = Symbol("PersistedOffset.dx");
  const dy$ = Symbol("PersistedOffset.dy");
  dart.setMethodSignature(ui.PersistedOffset, () => ({
    __proto__: dart.getMethods(ui.PersistedOffset.__proto__),
    createElement: dart.fnType(html.Element, []),
    apply: dart.fnType(dart.void, [])
  }));
  dart.setFieldSignature(ui.PersistedOffset, () => ({
    __proto__: dart.getFields(ui.PersistedOffset.__proto__),
    dx: dart.finalFieldType(core.double),
    dy: dart.finalFieldType(core.double)
  }));
  const _childContainer = dart.privateName(ui, "_childContainer");
  ui._DomClip = class _DomClip extends core.Object {};
  ui._DomClip[dart.mixinOn] = PersistedContainerSurface => class _DomClip extends PersistedContainerSurface {
    get childContainer() {
      return this[_childContainer];
    }
    adoptElements(oldSurface) {
      ui._DomClip._check(oldSurface);
      super.adoptElements(oldSurface);
      this[_childContainer] = oldSurface[_childContainer];
      oldSurface[_childContainer] = null;
    }
    createElement() {
      let element = this.defaultCreateElement("flt-clip");
      if (!dart.test(ui.debugShowClipLayers)) {
        element.style[$overflow] = "hidden";
      } else {
        element.style[$boxShadow] = "inset 0 0 10px green";
      }
      this[_childContainer] = html.Element.tag("flt-clip-interior");
      if (false) {
        let o = ui._surfaceStatsFor(this);
        o.allocatedDomNodeCount = dart.notNull(o.allocatedDomNodeCount) + 1;
      }
      this[_childContainer].style[$position] = "absolute";
      element[$append](this[_childContainer]);
      return element;
    }
    recycle() {
      super.recycle();
      this[_childContainer] = null;
    }
  };
  (ui._DomClip.new = function() {
    this[_childContainer] = null;
  }).prototype = ui._DomClip.prototype;
  dart.addTypeTests(ui._DomClip);
  ui._DomClip[dart.implements] = () => [ui.PersistedContainerSurface];
  dart.setMethodSignature(ui._DomClip, () => ({
    __proto__: dart.getMethods(ui._DomClip.__proto__),
    adoptElements: dart.fnType(dart.void, [core.Object]),
    createElement: dart.fnType(html.Element, [])
  }));
  dart.setGetterSignature(ui._DomClip, () => ({
    __proto__: dart.getGetters(ui._DomClip.__proto__),
    childContainer: html.Element
  }));
  dart.setFieldSignature(ui._DomClip, () => ({
    __proto__: dart.getFields(ui._DomClip.__proto__),
    [_childContainer]: dart.fieldType(html.Element)
  }));
  const PersistedContainerSurface__DomClip$ = class PersistedContainerSurface__DomClip extends ui.PersistedContainerSurface {};
  (PersistedContainerSurface__DomClip$.new = function(paintedBy) {
    ui._DomClip.new.call(this);
    PersistedContainerSurface__DomClip$.__proto__.new.call(this, paintedBy);
  }).prototype = PersistedContainerSurface__DomClip$.prototype;
  dart.applyMixin(PersistedContainerSurface__DomClip$, ui._DomClip);
  ui.PersistedClipRect = class PersistedClipRect extends PersistedContainerSurface__DomClip$ {
    get rect() {
      return this[rect$];
    }
    set rect(value) {
      super.rect = value;
    }
    recomputeTransformAndClip() {
      this[_transform] = this.parent[_transform];
      this[_globalClip] = this.parent[_globalClip].intersect(src__engine.localClipRectToGlobalClip({localClip: this.rect, transform: this[_transform]}));
    }
    createElement() {
      let _ = super.createElement();
      _[$setAttribute]("clip-type", "rect");
      return _;
    }
    apply() {
      this.rootElement.style[$transform] = "translate(" + dart.str(this.rect.left) + "px, " + dart.str(this.rect.top) + "px)";
      this.rootElement.style[$width] = dart.str(dart.notNull(this.rect.right) - dart.notNull(this.rect.left)) + "px";
      this.rootElement.style[$height] = dart.str(dart.notNull(this.rect.bottom) - dart.notNull(this.rect.top)) + "px";
      this.childContainer.style[$transform] = "translate(" + dart.str(-dart.notNull(this.rect.left)) + "px, " + dart.str(-dart.notNull(this.rect.top)) + "px)";
    }
    update(oldSurface) {
      ui.PersistedClipRect._check(oldSurface);
      super.update(oldSurface);
      if (!dart.equals(this.rect, oldSurface.rect)) {
        this.apply();
      }
    }
  };
  (ui.PersistedClipRect.new = function(paintedBy, rect) {
    this[rect$] = rect;
    ui.PersistedClipRect.__proto__.new.call(this, paintedBy);
  }).prototype = ui.PersistedClipRect.prototype;
  dart.addTypeTests(ui.PersistedClipRect);
  const rect$ = Symbol("PersistedClipRect.rect");
  dart.setMethodSignature(ui.PersistedClipRect, () => ({
    __proto__: dart.getMethods(ui.PersistedClipRect.__proto__),
    apply: dart.fnType(dart.void, [])
  }));
  dart.setFieldSignature(ui.PersistedClipRect, () => ({
    __proto__: dart.getFields(ui.PersistedClipRect.__proto__),
    rect: dart.finalFieldType(ui.Rect)
  }));
  const PersistedContainerSurface__DomClip$$ = class PersistedContainerSurface__DomClip extends ui.PersistedContainerSurface {};
  (PersistedContainerSurface__DomClip$$.new = function(paintedBy) {
    ui._DomClip.new.call(this);
    PersistedContainerSurface__DomClip$$.__proto__.new.call(this, paintedBy);
  }).prototype = PersistedContainerSurface__DomClip$$.prototype;
  dart.applyMixin(PersistedContainerSurface__DomClip$$, ui._DomClip);
  ui.PersistedClipRRect = class PersistedClipRRect extends PersistedContainerSurface__DomClip$$ {
    get rrect() {
      return this[rrect$];
    }
    set rrect(value) {
      super.rrect = value;
    }
    get clipBehavior() {
      return this[clipBehavior$];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    recomputeTransformAndClip() {
      this[_transform] = this.parent[_transform];
      this[_globalClip] = this.parent[_globalClip].intersect(src__engine.localClipRectToGlobalClip({localClip: this.rrect.outerRect, transform: this[_transform]}));
    }
    createElement() {
      let _ = super.createElement();
      _[$setAttribute]("clip-type", "rrect");
      return _;
    }
    apply() {
      this.rootElement.style[$transform] = "translate(" + dart.str(this.rrect.left) + "px, " + dart.str(this.rrect.top) + "px)";
      this.rootElement.style[$width] = dart.str(this.rrect.width) + "px";
      this.rootElement.style[$height] = dart.str(this.rrect.height) + "px";
      this.rootElement.style[$borderTopLeftRadius] = dart.str(this.rrect.tlRadiusX) + "px";
      this.rootElement.style[$borderTopRightRadius] = dart.str(this.rrect.trRadiusX) + "px";
      this.rootElement.style[$borderBottomRightRadius] = dart.str(this.rrect.brRadiusX) + "px";
      this.rootElement.style[$borderBottomLeftRadius] = dart.str(this.rrect.blRadiusX) + "px";
      this.childContainer.style[$transform] = "translate(" + dart.str(-dart.notNull(this.rrect.left)) + "px, " + dart.str(-dart.notNull(this.rrect.top)) + "px)";
    }
    update(oldSurface) {
      ui.PersistedClipRRect._check(oldSurface);
      super.update(oldSurface);
      if (!dart.equals(this.rrect, oldSurface.rrect)) {
        this.apply();
      }
    }
  };
  (ui.PersistedClipRRect.new = function(paintedBy, rrect, clipBehavior) {
    this[rrect$] = rrect;
    this[clipBehavior$] = clipBehavior;
    ui.PersistedClipRRect.__proto__.new.call(this, paintedBy);
  }).prototype = ui.PersistedClipRRect.prototype;
  dart.addTypeTests(ui.PersistedClipRRect);
  const rrect$ = Symbol("PersistedClipRRect.rrect");
  const clipBehavior$ = Symbol("PersistedClipRRect.clipBehavior");
  dart.setMethodSignature(ui.PersistedClipRRect, () => ({
    __proto__: dart.getMethods(ui.PersistedClipRRect.__proto__),
    apply: dart.fnType(dart.void, [])
  }));
  dart.setFieldSignature(ui.PersistedClipRRect, () => ({
    __proto__: dart.getFields(ui.PersistedClipRRect.__proto__),
    rrect: dart.finalFieldType(ui.RRect),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  ui.PersistedOpacity = class PersistedOpacity extends ui.PersistedContainerSurface {
    get alpha() {
      return this[alpha$];
    }
    set alpha(value) {
      super.alpha = value;
    }
    get offset() {
      return this[offset$];
    }
    set offset(value) {
      super.offset = value;
    }
    recomputeTransformAndClip() {
      this[_transform] = this.parent[_transform];
      let dx = this.offset.dx;
      let dy = this.offset.dy;
      if (dx !== 0.0 || dy !== 0.0) {
        this[_transform] = this[_transform].clone();
        this[_transform].translate(dx, dy);
      }
      this[_globalClip] = this.parent[_globalClip];
    }
    createElement() {
      let _ = this.defaultCreateElement("flt-opacity");
      _.style[$transformOrigin] = "0 0 0";
      return _;
    }
    apply() {
      this.rootElement.style[$opacity] = dart.str(dart.notNull(this.alpha) / 255);
      this.rootElement.style[$transform] = "translate(" + dart.str(this.offset.dx) + "px, " + dart.str(this.offset.dy) + "px)";
    }
    update(oldSurface) {
      ui.PersistedOpacity._check(oldSurface);
      super.update(oldSurface);
      if (this.alpha != oldSurface.alpha || !dart.equals(this.offset, oldSurface.offset)) {
        this.apply();
      }
    }
  };
  (ui.PersistedOpacity.new = function(paintedBy, alpha, offset) {
    this[alpha$] = alpha;
    this[offset$] = offset;
    ui.PersistedOpacity.__proto__.new.call(this, paintedBy);
  }).prototype = ui.PersistedOpacity.prototype;
  dart.addTypeTests(ui.PersistedOpacity);
  const alpha$ = Symbol("PersistedOpacity.alpha");
  const offset$ = Symbol("PersistedOpacity.offset");
  dart.setMethodSignature(ui.PersistedOpacity, () => ({
    __proto__: dart.getMethods(ui.PersistedOpacity.__proto__),
    createElement: dart.fnType(html.Element, []),
    apply: dart.fnType(dart.void, [])
  }));
  dart.setFieldSignature(ui.PersistedOpacity, () => ({
    __proto__: dart.getFields(ui.PersistedOpacity.__proto__),
    alpha: dart.finalFieldType(core.int),
    offset: dart.finalFieldType(ui.Offset)
  }));
  dart.defineLazy(ui, {
    /*ui._clipCounter*/get _clipCounter() {
      return 0;
    },
    set _clipCounter(_) {}
  });
  const _clipElement = dart.privateName(ui, "_clipElement");
  ui._PersistedClipPath = class _PersistedClipPath extends ui.PersistedContainerSurface {
    createElement() {
      return this.defaultCreateElement("flt-clippath");
    }
    apply() {
      if (this.clipPath == null) {
        if (this[_clipElement] != null) {
          src__engine.domRenderer.setElementStyle(this.childContainer, "clip-path", "");
          src__engine.domRenderer.setElementStyle(this.childContainer, "-webkit-clip-path", "");
          this[_clipElement][$remove]();
          this[_clipElement] = null;
        }
        return;
      }
      let svgClipPath = ui._pathToSvgClipPath(this.clipPath);
      let t = this[_clipElement];
      t == null ? null : t[$remove]();
      this[_clipElement] = html.Element.html(svgClipPath, {treeSanitizer: new ui._NullTreeSanitizer.new()});
      src__engine.domRenderer.append(this.childContainer, this[_clipElement]);
      src__engine.domRenderer.setElementStyle(this.childContainer, "clip-path", "url(#svgClip" + dart.str(ui._clipCounter) + ")");
      src__engine.domRenderer.setElementStyle(this.childContainer, "-webkit-clip-path", "url(#svgClip" + dart.str(ui._clipCounter) + ")");
    }
    update(oldSurface) {
      ui._PersistedClipPath._check(oldSurface);
      super.update(oldSurface);
      if (!dart.equals(oldSurface.clipPath, this.clipPath)) {
        let t = oldSurface[_clipElement];
        t == null ? null : t[$remove]();
        this.apply();
      } else {
        this[_clipElement] = oldSurface[_clipElement];
      }
      oldSurface[_clipElement] = null;
    }
    recycle() {
      let t = this[_clipElement];
      t == null ? null : t[$remove]();
      this[_clipElement] = null;
      super.recycle();
    }
  };
  (ui._PersistedClipPath.new = function(paintedBy, clipPath, clipBehavior) {
    this[_clipElement] = null;
    this.clipPath = clipPath;
    this.clipBehavior = clipBehavior;
    ui._PersistedClipPath.__proto__.new.call(this, paintedBy);
  }).prototype = ui._PersistedClipPath.prototype;
  dart.addTypeTests(ui._PersistedClipPath);
  dart.setMethodSignature(ui._PersistedClipPath, () => ({
    __proto__: dart.getMethods(ui._PersistedClipPath.__proto__),
    createElement: dart.fnType(html.Element, []),
    apply: dart.fnType(dart.void, [])
  }));
  dart.setFieldSignature(ui._PersistedClipPath, () => ({
    __proto__: dart.getFields(ui._PersistedClipPath.__proto__),
    clipPath: dart.finalFieldType(ui.Path),
    clipBehavior: dart.finalFieldType(ui.Clip),
    [_clipElement]: dart.fieldType(html.Element)
  }));
  ui._NullTreeSanitizer = class _NullTreeSanitizer extends core.Object {
    sanitizeTree(node) {}
  };
  (ui._NullTreeSanitizer.new = function() {
  }).prototype = ui._NullTreeSanitizer.prototype;
  dart.addTypeTests(ui._NullTreeSanitizer);
  ui._NullTreeSanitizer[dart.implements] = () => [html.NodeTreeSanitizer];
  dart.setMethodSignature(ui._NullTreeSanitizer, () => ({
    __proto__: dart.getMethods(ui._NullTreeSanitizer.__proto__),
    sanitizeTree: dart.fnType(dart.void, [html.Node])
  }));
  dart.defineLazy(ui, {
    /*ui._kCanvasCacheSize*/get _kCanvasCacheSize() {
      return 30;
    },
    /*ui._recycledCanvases*/get _recycledCanvases() {
      return JSArrayOfBitmapCanvas().of([]);
    }
  });
  ui._PaintRequest = class _PaintRequest extends core.Object {};
  (ui._PaintRequest.new = function(opts) {
    let canvasSize = opts && 'canvasSize' in opts ? opts.canvasSize : null;
    let paintCallback = opts && 'paintCallback' in opts ? opts.paintCallback : null;
    this.canvasSize = canvasSize;
    this.paintCallback = paintCallback;
    if (!(canvasSize != null)) dart.assertFailed();
    if (!(paintCallback != null)) dart.assertFailed();
  }).prototype = ui._PaintRequest.prototype;
  dart.addTypeTests(ui._PaintRequest);
  dart.setFieldSignature(ui._PaintRequest, () => ({
    __proto__: dart.getFields(ui._PaintRequest.__proto__),
    canvasSize: dart.finalFieldType(ui.Size),
    paintCallback: dart.finalFieldType(VoidTovoid())
  }));
  dart.defineLazy(ui, {
    /*ui._paintQueue*/get _paintQueue() {
      return JSArrayOf_PaintRequest().of([]);
    },
    set _paintQueue(_) {}
  });
  dart.copyProperties(ui, {
    get debugRetainedSurfaces() {
      return ui._retainedSurfaces;
    }
  });
  dart.defineLazy(ui, {
    /*ui._retainedSurfaces*/get _retainedSurfaces() {
      return JSArrayOfPersistedSurface().of([]);
    },
    set _retainedSurfaces(_) {}
  });
  ui._retainSurface = function(surface) {
    ui._retainedSurfaces[$add](surface);
    surface.retain();
  };
  ui._recycleCanvas = function(canvas) {
    if (src__engine.BitmapCanvas.is(canvas) && dart.test(canvas.isReusable())) {
      ui._recycledCanvases[$add](canvas);
      if (dart.notNull(ui._recycledCanvases[$length]) > 30) {
        let removedCanvas = ui._recycledCanvases[$removeAt](0);
        removedCanvas.dispose();
        if (false) {
          let o = ui.DebugCanvasReuseOverlay.instance;
          o.disposedCount = dart.notNull(o.disposedCount) + 1;
        }
      }
      if (false) {
        ui.DebugCanvasReuseOverlay.instance.inRecycleCount = ui._recycledCanvases[$length];
      }
    }
  };
  dart.defineLazy(ui, {
    /*ui.persistedPictureFactory*/get persistedPictureFactory() {
      return dart.fn(ui.standardPictureFactory, ObjectAnddoubleAnddouble__ToPersistedStandardPicture());
    },
    set persistedPictureFactory(_) {}
  });
  ui.standardPictureFactory = function(webOnlyPaintedBy, dx, dy, picture, hints) {
    return new ui.PersistedStandardPicture.new(webOnlyPaintedBy, dx, dy, picture, hints);
  };
  ui.houdiniPictureFactory = function(webOnlyPaintedBy, dx, dy, picture, hints) {
    return new ui.PersistedHoudiniPicture.new(webOnlyPaintedBy, dx, dy, picture, hints);
  };
  const _localCullRect = dart.privateName(ui, "_localCullRect");
  const _globalCullRect = dart.privateName(ui, "_globalCullRect");
  const _recomputeCullRect = dart.privateName(ui, "_recomputeCullRect");
  const _applyPaint$ = dart.privateName(ui, "_applyPaint");
  const _applyTranslate = dart.privateName(ui, "_applyTranslate");
  ui.PersistedPicture = class PersistedPicture extends ui.PersistedLeafSurface {
    get dx() {
      return this[dx$0];
    }
    set dx(value) {
      super.dx = value;
    }
    get dy() {
      return this[dy$0];
    }
    set dy(value) {
      super.dy = value;
    }
    get picture() {
      return this[picture$];
    }
    set picture(value) {
      super.picture = value;
    }
    get localPaintBounds() {
      return this[localPaintBounds];
    }
    set localPaintBounds(value) {
      super.localPaintBounds = value;
    }
    get hints() {
      return this[hints$];
    }
    set hints(value) {
      super.hints = value;
    }
    createElement() {
      return this.defaultCreateElement("flt-picture");
    }
    recomputeTransformAndClip() {
      this[_transform] = this.parent[_transform];
      if (this.dx !== 0.0 || this.dy !== 0.0) {
        this[_transform] = this[_transform].clone();
        this[_transform].translate(this.dx, this.dy);
      }
      this[_globalClip] = this.parent[_globalClip];
    }
    get localCullRect() {
      return this[_localCullRect];
    }
    get debugGlobalCullRect() {
      return this[_globalCullRect];
    }
    [_recomputeCullRect]() {
      if (!(this.transform != null)) dart.assertFailed();
      if (!(this.localPaintBounds != null)) dart.assertFailed();
      let globalPaintBounds = src__engine.localClipRectToGlobalClip({localClip: this.localPaintBounds, transform: this.transform});
      let tightGlobalCullRect = globalPaintBounds.intersect(this[_globalClip]);
      let tightLocalCullRect = null;
      if (dart.notNull(tightGlobalCullRect.width) <= 0 || dart.notNull(tightGlobalCullRect.height) <= 0) {
        tightGlobalCullRect = ui.Rect.zero;
        tightLocalCullRect = ui.Rect.zero;
      } else {
        let invertedTransform = new src__engine.Matrix4.fromFloat64List(typed_data.Float64List.new(16));
        let det = invertedTransform.copyInverse(this.transform);
        if (det === 0) {
          tightGlobalCullRect = ui.Rect.zero;
          tightLocalCullRect = ui.Rect.zero;
        } else {
          tightLocalCullRect = src__engine.localClipRectToGlobalClip({localClip: tightGlobalCullRect, transform: invertedTransform});
        }
      }
      if (!(tightLocalCullRect != null)) dart.assertFailed();
      if (this[_localCullRect] == null) {
        this[_localCullRect] = tightLocalCullRect;
        this[_globalCullRect] = tightGlobalCullRect;
        return true;
      } else if (dart.equals(tightLocalCullRect, ui.Rect.zero)) {
        let wasZero = dart.equals(this[_localCullRect], ui.Rect.zero);
        this[_localCullRect] = ui.Rect.zero;
        this[_globalCullRect] = ui.Rect.zero;
        return !wasZero;
      } else if (dart.test(src__engine.rectContainsOther(this[_localCullRect], tightLocalCullRect))) {
        return false;
      } else {
        let kPredictedGrowthFactor = 3.0;
        let leftwardTrend = kPredictedGrowthFactor * math.max(core.num, dart.notNull(this[_localCullRect].left) - dart.notNull(tightLocalCullRect.left), 0);
        let upwardTrend = kPredictedGrowthFactor * math.max(core.num, dart.notNull(this[_localCullRect].top) - dart.notNull(tightLocalCullRect.top), 0);
        let rightwardTrend = kPredictedGrowthFactor * math.max(core.num, dart.notNull(tightLocalCullRect.right) - dart.notNull(this[_localCullRect].right), 0);
        let bottomwardTrend = kPredictedGrowthFactor * math.max(core.num, dart.notNull(tightLocalCullRect.bottom) - dart.notNull(this[_localCullRect].bottom), 0);
        let newLocalCullRect = new ui.Rect.fromLTRB(dart.notNull(this[_localCullRect].left) - leftwardTrend, dart.notNull(this[_localCullRect].top) - upwardTrend, dart.notNull(this[_localCullRect].right) + rightwardTrend, dart.notNull(this[_localCullRect].bottom) + bottomwardTrend).intersect(this.localPaintBounds);
        let localCullRectChanged = !dart.equals(this[_localCullRect], newLocalCullRect);
        this[_localCullRect] = newLocalCullRect;
        this[_globalCullRect] = tightGlobalCullRect;
        return localCullRectChanged;
      }
    }
    [_applyPaint$](oldCanvas) {
      if (!dart.test(this.picture.recordingCanvas.didDraw)) {
        ui._recycleCanvas(oldCanvas);
        src__engine.domRenderer.clearDom(this.rootElement);
        return;
      }
      if (false) {
        let o = ui._surfaceStatsFor(this);
        o.paintCount = dart.notNull(o.paintCount) + 1;
      }
      this.applyPaint(oldCanvas);
    }
    [_applyTranslate]() {
      this.rootElement.style[$transform] = "translate(" + dart.str(this.dx) + "px, " + dart.str(this.dy) + "px)";
    }
    apply() {
      this[_recomputeCullRect]();
      this[_applyTranslate]();
      this[_applyPaint$](null);
    }
    update(oldSurface) {
      ui.PersistedPicture._check(oldSurface);
      super.update(oldSurface);
      if (this.dx != oldSurface.dx || this.dy != oldSurface.dy) {
        this[_applyTranslate]();
      }
      this[_localCullRect] = oldSurface[_localCullRect];
      this[_globalCullRect] = oldSurface[_globalCullRect];
      if (this.picture == oldSurface.picture) {
        if (dart.test(this[_recomputeCullRect]())) {
          this[_applyPaint$](oldSurface[_canvas]);
        } else {
          this[_canvas] = oldSurface[_canvas];
        }
      } else {
        this[_recomputeCullRect]();
        this[_applyPaint$](oldSurface[_canvas]);
      }
    }
    retain() {
      super.retain();
      if (dart.test(this[_recomputeCullRect]())) {
        this[_applyPaint$](this[_canvas]);
      }
    }
    recycle() {
      ui._recycleCanvas(this[_canvas]);
      super.recycle();
    }
    debugPrintChildren(buffer, indent) {
      super.debugPrintChildren(buffer, indent);
      if (this.rootElement != null && this.rootElement.firstChild != null) {
        let canvasTag = html.Element.as(this.rootElement.firstChild).tagName[$toLowerCase]();
        let canvasHash = dart.hashCode(this.rootElement.firstChild);
        buffer.writeln("  "[$times](dart.notNull(indent) + 1) + "<" + canvasTag + " @" + dart.str(canvasHash) + " />");
      } else if (this.rootElement != null) {
        buffer.writeln("  "[$times](dart.notNull(indent) + 1) + "<" + this.rootElement.tagName[$toLowerCase]() + " @" + dart.str(this[$hashCode]) + " />");
      } else {
        buffer.writeln("  "[$times](dart.notNull(indent) + 1) + "<canvas recycled />");
      }
    }
  };
  (ui.PersistedPicture.new = function(paintedBy, dx, dy, picture, hints) {
    this[_canvas] = null;
    this[_localCullRect] = null;
    this[_globalCullRect] = null;
    this[dx$0] = dx;
    this[dy$0] = dy;
    this[picture$] = picture;
    this[hints$] = hints;
    this[localPaintBounds] = picture.recordingCanvas.computePaintBounds();
    ui.PersistedPicture.__proto__.new.call(this, paintedBy);
  }).prototype = ui.PersistedPicture.prototype;
  dart.addTypeTests(ui.PersistedPicture);
  const dx$0 = Symbol("PersistedPicture.dx");
  const dy$0 = Symbol("PersistedPicture.dy");
  const picture$ = Symbol("PersistedPicture.picture");
  const localPaintBounds = Symbol("PersistedPicture.localPaintBounds");
  const hints$ = Symbol("PersistedPicture.hints");
  dart.setMethodSignature(ui.PersistedPicture, () => ({
    __proto__: dart.getMethods(ui.PersistedPicture.__proto__),
    createElement: dart.fnType(html.Element, []),
    [_recomputeCullRect]: dart.fnType(core.bool, []),
    [_applyPaint$]: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    [_applyTranslate]: dart.fnType(dart.void, []),
    apply: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(ui.PersistedPicture, () => ({
    __proto__: dart.getGetters(ui.PersistedPicture.__proto__),
    localCullRect: ui.Rect,
    debugGlobalCullRect: ui.Rect
  }));
  dart.setFieldSignature(ui.PersistedPicture, () => ({
    __proto__: dart.getFields(ui.PersistedPicture.__proto__),
    [_canvas]: dart.fieldType(src__engine.EngineCanvas),
    dx: dart.finalFieldType(core.double),
    dy: dart.finalFieldType(core.double),
    picture: dart.finalFieldType(ui.Picture),
    localPaintBounds: dart.finalFieldType(ui.Rect),
    hints: dart.finalFieldType(core.int),
    [_localCullRect]: dart.fieldType(ui.Rect),
    [_globalCullRect]: dart.fieldType(ui.Rect)
  }));
  ui.PersistedHoudiniPicture = class PersistedHoudiniPicture extends ui.PersistedPicture {
    static _registerCssPainter() {
      ui.PersistedHoudiniPicture._cssPainterRegistered = true;
      let css = js_util.getProperty(html.window, "CSS");
      let paintWorklet = js_util.getProperty(css, "paintWorklet");
      if (paintWorklet == null) {
        html.window[$console].warn("WARNING: CSS.paintWorklet not available. Paint worklets are only " + "supported on sites served from https:// or http://localhost.");
        return;
      }
      js_util.callMethod(paintWorklet, "addModule", ["/packages/flutter_web/assets/houdini_painter.js"]);
    }
    get bitmapPixelCount() {
      return 0;
    }
    applyPaint(oldCanvas) {
      ui._recycleCanvas(oldCanvas);
      let canvas = new src__engine.HoudiniCanvas.new(this[_localCullRect]);
      this[_canvas] = canvas;
      src__engine.domRenderer.clearDom(this.rootElement);
      this.rootElement[$append](this[_canvas].rootElement);
      this.picture.recordingCanvas.apply(this[_canvas]);
      canvas.commit();
    }
  };
  (ui.PersistedHoudiniPicture.new = function(paintedBy, dx, dy, picture, hints) {
    ui.PersistedHoudiniPicture.__proto__.new.call(this, paintedBy, dx, dy, picture, hints);
    if (!dart.test(ui.PersistedHoudiniPicture._cssPainterRegistered)) {
      ui.PersistedHoudiniPicture._registerCssPainter();
    }
  }).prototype = ui.PersistedHoudiniPicture.prototype;
  dart.addTypeTests(ui.PersistedHoudiniPicture);
  dart.setMethodSignature(ui.PersistedHoudiniPicture, () => ({
    __proto__: dart.getMethods(ui.PersistedHoudiniPicture.__proto__),
    applyPaint: dart.fnType(dart.void, [src__engine.EngineCanvas])
  }));
  dart.setGetterSignature(ui.PersistedHoudiniPicture, () => ({
    __proto__: dart.getGetters(ui.PersistedHoudiniPicture.__proto__),
    bitmapPixelCount: core.int
  }));
  dart.defineLazy(ui.PersistedHoudiniPicture, {
    /*ui.PersistedHoudiniPicture._cssPainterRegistered*/get _cssPainterRegistered() {
      return false;
    },
    set _cssPainterRegistered(_) {}
  });
  const _applyBitmapPaint = dart.privateName(ui, "_applyBitmapPaint");
  const _applyDomPaint = dart.privateName(ui, "_applyDomPaint");
  const _doesCanvasFitBounds = dart.privateName(ui, "_doesCanvasFitBounds");
  const _findOrCreateCanvas = dart.privateName(ui, "_findOrCreateCanvas");
  ui.PersistedStandardPicture = class PersistedStandardPicture extends ui.PersistedPicture {
    get bitmapPixelCount() {
      if (!src__engine.BitmapCanvas.is(this[_canvas])) {
        return 0;
      }
      let bitmapCanvas = src__engine.BitmapCanvas._check(this[_canvas]);
      return bitmapCanvas.bitmapPixelCount;
    }
    applyPaint(oldCanvas) {
      if (dart.test(this.picture.recordingCanvas.hasArbitraryPaint)) {
        this[_applyBitmapPaint](oldCanvas);
      } else {
        this[_applyDomPaint](oldCanvas);
      }
    }
    [_applyDomPaint](oldCanvas) {
      ui._recycleCanvas(oldCanvas);
      this[_canvas] = new src__engine.DomCanvas.new();
      src__engine.domRenderer.clearDom(this.rootElement);
      this.rootElement[$append](this[_canvas].rootElement);
      this.picture.recordingCanvas.apply(this[_canvas]);
    }
    [_doesCanvasFitBounds](canvas, newBounds) {
      let canvasBounds = canvas.bounds;
      return dart.notNull(canvasBounds.width) >= dart.notNull(newBounds.width) && dart.notNull(canvasBounds.height) >= dart.notNull(newBounds.height);
    }
    [_applyBitmapPaint](oldCanvas) {
      if (src__engine.BitmapCanvas.is(oldCanvas) && dart.test(this[_doesCanvasFitBounds](oldCanvas, this[_localCullRect])) && dart.test(oldCanvas.isReusable())) {
        if (false) {
          let o = ui.DebugCanvasReuseOverlay.instance;
          o.keptCount = dart.notNull(o.keptCount) + 1;
        }
        oldCanvas.bounds = this[_localCullRect];
        this[_canvas] = oldCanvas;
        this[_canvas].clear();
        this.picture.recordingCanvas.apply(this[_canvas]);
      } else {
        ui._recycleCanvas(oldCanvas);
        ui._paintQueue[$add](new ui._PaintRequest.new({canvasSize: this[_localCullRect].size, paintCallback: dart.fn(() => {
            this[_canvas] = this[_findOrCreateCanvas](this[_localCullRect]);
            if (false) {
              let o = ui._surfaceStatsFor(this);
              o.paintPixelCount = dart.notNull(o.paintPixelCount) + dart.notNull(src__engine.BitmapCanvas.as(this[_canvas]).bitmapPixelCount);
            }
            src__engine.domRenderer.clearDom(this.rootElement);
            this.rootElement[$append](this[_canvas].rootElement);
            this[_canvas].clear();
            this.picture.recordingCanvas.apply(this[_canvas]);
          }, VoidToNull())}));
      }
    }
    [_findOrCreateCanvas](bounds) {
      let canvasSize = bounds.size;
      let bestRecycledCanvas = null;
      let lastPixelCount = core.double.infinity;
      for (let i = 0; i < dart.notNull(ui._recycledCanvases[$length]); i++) {
        let candidate = ui._recycledCanvases[$_get](i);
        if (!dart.test(candidate.isReusable())) {
          continue;
        }
        let candidateSize = candidate.size;
        let candidatePixelCount = dart.notNull(candidateSize.width) * dart.notNull(candidateSize.height);
        let fits = this[_doesCanvasFitBounds](candidate, bounds);
        let isSmaller = candidatePixelCount < lastPixelCount;
        if (dart.test(fits) && isSmaller) {
          bestRecycledCanvas = candidate;
          lastPixelCount = candidatePixelCount;
          let fitsExactly = candidateSize.width == canvasSize.width && candidateSize.height == canvasSize.height;
          if (fitsExactly) {
            break;
          }
        }
      }
      if (bestRecycledCanvas != null) {
        if (false) {
          let o = ui._surfaceStatsFor(this);
          o.reuseCanvasCount = dart.notNull(o.reuseCanvasCount) + 1;
        }
        ui._recycledCanvases[$remove](bestRecycledCanvas);
        if (false) {
          ui.DebugCanvasReuseOverlay.instance.inRecycleCount = ui._recycledCanvases[$length];
        }
        if (false) {
          let o$ = ui.DebugCanvasReuseOverlay.instance;
          o$.reusedCount = dart.notNull(o$.reusedCount) + 1;
        }
        bestRecycledCanvas.bounds = bounds;
        return bestRecycledCanvas;
      }
      if (false) {
        let o$0 = ui.DebugCanvasReuseOverlay.instance;
        o$0.createdCount = dart.notNull(o$0.createdCount) + 1;
      }
      let canvas = new src__engine.BitmapCanvas.new(bounds);
      if (false) {
        let _ = ui._surfaceStatsFor(this);
        _.allocateBitmapCanvasCount = dart.notNull(_.allocateBitmapCanvasCount) + 1;
        _.allocatedBitmapSizeInPixels = dart.notNull(canvas.widthInBitmapPixels) * dart.notNull(canvas.heightInBitmapPixels);
      }
      return canvas;
    }
  };
  (ui.PersistedStandardPicture.new = function(paintedBy, dx, dy, picture, hints) {
    ui.PersistedStandardPicture.__proto__.new.call(this, paintedBy, dx, dy, picture, hints);
  }).prototype = ui.PersistedStandardPicture.prototype;
  dart.addTypeTests(ui.PersistedStandardPicture);
  dart.setMethodSignature(ui.PersistedStandardPicture, () => ({
    __proto__: dart.getMethods(ui.PersistedStandardPicture.__proto__),
    applyPaint: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    [_applyDomPaint]: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    [_doesCanvasFitBounds]: dart.fnType(core.bool, [src__engine.BitmapCanvas, ui.Rect]),
    [_applyBitmapPaint]: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    [_findOrCreateCanvas]: dart.fnType(src__engine.BitmapCanvas, [ui.Rect])
  }));
  dart.setGetterSignature(ui.PersistedStandardPicture, () => ({
    __proto__: dart.getGetters(ui.PersistedStandardPicture.__proto__),
    bitmapPixelCount: core.int
  }));
  const _applyColor = dart.privateName(ui, "_applyColor");
  const _applyShadow = dart.privateName(ui, "_applyShadow");
  const _applyShape = dart.privateName(ui, "_applyShape");
  const PersistedContainerSurface__DomClip$$0 = class PersistedContainerSurface__DomClip extends ui.PersistedContainerSurface {};
  (PersistedContainerSurface__DomClip$$0.new = function(paintedBy) {
    ui._DomClip.new.call(this);
    PersistedContainerSurface__DomClip$$0.__proto__.new.call(this, paintedBy);
  }).prototype = PersistedContainerSurface__DomClip$$0.prototype;
  dart.applyMixin(PersistedContainerSurface__DomClip$$0, ui._DomClip);
  ui.PersistedPhysicalShape = class PersistedPhysicalShape extends PersistedContainerSurface__DomClip$$0 {
    get path() {
      return this[path$0];
    }
    set path(value) {
      super.path = value;
    }
    get elevation() {
      return this[elevation$];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get color() {
      return this[color$];
    }
    set color(value) {
      super.color = value;
    }
    get shadowColor() {
      return this[shadowColor$];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get clipBehavior() {
      return this[clipBehavior$0];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    recomputeTransformAndClip() {
      this[_transform] = this.parent[_transform];
      let roundRect = this.path.webOnlyPathAsRoundedRect;
      if (roundRect != null) {
        this[_globalClip] = this.parent[_globalClip].intersect(src__engine.localClipRectToGlobalClip({localClip: roundRect.outerRect, transform: this.transform}));
      } else {
        let rect = this.path.webOnlyPathAsRect;
        if (rect != null) {
          this[_globalClip] = this.parent[_globalClip].intersect(src__engine.localClipRectToGlobalClip({localClip: rect, transform: this.transform}));
        } else {
          this[_globalClip] = this.parent[_globalClip];
        }
      }
    }
    [_applyColor]() {
      this.rootElement.style[$backgroundColor] = this.color.toCssString();
    }
    [_applyShadow]() {
      src__engine.ElevationShadow.applyShadow(this.rootElement.style, this.elevation, this.shadowColor);
    }
    createElement() {
      let _ = super.createElement();
      _[$setAttribute]("clip-type", "physical-shape");
      return _;
    }
    apply() {
      this[_applyColor]();
      this[_applyShadow]();
      this[_applyShape]();
    }
    [_applyShape]() {
      if (this.path == null) return;
      let roundRect = this.path.webOnlyPathAsRoundedRect;
      if (roundRect != null) {
        let borderRadius = dart.str(roundRect.tlRadiusX) + "px " + dart.str(roundRect.trRadiusX) + "px " + (dart.str(roundRect.brRadiusX) + "px " + dart.str(roundRect.blRadiusX) + "px");
        let style = this.rootElement.style;
        style[$transform] = "translate(" + dart.str(roundRect.left) + "px, " + dart.str(roundRect.top) + "px)";
        style[$width] = dart.str(roundRect.width) + "px";
        style[$height] = dart.str(roundRect.height) + "px";
        style[$borderRadius] = borderRadius;
        this.childContainer.style[$transform] = "translate(" + dart.str(-dart.notNull(roundRect.left)) + "px, " + dart.str(-dart.notNull(roundRect.top)) + "px)";
        if (this.clipBehavior !== ui.Clip.none) {
          style[$overflow] = "hidden";
        }
        return;
      } else {
        let rect = this.path.webOnlyPathAsRect;
        if (rect != null) {
          let style = this.rootElement.style;
          style[$transform] = "translate(" + dart.str(rect.left) + "px, " + dart.str(rect.top) + "px)";
          style[$width] = dart.str(rect.width) + "px";
          style[$height] = dart.str(rect.height) + "px";
          style[$borderRadius] = "";
          this.childContainer.style[$transform] = "translate(" + dart.str(-dart.notNull(rect.left)) + "px, " + dart.str(-dart.notNull(rect.top)) + "px)";
          if (this.clipBehavior !== ui.Clip.none) {
            style[$overflow] = "hidden";
          }
          return;
        } else {
          let ellipse = this.path.webOnlyPathAsCircle;
          if (ellipse != null) {
            let rx = ellipse.radiusX;
            let ry = ellipse.radiusY;
            let borderRadius = rx == ry ? dart.str(rx) + "px " : dart.str(rx) + "px " + dart.str(ry) + "px ";
            let style = this.rootElement.style;
            let left = dart.notNull(ellipse.x) - dart.notNull(rx);
            let top = dart.notNull(ellipse.y) - dart.notNull(ry);
            style[$transform] = "translate(" + dart.str(left) + "px, " + dart.str(top) + "px)";
            style[$width] = dart.str(dart.notNull(rx) * 2) + "px";
            style[$height] = dart.str(dart.notNull(ry) * 2) + "px";
            style[$borderRadius] = borderRadius;
            this.childContainer.style[$transform] = "translate(" + dart.str(-left) + "px, " + dart.str(-top) + "px)";
            if (this.clipBehavior !== ui.Clip.none) {
              style[$overflow] = "hidden";
            }
            return;
          }
        }
      }
      let bounds = this.path.getBounds();
      let svgClipPath = ui._pathToSvgClipPath(this.path, {offsetX: -dart.notNull(bounds.left), offsetY: -dart.notNull(bounds.top)});
      if (!(this[_clipElement] == null)) dart.assertFailed();
      this[_clipElement] = html.Element.html(svgClipPath, {treeSanitizer: new ui._NullTreeSanitizer.new()});
      src__engine.domRenderer.append(this.rootElement, this[_clipElement]);
      src__engine.domRenderer.setElementStyle(this.rootElement, "clip-path", "url(#svgClip" + dart.str(ui._clipCounter) + ")");
      src__engine.domRenderer.setElementStyle(this.rootElement, "-webkit-clip-path", "url(#svgClip" + dart.str(ui._clipCounter) + ")");
      let rootElementStyle = this.rootElement.style;
      rootElementStyle[$overflow] = "";
      rootElementStyle[$transform] = "translate(" + dart.str(bounds.left) + "px, " + dart.str(bounds.top) + "px)";
      rootElementStyle[$width] = dart.str(bounds.width) + "px";
      rootElementStyle[$height] = dart.str(bounds.height) + "px";
      rootElementStyle[$borderRadius] = "";
      this.childContainer.style[$transform] = "translate(" + dart.str(-dart.notNull(bounds.left)) + "px, " + dart.str(-dart.notNull(bounds.top)) + "px)";
    }
    update(oldSurface) {
      ui.PersistedPhysicalShape._check(oldSurface);
      super.update(oldSurface);
      if (!dart.equals(oldSurface.color, this.color)) {
        this[_applyColor]();
      }
      if (oldSurface.elevation != this.elevation || !dart.equals(oldSurface.shadowColor, this.shadowColor)) {
        this[_applyShadow]();
      }
      if (!dart.equals(oldSurface.path, this.path)) {
        let t = oldSurface[_clipElement];
        t == null ? null : t[$remove]();
        let style = this.rootElement.style;
        style[$transform] = "";
        style[$borderRadius] = "";
        src__engine.domRenderer.setElementStyle(this.rootElement, "clip-path", "");
        src__engine.domRenderer.setElementStyle(this.rootElement, "-webkit-clip-path", "");
        this[_applyShape]();
      } else {
        this[_clipElement] = oldSurface[_clipElement];
      }
      oldSurface[_clipElement] = null;
    }
  };
  (ui.PersistedPhysicalShape.new = function(paintedBy, path, elevation, color, shadowColor, clipBehavior) {
    this[_clipElement] = null;
    this[path$0] = path;
    this[elevation$] = elevation;
    this[clipBehavior$0] = clipBehavior;
    this[color$] = new ui.Color.new(color);
    this[shadowColor$] = new ui.Color.new(shadowColor);
    ui.PersistedPhysicalShape.__proto__.new.call(this, paintedBy);
  }).prototype = ui.PersistedPhysicalShape.prototype;
  dart.addTypeTests(ui.PersistedPhysicalShape);
  const path$0 = Symbol("PersistedPhysicalShape.path");
  const elevation$ = Symbol("PersistedPhysicalShape.elevation");
  const color$ = Symbol("PersistedPhysicalShape.color");
  const shadowColor$ = Symbol("PersistedPhysicalShape.shadowColor");
  const clipBehavior$0 = Symbol("PersistedPhysicalShape.clipBehavior");
  dart.setMethodSignature(ui.PersistedPhysicalShape, () => ({
    __proto__: dart.getMethods(ui.PersistedPhysicalShape.__proto__),
    [_applyColor]: dart.fnType(dart.void, []),
    [_applyShadow]: dart.fnType(dart.void, []),
    apply: dart.fnType(dart.void, []),
    [_applyShape]: dart.fnType(dart.void, [])
  }));
  dart.setFieldSignature(ui.PersistedPhysicalShape, () => ({
    __proto__: dart.getFields(ui.PersistedPhysicalShape.__proto__),
    path: dart.finalFieldType(ui.Path),
    elevation: dart.finalFieldType(core.double),
    color: dart.finalFieldType(ui.Color),
    shadowColor: dart.finalFieldType(ui.Color),
    clipBehavior: dart.finalFieldType(ui.Clip),
    [_clipElement]: dart.fieldType(html.Element)
  }));
  ui._pathToSvgClipPath = function(path, opts) {
    let offsetX = opts && 'offsetX' in opts ? opts.offsetX : 0;
    let offsetY = opts && 'offsetY' in opts ? opts.offsetY : 0;
    let bounds = path.getBounds();
    let sb = new core.StringBuffer.new();
    sb.write("<svg width=\"" + dart.str(bounds.right) + "\" height=\"" + dart.str(bounds.bottom) + "\" " + "style=\"position:absolute\">");
    sb.write("<defs>");
    let clipId = "svgClip" + dart.str(ui._clipCounter = dart.notNull(ui._clipCounter) + 1);
    sb.write("<clipPath id=" + clipId + ">");
    sb.write("<path fill=\"#FFFFFF\" d=\"");
    src__engine.pathToSvg(path, sb, {offsetX: offsetX, offsetY: offsetY});
    sb.write("\"></path></clipPath></defs></svg");
    return sb.toString();
  };
  ui._createContainer = function() {
    let container = html.DivElement.new();
    container.style[$position] = "fixed";
    container.style[$top] = "0";
    container.style[$right] = "0";
    container.style[$padding] = "6px";
    container.style[$color] = "#fff";
    container.style[$backgroundColor] = "#000";
    container.style[$opacity] = "0.8";
    return container;
  };
  const _created = dart.privateName(ui, "_created");
  const _kept = dart.privateName(ui, "_kept");
  const _reused = dart.privateName(ui, "_reused");
  const _disposed = dart.privateName(ui, "_disposed");
  const _inRecycle = dart.privateName(ui, "_inRecycle");
  const _createdCount = dart.privateName(ui, "_createdCount");
  const _keptCount = dart.privateName(ui, "_keptCount");
  const _reusedCount = dart.privateName(ui, "_reusedCount");
  const _disposedCount = dart.privateName(ui, "_disposedCount");
  const _inRecycleCount = dart.privateName(ui, "_inRecycleCount");
  const _reset = dart.privateName(ui, "_reset");
  const _update = dart.privateName(ui, "_update");
  ui.DebugCanvasReuseOverlay = class DebugCanvasReuseOverlay extends core.Object {
    static get instance() {
      if (ui.DebugCanvasReuseOverlay._instance == null) {
        if (dart.test(src__engine.assertionsEnabled)) {
          ui.DebugCanvasReuseOverlay._instance = new ui.DebugCanvasReuseOverlay.__();
        }
      }
      return ui.DebugCanvasReuseOverlay._instance;
    }
    get createdCount() {
      return this[_createdCount];
    }
    set createdCount(createdCount) {
      this[_createdCount] = createdCount;
      this[_update]();
    }
    get keptCount() {
      return this[_keptCount];
    }
    set keptCount(keptCount) {
      this[_keptCount] = keptCount;
      this[_update]();
    }
    get reusedCount() {
      return this[_reusedCount];
    }
    set reusedCount(reusedCount) {
      this[_reusedCount] = reusedCount;
      this[_update]();
    }
    get disposedCount() {
      return this[_disposedCount];
    }
    set disposedCount(disposedCount) {
      this[_disposedCount] = disposedCount;
      this[_update]();
    }
    get inRecycleCount() {
      return this[_inRecycleCount];
    }
    set inRecycleCount(inRecycleCount) {
      this[_inRecycleCount] = inRecycleCount;
      this[_update]();
    }
    [_update]() {
      this[_created][$text] = dart.str(this[_createdCount]);
      this[_kept][$text] = dart.str(this[_keptCount]);
      this[_reused][$text] = dart.str(this[_reusedCount]);
      this[_disposed][$text] = dart.str(this[_disposedCount]);
      this[_inRecycle][$text] = dart.str(this[_inRecycleCount]);
    }
    [_reset]() {
      this[_createdCount] = this[_keptCount] = this[_reusedCount] = this[_disposedCount] = this[_inRecycleCount] = 0;
      this[_update]();
    }
  };
  (ui.DebugCanvasReuseOverlay.__ = function() {
    this[_created] = html.Text.new("0");
    this[_kept] = html.Text.new("0");
    this[_reused] = html.Text.new("0");
    this[_disposed] = html.Text.new("0");
    this[_inRecycle] = html.Text.new("0");
    this[_createdCount] = 0;
    this[_keptCount] = 0;
    this[_reusedCount] = 0;
    this[_disposedCount] = 0;
    this[_inRecycleCount] = 0;
    let container = ui._createContainer();
    let title = html.DivElement.new();
    title.style[$fontWeight] = "bold";
    title.style[$textDecoration] = "underline";
    title[$text] = "Canvas Reuse";
    html.document.body[$append]((() => {
      container[$append](title);
      container[$append]((() => {
        let _ = html.DivElement.new();
        _[$appendText]("Created: ");
        _[$append](this[_created]);
        return _;
      })());
      container[$append]((() => {
        let _ = html.DivElement.new();
        _[$appendText]("Kept: ");
        _[$append](this[_kept]);
        return _;
      })());
      container[$append]((() => {
        let _ = html.DivElement.new();
        _[$appendText]("Reused: ");
        _[$append](this[_reused]);
        return _;
      })());
      container[$append]((() => {
        let _ = html.DivElement.new();
        _[$appendText]("Disposed: ");
        _[$append](this[_disposed]);
        return _;
      })());
      container[$append]((() => {
        let _ = html.DivElement.new();
        _[$appendText]("In Recycle List: ");
        _[$append](this[_inRecycle]);
        return _;
      })());
      container[$append]((() => {
        let _ = html.DivElement.new();
        _[$append]((() => {
          let _ = html.ButtonElement.new();
          _[$text] = "Reset";
          _[$addEventListener]("click", dart.fn(_ => this[_reset](), EventTovoid()));
          return _;
        })());
        return _;
      })());
      return container;
    })());
  }).prototype = ui.DebugCanvasReuseOverlay.prototype;
  dart.addTypeTests(ui.DebugCanvasReuseOverlay);
  dart.setMethodSignature(ui.DebugCanvasReuseOverlay, () => ({
    __proto__: dart.getMethods(ui.DebugCanvasReuseOverlay.__proto__),
    [_update]: dart.fnType(dart.void, []),
    [_reset]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(ui.DebugCanvasReuseOverlay, () => ({
    __proto__: dart.getGetters(ui.DebugCanvasReuseOverlay.__proto__),
    createdCount: core.int,
    keptCount: core.int,
    reusedCount: core.int,
    disposedCount: core.int,
    inRecycleCount: core.int
  }));
  dart.setSetterSignature(ui.DebugCanvasReuseOverlay, () => ({
    __proto__: dart.getSetters(ui.DebugCanvasReuseOverlay.__proto__),
    createdCount: core.int,
    keptCount: core.int,
    reusedCount: core.int,
    disposedCount: core.int,
    inRecycleCount: core.int
  }));
  dart.setFieldSignature(ui.DebugCanvasReuseOverlay, () => ({
    __proto__: dart.getFields(ui.DebugCanvasReuseOverlay.__proto__),
    [_created]: dart.finalFieldType(html.Text),
    [_kept]: dart.finalFieldType(html.Text),
    [_reused]: dart.finalFieldType(html.Text),
    [_disposed]: dart.finalFieldType(html.Text),
    [_inRecycle]: dart.finalFieldType(html.Text),
    [_createdCount]: dart.fieldType(core.int),
    [_keptCount]: dart.fieldType(core.int),
    [_reusedCount]: dart.fieldType(core.int),
    [_disposedCount]: dart.fieldType(core.int),
    [_inRecycleCount]: dart.fieldType(core.int)
  }));
  dart.defineLazy(ui.DebugCanvasReuseOverlay, {
    /*ui.DebugCanvasReuseOverlay._instance*/get _instance() {
      return null;
    },
    set _instance(_) {}
  });
  const _dx = dart.privateName(ui, "_dx");
  const _dy = dart.privateName(ui, "_dy");
  ui.OffsetBase = class OffsetBase extends core.Object {
    get isInfinite() {
      return dart.notNull(this[_dx]) >= core.double.infinity || dart.notNull(this[_dy]) >= core.double.infinity;
    }
    get isFinite() {
      return this[_dx][$isFinite] && this[_dy][$isFinite];
    }
    ['<'](other) {
      return dart.notNull(this[_dx]) < dart.notNull(other[_dx]) && dart.notNull(this[_dy]) < dart.notNull(other[_dy]);
    }
    ['<='](other) {
      return dart.notNull(this[_dx]) <= dart.notNull(other[_dx]) && dart.notNull(this[_dy]) <= dart.notNull(other[_dy]);
    }
    ['>'](other) {
      return dart.notNull(this[_dx]) > dart.notNull(other[_dx]) && dart.notNull(this[_dy]) > dart.notNull(other[_dy]);
    }
    ['>='](other) {
      return dart.notNull(this[_dx]) > dart.notNull(other[_dx]) && dart.notNull(this[_dy]) >= dart.notNull(other[_dy]);
    }
    _equals(other) {
      if (other == null) return false;
      if (!ui.OffsetBase.is(other)) return false;
      let typedOther = ui.OffsetBase._check(other);
      return this[_dx] == typedOther[_dx] && this[_dy] == typedOther[_dy];
    }
    get hashCode() {
      return ui.hashValues(this[_dx], this[_dy]);
    }
    toString() {
      return dart.str(this[$runtimeType]) + "(" + dart.str(this[_dx] == null ? null : this[_dx][$toStringAsFixed](1)) + ", " + dart.str(this[_dy] == null ? null : this[_dy][$toStringAsFixed](1)) + ")";
    }
  };
  (ui.OffsetBase.new = function(dx, dy) {
    this[_dx] = dx;
    this[_dy] = dy;
  }).prototype = ui.OffsetBase.prototype;
  dart.addTypeTests(ui.OffsetBase);
  dart.setMethodSignature(ui.OffsetBase, () => ({
    __proto__: dart.getMethods(ui.OffsetBase.__proto__),
    '<': dart.fnType(core.bool, [ui.OffsetBase]),
    '<=': dart.fnType(core.bool, [ui.OffsetBase]),
    '>': dart.fnType(core.bool, [ui.OffsetBase]),
    '>=': dart.fnType(core.bool, [ui.OffsetBase])
  }));
  dart.setGetterSignature(ui.OffsetBase, () => ({
    __proto__: dart.getGetters(ui.OffsetBase.__proto__),
    isInfinite: core.bool,
    isFinite: core.bool
  }));
  dart.setFieldSignature(ui.OffsetBase, () => ({
    __proto__: dart.getFields(ui.OffsetBase.__proto__),
    [_dx]: dart.finalFieldType(core.double),
    [_dy]: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(ui.OffsetBase, ['_equals', 'toString']);
  dart.defineExtensionAccessors(ui.OffsetBase, ['hashCode']);
  ui.Offset = class Offset extends ui.OffsetBase {
    static fromDirection(direction, distance) {
      if (distance === void 0) distance = 1.0;
      return new ui.Offset.new(dart.notNull(distance) * math.cos(direction), dart.notNull(distance) * math.sin(direction));
    }
    get dx() {
      return this[_dx];
    }
    get dy() {
      return this[_dy];
    }
    get distance() {
      return math.sqrt(dart.notNull(this.dx) * dart.notNull(this.dx) + dart.notNull(this.dy) * dart.notNull(this.dy));
    }
    get distanceSquared() {
      return dart.notNull(this.dx) * dart.notNull(this.dx) + dart.notNull(this.dy) * dart.notNull(this.dy);
    }
    get direction() {
      return math.atan2(this.dy, this.dx);
    }
    scale(scaleX, scaleY) {
      return new ui.Offset.new(dart.notNull(this.dx) * dart.notNull(scaleX), dart.notNull(this.dy) * dart.notNull(scaleY));
    }
    translate(translateX, translateY) {
      return new ui.Offset.new(dart.notNull(this.dx) + dart.notNull(translateX), dart.notNull(this.dy) + dart.notNull(translateY));
    }
    _negate() {
      return new ui.Offset.new(-dart.notNull(this.dx), -dart.notNull(this.dy));
    }
    ['-'](other) {
      return new ui.Offset.new(dart.notNull(this.dx) - dart.notNull(other.dx), dart.notNull(this.dy) - dart.notNull(other.dy));
    }
    ['+'](other) {
      return new ui.Offset.new(dart.notNull(this.dx) + dart.notNull(other.dx), dart.notNull(this.dy) + dart.notNull(other.dy));
    }
    ['*'](operand) {
      return new ui.Offset.new(dart.notNull(this.dx) * dart.notNull(operand), dart.notNull(this.dy) * dart.notNull(operand));
    }
    ['/'](operand) {
      return new ui.Offset.new(dart.notNull(this.dx) / dart.notNull(operand), dart.notNull(this.dy) / dart.notNull(operand));
    }
    ['~/'](operand) {
      return new ui.Offset.new((dart.notNull(this.dx) / dart.notNull(operand))[$truncate]()[$toDouble](), (dart.notNull(this.dy) / dart.notNull(operand))[$truncate]()[$toDouble]());
    }
    ['%'](operand) {
      return new ui.Offset.new(this.dx[$modulo](operand), this.dy[$modulo](operand));
    }
    ['&'](other) {
      return new ui.Rect.fromLTWH(this.dx, this.dy, other.width, other.height);
    }
    static lerp(a, b, t) {
      if (!(t != null)) dart.assertFailed();
      if (a == null && b == null) return null;
      if (a == null) return b['*'](t);
      if (b == null) return a['*'](1.0 - dart.notNull(t));
      return new ui.Offset.new(ui.lerpDouble(a.dx, b.dx, t), ui.lerpDouble(a.dy, b.dy, t));
    }
    _equals(other) {
      if (other == null) return false;
      if (!ui.Offset.is(other)) return false;
      let typedOther = ui.Offset._check(other);
      return this.dx == typedOther.dx && this.dy == typedOther.dy;
    }
    get hashCode() {
      return ui.hashValues(this.dx, this.dy);
    }
    toString() {
      return "Offset(" + dart.str((() => {
        let t = this.dx;
        return t == null ? null : t[$toStringAsFixed](1);
      })()) + ", " + dart.str((() => {
        let t = this.dy;
        return t == null ? null : t[$toStringAsFixed](1);
      })()) + ")";
    }
  };
  (ui.Offset.new = function(dx, dy) {
    ui.Offset.__proto__.new.call(this, dx, dy);
  }).prototype = ui.Offset.prototype;
  dart.addTypeTests(ui.Offset);
  dart.setMethodSignature(ui.Offset, () => ({
    __proto__: dart.getMethods(ui.Offset.__proto__),
    scale: dart.fnType(ui.Offset, [core.double, core.double]),
    translate: dart.fnType(ui.Offset, [core.double, core.double]),
    _negate: dart.fnType(ui.Offset, []),
    '-': dart.fnType(ui.Offset, [ui.Offset]),
    '+': dart.fnType(ui.Offset, [ui.Offset]),
    '*': dart.fnType(ui.Offset, [core.double]),
    '/': dart.fnType(ui.Offset, [core.double]),
    '~/': dart.fnType(ui.Offset, [core.double]),
    '%': dart.fnType(ui.Offset, [core.double]),
    '&': dart.fnType(ui.Rect, [ui.Size])
  }));
  dart.setGetterSignature(ui.Offset, () => ({
    __proto__: dart.getGetters(ui.Offset.__proto__),
    dx: core.double,
    dy: core.double,
    distance: core.double,
    distanceSquared: core.double,
    direction: core.double
  }));
  dart.defineExtensionMethods(ui.Offset, ['_equals', 'toString']);
  dart.defineExtensionAccessors(ui.Offset, ['hashCode']);
  dart.defineLazy(ui.Offset, {
    /*ui.Offset.zero*/get zero() {
      return dart.const(new ui.Offset.new(0.0, 0.0));
    },
    /*ui.Offset.infinite*/get infinite() {
      return dart.const(new ui.Offset.new(core.double.infinity, core.double.infinity));
    }
  });
  ui.Size = class Size extends ui.OffsetBase {
    get width() {
      return this[_dx];
    }
    get height() {
      return this[_dy];
    }
    get aspectRatio() {
      if (this.height !== 0.0) return dart.notNull(this.width) / dart.notNull(this.height);
      if (dart.notNull(this.width) > 0.0) return core.double.infinity;
      if (dart.notNull(this.width) < 0.0) return core.double.negativeInfinity;
      return 0.0;
    }
    get isEmpty() {
      return dart.notNull(this.width) <= 0.0 || dart.notNull(this.height) <= 0.0;
    }
    ['-'](other) {
      if (ui.Size.is(other)) return new ui.Offset.new(dart.notNull(this.width) - dart.notNull(other.width), dart.notNull(this.height) - dart.notNull(other.height));
      if (ui.Offset.is(other)) return new ui.Size.new(dart.notNull(this.width) - dart.notNull(other.dx), dart.notNull(this.height) - dart.notNull(other.dy));
      dart.throw(new core.ArgumentError.new(other));
    }
    ['+'](other) {
      return new ui.Size.new(dart.notNull(this.width) + dart.notNull(other.dx), dart.notNull(this.height) + dart.notNull(other.dy));
    }
    ['*'](operand) {
      return new ui.Size.new(dart.notNull(this.width) * dart.notNull(operand), dart.notNull(this.height) * dart.notNull(operand));
    }
    ['/'](operand) {
      return new ui.Size.new(dart.notNull(this.width) / dart.notNull(operand), dart.notNull(this.height) / dart.notNull(operand));
    }
    ['~/'](operand) {
      return new ui.Size.new((dart.notNull(this.width) / dart.notNull(operand))[$truncate]()[$toDouble](), (dart.notNull(this.height) / dart.notNull(operand))[$truncate]()[$toDouble]());
    }
    ['%'](operand) {
      return new ui.Size.new(this.width[$modulo](operand), this.height[$modulo](operand));
    }
    get shortestSide() {
      return math.min(core.double, this.width[$abs](), this.height[$abs]());
    }
    get longestSide() {
      return math.max(core.double, this.width[$abs](), this.height[$abs]());
    }
    topLeft(origin) {
      return origin;
    }
    topCenter(origin) {
      return new ui.Offset.new(dart.notNull(origin.dx) + dart.notNull(this.width) / 2.0, origin.dy);
    }
    topRight(origin) {
      return new ui.Offset.new(dart.notNull(origin.dx) + dart.notNull(this.width), origin.dy);
    }
    centerLeft(origin) {
      return new ui.Offset.new(origin.dx, dart.notNull(origin.dy) + dart.notNull(this.height) / 2.0);
    }
    center(origin) {
      return new ui.Offset.new(dart.notNull(origin.dx) + dart.notNull(this.width) / 2.0, dart.notNull(origin.dy) + dart.notNull(this.height) / 2.0);
    }
    centerRight(origin) {
      return new ui.Offset.new(dart.notNull(origin.dx) + dart.notNull(this.width), dart.notNull(origin.dy) + dart.notNull(this.height) / 2.0);
    }
    bottomLeft(origin) {
      return new ui.Offset.new(origin.dx, dart.notNull(origin.dy) + dart.notNull(this.height));
    }
    bottomCenter(origin) {
      return new ui.Offset.new(dart.notNull(origin.dx) + dart.notNull(this.width) / 2.0, dart.notNull(origin.dy) + dart.notNull(this.height));
    }
    bottomRight(origin) {
      return new ui.Offset.new(dart.notNull(origin.dx) + dart.notNull(this.width), dart.notNull(origin.dy) + dart.notNull(this.height));
    }
    contains(offset) {
      return dart.notNull(offset.dx) >= 0.0 && dart.notNull(offset.dx) < dart.notNull(this.width) && dart.notNull(offset.dy) >= 0.0 && dart.notNull(offset.dy) < dart.notNull(this.height);
    }
    get flipped() {
      return new ui.Size.new(this.height, this.width);
    }
    static lerp(a, b, t) {
      if (!(t != null)) dart.assertFailed();
      if (a == null && b == null) return null;
      if (a == null) return b['*'](t);
      if (b == null) return a['*'](1.0 - dart.notNull(t));
      return new ui.Size.new(ui.lerpDouble(a.width, b.width, t), ui.lerpDouble(a.height, b.height, t));
    }
    _equals(other) {
      if (other == null) return false;
      if (!ui.Size.is(other)) return false;
      let typedOther = ui.Size._check(other);
      return this[_dx] == typedOther[_dx] && this[_dy] == typedOther[_dy];
    }
    get hashCode() {
      return ui.hashValues(this[_dx], this[_dy]);
    }
    toString() {
      return "Size(" + dart.str((() => {
        let t = this.width;
        return t == null ? null : t[$toStringAsFixed](1);
      })()) + ", " + dart.str((() => {
        let t = this.height;
        return t == null ? null : t[$toStringAsFixed](1);
      })()) + ")";
    }
  };
  (ui.Size.new = function(width, height) {
    ui.Size.__proto__.new.call(this, width, height);
  }).prototype = ui.Size.prototype;
  (ui.Size.copy = function(source) {
    ui.Size.__proto__.new.call(this, source.width, source.height);
  }).prototype = ui.Size.prototype;
  (ui.Size.square = function(dimension) {
    ui.Size.__proto__.new.call(this, dimension, dimension);
  }).prototype = ui.Size.prototype;
  (ui.Size.fromWidth = function(width) {
    ui.Size.__proto__.new.call(this, width, core.double.infinity);
  }).prototype = ui.Size.prototype;
  (ui.Size.fromHeight = function(height) {
    ui.Size.__proto__.new.call(this, core.double.infinity, height);
  }).prototype = ui.Size.prototype;
  (ui.Size.fromRadius = function(radius) {
    ui.Size.__proto__.new.call(this, dart.notNull(radius) * 2.0, dart.notNull(radius) * 2.0);
  }).prototype = ui.Size.prototype;
  dart.addTypeTests(ui.Size);
  dart.setMethodSignature(ui.Size, () => ({
    __proto__: dart.getMethods(ui.Size.__proto__),
    '-': dart.fnType(ui.OffsetBase, [ui.OffsetBase]),
    '+': dart.fnType(ui.Size, [ui.Offset]),
    '*': dart.fnType(ui.Size, [core.double]),
    '/': dart.fnType(ui.Size, [core.double]),
    '~/': dart.fnType(ui.Size, [core.double]),
    '%': dart.fnType(ui.Size, [core.double]),
    topLeft: dart.fnType(ui.Offset, [ui.Offset]),
    topCenter: dart.fnType(ui.Offset, [ui.Offset]),
    topRight: dart.fnType(ui.Offset, [ui.Offset]),
    centerLeft: dart.fnType(ui.Offset, [ui.Offset]),
    center: dart.fnType(ui.Offset, [ui.Offset]),
    centerRight: dart.fnType(ui.Offset, [ui.Offset]),
    bottomLeft: dart.fnType(ui.Offset, [ui.Offset]),
    bottomCenter: dart.fnType(ui.Offset, [ui.Offset]),
    bottomRight: dart.fnType(ui.Offset, [ui.Offset]),
    contains: dart.fnType(core.bool, [ui.Offset])
  }));
  dart.setGetterSignature(ui.Size, () => ({
    __proto__: dart.getGetters(ui.Size.__proto__),
    width: core.double,
    height: core.double,
    aspectRatio: core.double,
    isEmpty: core.bool,
    shortestSide: core.double,
    longestSide: core.double,
    flipped: ui.Size
  }));
  dart.defineExtensionMethods(ui.Size, ['_equals', 'toString']);
  dart.defineExtensionAccessors(ui.Size, ['hashCode']);
  dart.defineLazy(ui.Size, {
    /*ui.Size.zero*/get zero() {
      return dart.const(new ui.Size.new(0.0, 0.0));
    },
    /*ui.Size.infinite*/get infinite() {
      return dart.const(new ui.Size.new(core.double.infinity, core.double.infinity));
    }
  });
  ui.Rect = class Rect extends core.Object {
    get left() {
      return this[left$];
    }
    set left(value) {
      super.left = value;
    }
    get top() {
      return this[top$];
    }
    set top(value) {
      super.top = value;
    }
    get right() {
      return this[right$];
    }
    set right(value) {
      super.right = value;
    }
    get bottom() {
      return this[bottom$];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get width() {
      return dart.notNull(this.right) - dart.notNull(this.left);
    }
    get height() {
      return dart.notNull(this.bottom) - dart.notNull(this.top);
    }
    get size() {
      return new ui.Size.new(this.width, this.height);
    }
    get hasNaN() {
      return this.left[$isNaN] || this.top[$isNaN] || this.right[$isNaN] || this.bottom[$isNaN];
    }
    get isInfinite() {
      return dart.notNull(this.left) >= core.double.infinity || dart.notNull(this.top) >= core.double.infinity || dart.notNull(this.right) >= core.double.infinity || dart.notNull(this.bottom) >= core.double.infinity;
    }
    get isFinite() {
      return this.left[$isFinite] && this.top[$isFinite] && this.right[$isFinite] && this.bottom[$isFinite];
    }
    get isEmpty() {
      return dart.notNull(this.left) >= dart.notNull(this.right) || dart.notNull(this.top) >= dart.notNull(this.bottom);
    }
    shift(offset) {
      return new ui.Rect.fromLTRB(dart.notNull(this.left) + dart.notNull(offset.dx), dart.notNull(this.top) + dart.notNull(offset.dy), dart.notNull(this.right) + dart.notNull(offset.dx), dart.notNull(this.bottom) + dart.notNull(offset.dy));
    }
    translate(translateX, translateY) {
      return new ui.Rect.fromLTRB(dart.notNull(this.left) + dart.notNull(translateX), dart.notNull(this.top) + dart.notNull(translateY), dart.notNull(this.right) + dart.notNull(translateX), dart.notNull(this.bottom) + dart.notNull(translateY));
    }
    inflate(delta) {
      return new ui.Rect.fromLTRB(dart.notNull(this.left) - dart.notNull(delta), dart.notNull(this.top) - dart.notNull(delta), dart.notNull(this.right) + dart.notNull(delta), dart.notNull(this.bottom) + dart.notNull(delta));
    }
    deflate(delta) {
      return this.inflate(-dart.notNull(delta));
    }
    intersect(other) {
      return new ui.Rect.fromLTRB(math.max(core.double, this.left, other.left), math.max(core.double, this.top, other.top), math.min(core.double, this.right, other.right), math.min(core.double, this.bottom, other.bottom));
    }
    expandToInclude(other) {
      return new ui.Rect.fromLTRB(math.min(core.double, this.left, other.left), math.min(core.double, this.top, other.top), math.max(core.double, this.right, other.right), math.max(core.double, this.bottom, other.bottom));
    }
    overlaps(other) {
      if (dart.notNull(this.right) <= dart.notNull(other.left) || dart.notNull(other.right) <= dart.notNull(this.left)) return false;
      if (dart.notNull(this.bottom) <= dart.notNull(other.top) || dart.notNull(other.bottom) <= dart.notNull(this.top)) return false;
      return true;
    }
    get shortestSide() {
      return math.min(core.double, this.width[$abs](), this.height[$abs]());
    }
    get longestSide() {
      return math.max(core.double, this.width[$abs](), this.height[$abs]());
    }
    get topLeft() {
      return new ui.Offset.new(this.left, this.top);
    }
    get topCenter() {
      return new ui.Offset.new(dart.notNull(this.left) + dart.notNull(this.width) / 2.0, this.top);
    }
    get topRight() {
      return new ui.Offset.new(this.right, this.top);
    }
    get centerLeft() {
      return new ui.Offset.new(this.left, dart.notNull(this.top) + dart.notNull(this.height) / 2.0);
    }
    get center() {
      return new ui.Offset.new(dart.notNull(this.left) + dart.notNull(this.width) / 2.0, dart.notNull(this.top) + dart.notNull(this.height) / 2.0);
    }
    get centerRight() {
      return new ui.Offset.new(this.right, dart.notNull(this.top) + dart.notNull(this.height) / 2.0);
    }
    get bottomLeft() {
      return new ui.Offset.new(this.left, this.bottom);
    }
    get bottomCenter() {
      return new ui.Offset.new(dart.notNull(this.left) + dart.notNull(this.width) / 2.0, this.bottom);
    }
    get bottomRight() {
      return new ui.Offset.new(this.right, this.bottom);
    }
    contains(offset) {
      return dart.notNull(offset.dx) >= dart.notNull(this.left) && dart.notNull(offset.dx) < dart.notNull(this.right) && dart.notNull(offset.dy) >= dart.notNull(this.top) && dart.notNull(offset.dy) < dart.notNull(this.bottom);
    }
    static lerp(a, b, t) {
      if (!(t != null)) dart.assertFailed();
      if (a == null && b == null) return null;
      if (a == null) return new ui.Rect.fromLTRB(dart.notNull(b.left) * dart.notNull(t), dart.notNull(b.top) * dart.notNull(t), dart.notNull(b.right) * dart.notNull(t), dart.notNull(b.bottom) * dart.notNull(t));
      if (b == null) {
        let k = 1.0 - dart.notNull(t);
        return new ui.Rect.fromLTRB(dart.notNull(a.left) * k, dart.notNull(a.top) * k, dart.notNull(a.right) * k, dart.notNull(a.bottom) * k);
      }
      return new ui.Rect.fromLTRB(ui.lerpDouble(a.left, b.left, t), ui.lerpDouble(a.top, b.top, t), ui.lerpDouble(a.right, b.right, t), ui.lerpDouble(a.bottom, b.bottom, t));
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(this[$runtimeType], dart.runtimeType(other))) return false;
      let typedOther = ui.Rect._check(other);
      return this.left == typedOther.left && this.top == typedOther.top && this.right == typedOther.right && this.bottom == typedOther.bottom;
    }
    get hashCode() {
      return ui.hashValues(this.left, this.top, this.right, this.bottom);
    }
    toString() {
      return "Rect.fromLTRB(" + this.left[$toStringAsFixed](1) + ", " + this.top[$toStringAsFixed](1) + ", " + this.right[$toStringAsFixed](1) + ", " + this.bottom[$toStringAsFixed](1) + ")";
    }
  };
  (ui.Rect.fromLTRB = function(left, top, right, bottom) {
    this[left$] = left;
    this[top$] = top;
    this[right$] = right;
    this[bottom$] = bottom;
    if (!(left != null)) dart.assertFailed();
    if (!(top != null)) dart.assertFailed();
    if (!(right != null)) dart.assertFailed();
    if (!(bottom != null)) dart.assertFailed();
  }).prototype = ui.Rect.prototype;
  (ui.Rect.fromLTWH = function(left, top, width, height) {
    ui.Rect.fromLTRB.call(this, left, top, dart.notNull(left) + dart.notNull(width), dart.notNull(top) + dart.notNull(height));
  }).prototype = ui.Rect.prototype;
  (ui.Rect.fromCircle = function(opts) {
    let center = opts && 'center' in opts ? opts.center : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    ui.Rect.fromCenter.call(this, {center: center, width: dart.notNull(radius) * 2, height: dart.notNull(radius) * 2});
  }).prototype = ui.Rect.prototype;
  (ui.Rect.fromCenter = function(opts) {
    let center = opts && 'center' in opts ? opts.center : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    ui.Rect.fromLTRB.call(this, dart.notNull(center.dx) - dart.notNull(width) / 2, dart.notNull(center.dy) - dart.notNull(height) / 2, dart.notNull(center.dx) + dart.notNull(width) / 2, dart.notNull(center.dy) + dart.notNull(height) / 2);
  }).prototype = ui.Rect.prototype;
  (ui.Rect.fromPoints = function(a, b) {
    ui.Rect.fromLTRB.call(this, math.min(core.double, a.dx, b.dx), math.min(core.double, a.dy, b.dy), math.max(core.double, a.dx, b.dx), math.max(core.double, a.dy, b.dy));
  }).prototype = ui.Rect.prototype;
  dart.addTypeTests(ui.Rect);
  const left$ = Symbol("Rect.left");
  const top$ = Symbol("Rect.top");
  const right$ = Symbol("Rect.right");
  const bottom$ = Symbol("Rect.bottom");
  dart.setMethodSignature(ui.Rect, () => ({
    __proto__: dart.getMethods(ui.Rect.__proto__),
    shift: dart.fnType(ui.Rect, [ui.Offset]),
    translate: dart.fnType(ui.Rect, [core.double, core.double]),
    inflate: dart.fnType(ui.Rect, [core.double]),
    deflate: dart.fnType(ui.Rect, [core.double]),
    intersect: dart.fnType(ui.Rect, [ui.Rect]),
    expandToInclude: dart.fnType(ui.Rect, [ui.Rect]),
    overlaps: dart.fnType(core.bool, [ui.Rect]),
    contains: dart.fnType(core.bool, [ui.Offset])
  }));
  dart.setGetterSignature(ui.Rect, () => ({
    __proto__: dart.getGetters(ui.Rect.__proto__),
    width: core.double,
    height: core.double,
    size: ui.Size,
    hasNaN: core.bool,
    isInfinite: core.bool,
    isFinite: core.bool,
    isEmpty: core.bool,
    shortestSide: core.double,
    longestSide: core.double,
    topLeft: ui.Offset,
    topCenter: ui.Offset,
    topRight: ui.Offset,
    centerLeft: ui.Offset,
    center: ui.Offset,
    centerRight: ui.Offset,
    bottomLeft: ui.Offset,
    bottomCenter: ui.Offset,
    bottomRight: ui.Offset
  }));
  dart.setFieldSignature(ui.Rect, () => ({
    __proto__: dart.getFields(ui.Rect.__proto__),
    left: dart.finalFieldType(core.double),
    top: dart.finalFieldType(core.double),
    right: dart.finalFieldType(core.double),
    bottom: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(ui.Rect, ['_equals', 'toString']);
  dart.defineExtensionAccessors(ui.Rect, ['hashCode']);
  dart.defineLazy(ui.Rect, {
    /*ui.Rect.zero*/get zero() {
      return dart.const(new ui.Rect.fromLTRB(0.0, 0.0, 0.0, 0.0));
    },
    /*ui.Rect._giantScalar*/get _giantScalar() {
      return 1000000000.0;
    },
    /*ui.Rect.largest*/get largest() {
      return dart.const(new ui.Rect.fromLTRB(-1000000000.0, -1000000000.0, 1000000000.0, 1000000000.0));
    }
  });
  ui.Radius = class Radius extends core.Object {
    get x() {
      return this[x$];
    }
    set x(value) {
      super.x = value;
    }
    get y() {
      return this[y$];
    }
    set y(value) {
      super.y = value;
    }
    _negate() {
      return new ui.Radius.elliptical(-dart.notNull(this.x), -dart.notNull(this.y));
    }
    ['-'](other) {
      return new ui.Radius.elliptical(dart.notNull(this.x) - dart.notNull(other.x), dart.notNull(this.y) - dart.notNull(other.y));
    }
    ['+'](other) {
      return new ui.Radius.elliptical(dart.notNull(this.x) + dart.notNull(other.x), dart.notNull(this.y) + dart.notNull(other.y));
    }
    ['*'](operand) {
      return new ui.Radius.elliptical(dart.notNull(this.x) * dart.notNull(operand), dart.notNull(this.y) * dart.notNull(operand));
    }
    ['/'](operand) {
      return new ui.Radius.elliptical(dart.notNull(this.x) / dart.notNull(operand), dart.notNull(this.y) / dart.notNull(operand));
    }
    ['~/'](operand) {
      return new ui.Radius.elliptical((dart.notNull(this.x) / dart.notNull(operand))[$truncate]()[$toDouble](), (dart.notNull(this.y) / dart.notNull(operand))[$truncate]()[$toDouble]());
    }
    ['%'](operand) {
      return new ui.Radius.elliptical(this.x[$modulo](operand), this.y[$modulo](operand));
    }
    static lerp(a, b, t) {
      if (!(t != null)) dart.assertFailed();
      if (a == null && b == null) return null;
      if (a == null) return new ui.Radius.elliptical(dart.notNull(b.x) * dart.notNull(t), dart.notNull(b.y) * dart.notNull(t));
      if (b == null) {
        let k = 1.0 - dart.notNull(t);
        return new ui.Radius.elliptical(dart.notNull(a.x) * k, dart.notNull(a.y) * k);
      }
      return new ui.Radius.elliptical(ui.lerpDouble(a.x, b.x, t), ui.lerpDouble(a.y, b.y, t));
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(this[$runtimeType], dart.runtimeType(other))) return false;
      let typedOther = ui.Radius._check(other);
      return typedOther.x == this.x && typedOther.y == this.y;
    }
    get hashCode() {
      return ui.hashValues(this.x, this.y);
    }
    toString() {
      return this.x == this.y ? "Radius.circular(" + this.x[$toStringAsFixed](1) + ")" : "Radius.elliptical(" + this.x[$toStringAsFixed](1) + ", " + (this.y[$toStringAsFixed](1) + ")");
    }
  };
  (ui.Radius.circular = function(radius) {
    ui.Radius.elliptical.call(this, radius, radius);
  }).prototype = ui.Radius.prototype;
  (ui.Radius.elliptical = function(x, y) {
    this[x$] = x;
    this[y$] = y;
  }).prototype = ui.Radius.prototype;
  dart.addTypeTests(ui.Radius);
  const x$ = Symbol("Radius.x");
  const y$ = Symbol("Radius.y");
  dart.setMethodSignature(ui.Radius, () => ({
    __proto__: dart.getMethods(ui.Radius.__proto__),
    _negate: dart.fnType(ui.Radius, []),
    '-': dart.fnType(ui.Radius, [ui.Radius]),
    '+': dart.fnType(ui.Radius, [ui.Radius]),
    '*': dart.fnType(ui.Radius, [core.double]),
    '/': dart.fnType(ui.Radius, [core.double]),
    '~/': dart.fnType(ui.Radius, [core.double]),
    '%': dart.fnType(ui.Radius, [core.double])
  }));
  dart.setFieldSignature(ui.Radius, () => ({
    __proto__: dart.getFields(ui.Radius.__proto__),
    x: dart.finalFieldType(core.double),
    y: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(ui.Radius, ['_equals', 'toString']);
  dart.defineExtensionAccessors(ui.Radius, ['hashCode']);
  dart.defineLazy(ui.Radius, {
    /*ui.Radius.zero*/get zero() {
      return dart.const(new ui.Radius.circular(0.0));
    }
  });
  const _getMin = dart.privateName(ui, "_getMin");
  const _scaleRadii = dart.privateName(ui, "_scaleRadii");
  ui.RRect = class RRect extends core.Object {
    get left() {
      return this[left$0];
    }
    set left(value) {
      super.left = value;
    }
    get top() {
      return this[top$0];
    }
    set top(value) {
      super.top = value;
    }
    get right() {
      return this[right$0];
    }
    set right(value) {
      super.right = value;
    }
    get bottom() {
      return this[bottom$0];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get tlRadiusX() {
      return this[tlRadiusX$];
    }
    set tlRadiusX(value) {
      super.tlRadiusX = value;
    }
    get tlRadiusY() {
      return this[tlRadiusY$];
    }
    set tlRadiusY(value) {
      super.tlRadiusY = value;
    }
    get tlRadius() {
      return new ui.Radius.elliptical(this.tlRadiusX, this.tlRadiusY);
    }
    get trRadiusX() {
      return this[trRadiusX$];
    }
    set trRadiusX(value) {
      super.trRadiusX = value;
    }
    get trRadiusY() {
      return this[trRadiusY$];
    }
    set trRadiusY(value) {
      super.trRadiusY = value;
    }
    get trRadius() {
      return new ui.Radius.elliptical(this.trRadiusX, this.trRadiusY);
    }
    get brRadiusX() {
      return this[brRadiusX$];
    }
    set brRadiusX(value) {
      super.brRadiusX = value;
    }
    get brRadiusY() {
      return this[brRadiusY$];
    }
    set brRadiusY(value) {
      super.brRadiusY = value;
    }
    get brRadius() {
      return new ui.Radius.elliptical(this.brRadiusX, this.brRadiusY);
    }
    get blRadiusX() {
      return this[blRadiusX$];
    }
    set blRadiusX(value) {
      super.blRadiusX = value;
    }
    get blRadiusY() {
      return this[blRadiusY$];
    }
    set blRadiusY(value) {
      super.blRadiusY = value;
    }
    get blRadius() {
      return new ui.Radius.elliptical(this.blRadiusX, this.blRadiusY);
    }
    shift(offset) {
      return new ui.RRect._raw({left: dart.notNull(this.left) + dart.notNull(offset.dx), top: dart.notNull(this.top) + dart.notNull(offset.dy), right: dart.notNull(this.right) + dart.notNull(offset.dx), bottom: dart.notNull(this.bottom) + dart.notNull(offset.dy), tlRadiusX: this.tlRadiusX, tlRadiusY: this.tlRadiusY, trRadiusX: this.trRadiusX, trRadiusY: this.trRadiusY, blRadiusX: this.blRadiusX, blRadiusY: this.blRadiusY, brRadiusX: this.brRadiusX, brRadiusY: this.brRadiusY});
    }
    inflate(delta) {
      return new ui.RRect._raw({left: dart.notNull(this.left) - dart.notNull(delta), top: dart.notNull(this.top) - dart.notNull(delta), right: dart.notNull(this.right) + dart.notNull(delta), bottom: dart.notNull(this.bottom) + dart.notNull(delta), tlRadiusX: dart.notNull(this.tlRadiusX) + dart.notNull(delta), tlRadiusY: dart.notNull(this.tlRadiusY) + dart.notNull(delta), trRadiusX: dart.notNull(this.trRadiusX) + dart.notNull(delta), trRadiusY: dart.notNull(this.trRadiusY) + dart.notNull(delta), blRadiusX: dart.notNull(this.blRadiusX) + dart.notNull(delta), blRadiusY: dart.notNull(this.blRadiusY) + dart.notNull(delta), brRadiusX: dart.notNull(this.brRadiusX) + dart.notNull(delta), brRadiusY: dart.notNull(this.brRadiusY) + dart.notNull(delta)});
    }
    deflate(delta) {
      return this.inflate(-dart.notNull(delta));
    }
    get width() {
      return dart.notNull(this.right) - dart.notNull(this.left);
    }
    get height() {
      return dart.notNull(this.bottom) - dart.notNull(this.top);
    }
    get outerRect() {
      return new ui.Rect.fromLTRB(this.left, this.top, this.right, this.bottom);
    }
    get safeInnerRect() {
      let kInsetFactor = 0.29289321881;
      let leftRadius = math.max(core.double, this.blRadiusX, this.tlRadiusX);
      let topRadius = math.max(core.double, this.tlRadiusY, this.trRadiusY);
      let rightRadius = math.max(core.double, this.trRadiusX, this.brRadiusX);
      let bottomRadius = math.max(core.double, this.brRadiusY, this.blRadiusY);
      return new ui.Rect.fromLTRB(dart.notNull(this.left) + leftRadius * kInsetFactor, dart.notNull(this.top) + topRadius * kInsetFactor, dart.notNull(this.right) - rightRadius * kInsetFactor, dart.notNull(this.bottom) - bottomRadius * kInsetFactor);
    }
    get middleRect() {
      let leftRadius = math.max(core.double, this.blRadiusX, this.tlRadiusX);
      let topRadius = math.max(core.double, this.tlRadiusY, this.trRadiusY);
      let rightRadius = math.max(core.double, this.trRadiusX, this.brRadiusX);
      let bottomRadius = math.max(core.double, this.brRadiusY, this.blRadiusY);
      return new ui.Rect.fromLTRB(dart.notNull(this.left) + leftRadius, dart.notNull(this.top) + topRadius, dart.notNull(this.right) - rightRadius, dart.notNull(this.bottom) - bottomRadius);
    }
    get wideMiddleRect() {
      let topRadius = math.max(core.double, this.tlRadiusY, this.trRadiusY);
      let bottomRadius = math.max(core.double, this.brRadiusY, this.blRadiusY);
      return new ui.Rect.fromLTRB(this.left, dart.notNull(this.top) + topRadius, this.right, dart.notNull(this.bottom) - bottomRadius);
    }
    get tallMiddleRect() {
      let leftRadius = math.max(core.double, this.blRadiusX, this.tlRadiusX);
      let rightRadius = math.max(core.double, this.trRadiusX, this.brRadiusX);
      return new ui.Rect.fromLTRB(dart.notNull(this.left) + leftRadius, this.top, dart.notNull(this.right) - rightRadius, this.bottom);
    }
    get isEmpty() {
      return dart.notNull(this.left) >= dart.notNull(this.right) || dart.notNull(this.top) >= dart.notNull(this.bottom);
    }
    get isFinite() {
      return this.left[$isFinite] && this.top[$isFinite] && this.right[$isFinite] && this.bottom[$isFinite];
    }
    get isRect() {
      return (this.tlRadiusX === 0.0 || this.tlRadiusY === 0.0) && (this.trRadiusX === 0.0 || this.trRadiusY === 0.0) && (this.blRadiusX === 0.0 || this.blRadiusY === 0.0) && (this.brRadiusX === 0.0 || this.brRadiusY === 0.0);
    }
    get isStadium() {
      return dart.equals(this.tlRadius, this.trRadius) && dart.equals(this.trRadius, this.brRadius) && dart.equals(this.brRadius, this.blRadius) && (dart.notNull(this.width) <= 2.0 * dart.notNull(this.tlRadiusX) || dart.notNull(this.height) <= 2.0 * dart.notNull(this.tlRadiusY));
    }
    get isEllipse() {
      return dart.equals(this.tlRadius, this.trRadius) && dart.equals(this.trRadius, this.brRadius) && dart.equals(this.brRadius, this.blRadius) && dart.notNull(this.width) <= 2.0 * dart.notNull(this.tlRadiusX) && dart.notNull(this.height) <= 2.0 * dart.notNull(this.tlRadiusY);
    }
    get isCircle() {
      return this.width == this.height && dart.test(this.isEllipse);
    }
    get shortestSide() {
      return math.min(core.double, this.width[$abs](), this.height[$abs]());
    }
    get longestSide() {
      return math.max(core.double, this.width[$abs](), this.height[$abs]());
    }
    get hasNaN() {
      return this.left[$isNaN] || this.top[$isNaN] || this.right[$isNaN] || this.bottom[$isNaN] || this.trRadiusX[$isNaN] || this.trRadiusY[$isNaN] || this.tlRadiusX[$isNaN] || this.tlRadiusY[$isNaN] || this.brRadiusX[$isNaN] || this.brRadiusY[$isNaN] || this.blRadiusX[$isNaN] || this.blRadiusY[$isNaN];
    }
    get center() {
      return new ui.Offset.new(dart.notNull(this.left) + dart.notNull(this.width) / 2.0, dart.notNull(this.top) + dart.notNull(this.height) / 2.0);
    }
    [_getMin](min, radius1, radius2, limit) {
      let sum = dart.notNull(radius1) + dart.notNull(radius2);
      if (sum > dart.notNull(limit) && sum !== 0.0) return math.min(core.double, min, dart.notNull(limit) / sum);
      return min;
    }
    [_scaleRadii]() {
      let scale = 1.0;
      scale = this[_getMin](scale, this.blRadiusY, this.tlRadiusY, this.height);
      scale = this[_getMin](scale, this.tlRadiusX, this.trRadiusX, this.width);
      scale = this[_getMin](scale, this.trRadiusY, this.brRadiusY, this.height);
      scale = this[_getMin](scale, this.brRadiusX, this.blRadiusX, this.width);
      if (dart.notNull(scale) < 1.0) {
        return new ui.RRect._raw({top: this.top, left: this.left, right: this.right, bottom: this.bottom, tlRadiusX: dart.notNull(this.tlRadiusX) * dart.notNull(scale), tlRadiusY: dart.notNull(this.tlRadiusY) * dart.notNull(scale), trRadiusX: dart.notNull(this.trRadiusX) * dart.notNull(scale), trRadiusY: dart.notNull(this.trRadiusY) * dart.notNull(scale), blRadiusX: dart.notNull(this.blRadiusX) * dart.notNull(scale), blRadiusY: dart.notNull(this.blRadiusY) * dart.notNull(scale), brRadiusX: dart.notNull(this.brRadiusX) * dart.notNull(scale), brRadiusY: dart.notNull(this.brRadiusY) * dart.notNull(scale)});
      }
      return new ui.RRect._raw({top: this.top, left: this.left, right: this.right, bottom: this.bottom, tlRadiusX: this.tlRadiusX, tlRadiusY: this.tlRadiusY, trRadiusX: this.trRadiusX, trRadiusY: this.trRadiusY, blRadiusX: this.blRadiusX, blRadiusY: this.blRadiusY, brRadiusX: this.brRadiusX, brRadiusY: this.brRadiusY});
    }
    contains(point) {
      if (dart.notNull(point.dx) < dart.notNull(this.left) || dart.notNull(point.dx) >= dart.notNull(this.right) || dart.notNull(point.dy) < dart.notNull(this.top) || dart.notNull(point.dy) >= dart.notNull(this.bottom)) return false;
      let scaled = this[_scaleRadii]();
      let x = null;
      let y = null;
      let radiusX = null;
      let radiusY = null;
      if (dart.notNull(point.dx) < dart.notNull(this.left) + dart.notNull(scaled.tlRadiusX) && dart.notNull(point.dy) < dart.notNull(this.top) + dart.notNull(scaled.tlRadiusY)) {
        x = dart.notNull(point.dx) - dart.notNull(this.left) - dart.notNull(scaled.tlRadiusX);
        y = dart.notNull(point.dy) - dart.notNull(this.top) - dart.notNull(scaled.tlRadiusY);
        radiusX = scaled.tlRadiusX;
        radiusY = scaled.tlRadiusY;
      } else if (dart.notNull(point.dx) > dart.notNull(this.right) - dart.notNull(scaled.trRadiusX) && dart.notNull(point.dy) < dart.notNull(this.top) + dart.notNull(scaled.trRadiusY)) {
        x = dart.notNull(point.dx) - dart.notNull(this.right) + dart.notNull(scaled.trRadiusX);
        y = dart.notNull(point.dy) - dart.notNull(this.top) - dart.notNull(scaled.trRadiusY);
        radiusX = scaled.trRadiusX;
        radiusY = scaled.trRadiusY;
      } else if (dart.notNull(point.dx) > dart.notNull(this.right) - dart.notNull(scaled.brRadiusX) && dart.notNull(point.dy) > dart.notNull(this.bottom) - dart.notNull(scaled.brRadiusY)) {
        x = dart.notNull(point.dx) - dart.notNull(this.right) + dart.notNull(scaled.brRadiusX);
        y = dart.notNull(point.dy) - dart.notNull(this.bottom) + dart.notNull(scaled.brRadiusY);
        radiusX = scaled.brRadiusX;
        radiusY = scaled.brRadiusY;
      } else if (dart.notNull(point.dx) < dart.notNull(this.left) + dart.notNull(scaled.blRadiusX) && dart.notNull(point.dy) > dart.notNull(this.bottom) - dart.notNull(scaled.blRadiusY)) {
        x = dart.notNull(point.dx) - dart.notNull(this.left) - dart.notNull(scaled.blRadiusX);
        y = dart.notNull(point.dy) - dart.notNull(this.bottom) + dart.notNull(scaled.blRadiusY);
        radiusX = scaled.blRadiusX;
        radiusY = scaled.blRadiusY;
      } else {
        return true;
      }
      x = dart.notNull(x) / dart.notNull(radiusX);
      y = dart.notNull(y) / dart.notNull(radiusY);
      if (dart.notNull(x) * dart.notNull(x) + dart.notNull(y) * dart.notNull(y) > 1.0) return false;
      return true;
    }
    static lerp(a, b, t) {
      if (!(t != null)) dart.assertFailed();
      if (a == null && b == null) return null;
      if (a == null) {
        return new ui.RRect._raw({left: dart.notNull(b.left) * dart.notNull(t), top: dart.notNull(b.top) * dart.notNull(t), right: dart.notNull(b.right) * dart.notNull(t), bottom: dart.notNull(b.bottom) * dart.notNull(t), tlRadiusX: dart.notNull(b.tlRadiusX) * dart.notNull(t), tlRadiusY: dart.notNull(b.tlRadiusY) * dart.notNull(t), trRadiusX: dart.notNull(b.trRadiusX) * dart.notNull(t), trRadiusY: dart.notNull(b.trRadiusY) * dart.notNull(t), brRadiusX: dart.notNull(b.brRadiusX) * dart.notNull(t), brRadiusY: dart.notNull(b.brRadiusY) * dart.notNull(t), blRadiusX: dart.notNull(b.blRadiusX) * dart.notNull(t), blRadiusY: dart.notNull(b.blRadiusY) * dart.notNull(t)});
      }
      if (b == null) {
        let k = 1.0 - dart.notNull(t);
        return new ui.RRect._raw({left: dart.notNull(a.left) * k, top: dart.notNull(a.top) * k, right: dart.notNull(a.right) * k, bottom: dart.notNull(a.bottom) * k, tlRadiusX: dart.notNull(a.tlRadiusX) * k, tlRadiusY: dart.notNull(a.tlRadiusY) * k, trRadiusX: dart.notNull(a.trRadiusX) * k, trRadiusY: dart.notNull(a.trRadiusY) * k, brRadiusX: dart.notNull(a.brRadiusX) * k, brRadiusY: dart.notNull(a.brRadiusY) * k, blRadiusX: dart.notNull(a.blRadiusX) * k, blRadiusY: dart.notNull(a.blRadiusY) * k});
      }
      return new ui.RRect._raw({left: ui.lerpDouble(a.left, b.left, t), top: ui.lerpDouble(a.top, b.top, t), right: ui.lerpDouble(a.right, b.right, t), bottom: ui.lerpDouble(a.bottom, b.bottom, t), tlRadiusX: ui.lerpDouble(a.tlRadiusX, b.tlRadiusX, t), tlRadiusY: ui.lerpDouble(a.tlRadiusY, b.tlRadiusY, t), trRadiusX: ui.lerpDouble(a.trRadiusX, b.trRadiusX, t), trRadiusY: ui.lerpDouble(a.trRadiusY, b.trRadiusY, t), brRadiusX: ui.lerpDouble(a.brRadiusX, b.brRadiusX, t), brRadiusY: ui.lerpDouble(a.brRadiusY, b.brRadiusY, t), blRadiusX: ui.lerpDouble(a.blRadiusX, b.blRadiusX, t), blRadiusY: ui.lerpDouble(a.blRadiusY, b.blRadiusY, t)});
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(this[$runtimeType], dart.runtimeType(other))) return false;
      let typedOther = ui.RRect._check(other);
      return this.left == typedOther.left && this.top == typedOther.top && this.right == typedOther.right && this.bottom == typedOther.bottom && this.tlRadiusX == typedOther.tlRadiusX && this.tlRadiusY == typedOther.tlRadiusY && this.trRadiusX == typedOther.trRadiusX && this.trRadiusY == typedOther.trRadiusY && this.blRadiusX == typedOther.blRadiusX && this.blRadiusY == typedOther.blRadiusY && this.brRadiusX == typedOther.brRadiusX && this.brRadiusY == typedOther.brRadiusY;
    }
    get hashCode() {
      return ui.hashValues(this.left, this.top, this.right, this.bottom, this.tlRadiusX, this.tlRadiusY, this.trRadiusX, this.trRadiusY, this.blRadiusX, this.blRadiusY, this.brRadiusX, this.brRadiusY);
    }
    toString() {
      let rect = this.left[$toStringAsFixed](1) + ", " + (this.top[$toStringAsFixed](1) + ", ") + (this.right[$toStringAsFixed](1) + ", ") + this.bottom[$toStringAsFixed](1);
      if (dart.equals(this.tlRadius, this.trRadius) && dart.equals(this.trRadius, this.brRadius) && dart.equals(this.brRadius, this.blRadius)) {
        if (this.tlRadius.x == this.tlRadius.y) return "RRect.fromLTRBR(" + rect + ", " + this.tlRadius.x[$toStringAsFixed](1) + ")";
        return "RRect.fromLTRBXY(" + rect + ", " + this.tlRadius.x[$toStringAsFixed](1) + ", " + this.tlRadius.y[$toStringAsFixed](1) + ")";
      }
      return "RRect.fromLTRBAndCorners(" + (rect + ", ") + ("topLeft: " + dart.str(this.tlRadius) + ", ") + ("topRight: " + dart.str(this.trRadius) + ", ") + ("bottomRight: " + dart.str(this.brRadius) + ", ") + ("bottomLeft: " + dart.str(this.blRadius)) + ")";
    }
  };
  (ui.RRect.fromLTRBXY = function(left, top, right, bottom, radiusX, radiusY) {
    ui.RRect._raw.call(this, {top: top, left: left, right: right, bottom: bottom, tlRadiusX: radiusX, tlRadiusY: radiusY, trRadiusX: radiusX, trRadiusY: radiusY, blRadiusX: radiusX, blRadiusY: radiusY, brRadiusX: radiusX, brRadiusY: radiusY});
  }).prototype = ui.RRect.prototype;
  (ui.RRect.fromLTRBR = function(left, top, right, bottom, radius) {
    ui.RRect._raw.call(this, {top: top, left: left, right: right, bottom: bottom, tlRadiusX: radius.x, tlRadiusY: radius.y, trRadiusX: radius.x, trRadiusY: radius.y, blRadiusX: radius.x, blRadiusY: radius.y, brRadiusX: radius.x, brRadiusY: radius.y});
  }).prototype = ui.RRect.prototype;
  (ui.RRect.fromRectXY = function(rect, radiusX, radiusY) {
    ui.RRect._raw.call(this, {top: rect.top, left: rect.left, right: rect.right, bottom: rect.bottom, tlRadiusX: radiusX, tlRadiusY: radiusY, trRadiusX: radiusX, trRadiusY: radiusY, blRadiusX: radiusX, blRadiusY: radiusY, brRadiusX: radiusX, brRadiusY: radiusY});
  }).prototype = ui.RRect.prototype;
  (ui.RRect.fromRectAndRadius = function(rect, radius) {
    ui.RRect._raw.call(this, {top: rect.top, left: rect.left, right: rect.right, bottom: rect.bottom, tlRadiusX: radius.x, tlRadiusY: radius.y, trRadiusX: radius.x, trRadiusY: radius.y, blRadiusX: radius.x, blRadiusY: radius.y, brRadiusX: radius.x, brRadiusY: radius.y});
  }).prototype = ui.RRect.prototype;
  (ui.RRect.fromLTRBAndCorners = function(left, top, right, bottom, opts) {
    let topLeft = opts && 'topLeft' in opts ? opts.topLeft : ui.Radius.zero;
    let topRight = opts && 'topRight' in opts ? opts.topRight : ui.Radius.zero;
    let bottomRight = opts && 'bottomRight' in opts ? opts.bottomRight : ui.Radius.zero;
    let bottomLeft = opts && 'bottomLeft' in opts ? opts.bottomLeft : ui.Radius.zero;
    ui.RRect._raw.call(this, {top: top, left: left, right: right, bottom: bottom, tlRadiusX: topLeft.x, tlRadiusY: topLeft.y, trRadiusX: topRight.x, trRadiusY: topRight.y, blRadiusX: bottomLeft.x, blRadiusY: bottomLeft.y, brRadiusX: bottomRight.x, brRadiusY: bottomRight.y});
  }).prototype = ui.RRect.prototype;
  (ui.RRect.fromRectAndCorners = function(rect, opts) {
    let topLeft = opts && 'topLeft' in opts ? opts.topLeft : ui.Radius.zero;
    let topRight = opts && 'topRight' in opts ? opts.topRight : ui.Radius.zero;
    let bottomRight = opts && 'bottomRight' in opts ? opts.bottomRight : ui.Radius.zero;
    let bottomLeft = opts && 'bottomLeft' in opts ? opts.bottomLeft : ui.Radius.zero;
    ui.RRect._raw.call(this, {top: rect.top, left: rect.left, right: rect.right, bottom: rect.bottom, tlRadiusX: topLeft.x, tlRadiusY: topLeft.y, trRadiusX: topRight.x, trRadiusY: topRight.y, blRadiusX: bottomLeft.x, blRadiusY: bottomLeft.y, brRadiusX: bottomRight.x, brRadiusY: bottomRight.y});
  }).prototype = ui.RRect.prototype;
  (ui.RRect._raw = function(opts) {
    let left = opts && 'left' in opts ? opts.left : 0.0;
    let top = opts && 'top' in opts ? opts.top : 0.0;
    let right = opts && 'right' in opts ? opts.right : 0.0;
    let bottom = opts && 'bottom' in opts ? opts.bottom : 0.0;
    let tlRadiusX = opts && 'tlRadiusX' in opts ? opts.tlRadiusX : 0.0;
    let tlRadiusY = opts && 'tlRadiusY' in opts ? opts.tlRadiusY : 0.0;
    let trRadiusX = opts && 'trRadiusX' in opts ? opts.trRadiusX : 0.0;
    let trRadiusY = opts && 'trRadiusY' in opts ? opts.trRadiusY : 0.0;
    let brRadiusX = opts && 'brRadiusX' in opts ? opts.brRadiusX : 0.0;
    let brRadiusY = opts && 'brRadiusY' in opts ? opts.brRadiusY : 0.0;
    let blRadiusX = opts && 'blRadiusX' in opts ? opts.blRadiusX : 0.0;
    let blRadiusY = opts && 'blRadiusY' in opts ? opts.blRadiusY : 0.0;
    this[left$0] = left;
    this[top$0] = top;
    this[right$0] = right;
    this[bottom$0] = bottom;
    this[tlRadiusX$] = tlRadiusX;
    this[tlRadiusY$] = tlRadiusY;
    this[trRadiusX$] = trRadiusX;
    this[trRadiusY$] = trRadiusY;
    this[brRadiusX$] = brRadiusX;
    this[brRadiusY$] = brRadiusY;
    this[blRadiusX$] = blRadiusX;
    this[blRadiusY$] = blRadiusY;
    if (!(left != null)) dart.assertFailed();
    if (!(top != null)) dart.assertFailed();
    if (!(right != null)) dart.assertFailed();
    if (!(bottom != null)) dart.assertFailed();
    if (!(tlRadiusX != null)) dart.assertFailed();
    if (!(tlRadiusY != null)) dart.assertFailed();
    if (!(trRadiusX != null)) dart.assertFailed();
    if (!(trRadiusY != null)) dart.assertFailed();
    if (!(brRadiusX != null)) dart.assertFailed();
    if (!(brRadiusY != null)) dart.assertFailed();
    if (!(blRadiusX != null)) dart.assertFailed();
    if (!(blRadiusY != null)) dart.assertFailed();
  }).prototype = ui.RRect.prototype;
  dart.addTypeTests(ui.RRect);
  const left$0 = Symbol("RRect.left");
  const top$0 = Symbol("RRect.top");
  const right$0 = Symbol("RRect.right");
  const bottom$0 = Symbol("RRect.bottom");
  const tlRadiusX$ = Symbol("RRect.tlRadiusX");
  const tlRadiusY$ = Symbol("RRect.tlRadiusY");
  const trRadiusX$ = Symbol("RRect.trRadiusX");
  const trRadiusY$ = Symbol("RRect.trRadiusY");
  const brRadiusX$ = Symbol("RRect.brRadiusX");
  const brRadiusY$ = Symbol("RRect.brRadiusY");
  const blRadiusX$ = Symbol("RRect.blRadiusX");
  const blRadiusY$ = Symbol("RRect.blRadiusY");
  dart.setMethodSignature(ui.RRect, () => ({
    __proto__: dart.getMethods(ui.RRect.__proto__),
    shift: dart.fnType(ui.RRect, [ui.Offset]),
    inflate: dart.fnType(ui.RRect, [core.double]),
    deflate: dart.fnType(ui.RRect, [core.double]),
    [_getMin]: dart.fnType(core.double, [core.double, core.double, core.double, core.double]),
    [_scaleRadii]: dart.fnType(ui.RRect, []),
    contains: dart.fnType(core.bool, [ui.Offset])
  }));
  dart.setGetterSignature(ui.RRect, () => ({
    __proto__: dart.getGetters(ui.RRect.__proto__),
    tlRadius: ui.Radius,
    trRadius: ui.Radius,
    brRadius: ui.Radius,
    blRadius: ui.Radius,
    width: core.double,
    height: core.double,
    outerRect: ui.Rect,
    safeInnerRect: ui.Rect,
    middleRect: ui.Rect,
    wideMiddleRect: ui.Rect,
    tallMiddleRect: ui.Rect,
    isEmpty: core.bool,
    isFinite: core.bool,
    isRect: core.bool,
    isStadium: core.bool,
    isEllipse: core.bool,
    isCircle: core.bool,
    shortestSide: core.double,
    longestSide: core.double,
    hasNaN: core.bool,
    center: ui.Offset
  }));
  dart.setFieldSignature(ui.RRect, () => ({
    __proto__: dart.getFields(ui.RRect.__proto__),
    left: dart.finalFieldType(core.double),
    top: dart.finalFieldType(core.double),
    right: dart.finalFieldType(core.double),
    bottom: dart.finalFieldType(core.double),
    tlRadiusX: dart.finalFieldType(core.double),
    tlRadiusY: dart.finalFieldType(core.double),
    trRadiusX: dart.finalFieldType(core.double),
    trRadiusY: dart.finalFieldType(core.double),
    brRadiusX: dart.finalFieldType(core.double),
    brRadiusY: dart.finalFieldType(core.double),
    blRadiusX: dart.finalFieldType(core.double),
    blRadiusY: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(ui.RRect, ['_equals', 'toString']);
  dart.defineExtensionAccessors(ui.RRect, ['hashCode']);
  dart.defineLazy(ui.RRect, {
    /*ui.RRect.zero*/get zero() {
      return dart.const(new ui.RRect._raw());
    }
  });
  const _value = dart.privateName(ui, "_value");
  ui.RSTransform = class RSTransform extends core.Object {
    static fromComponents(opts) {
      let rotation = opts && 'rotation' in opts ? opts.rotation : null;
      let scale = opts && 'scale' in opts ? opts.scale : null;
      let anchorX = opts && 'anchorX' in opts ? opts.anchorX : null;
      let anchorY = opts && 'anchorY' in opts ? opts.anchorY : null;
      let translateX = opts && 'translateX' in opts ? opts.translateX : null;
      let translateY = opts && 'translateY' in opts ? opts.translateY : null;
      let scos = math.cos(rotation) * dart.notNull(scale);
      let ssin = math.sin(rotation) * dart.notNull(scale);
      let tx = dart.notNull(translateX) + -scos * dart.notNull(anchorX) + ssin * dart.notNull(anchorY);
      let ty = dart.notNull(translateY) + -ssin * dart.notNull(anchorX) - scos * dart.notNull(anchorY);
      return new ui.RSTransform.new(scos, ssin, tx, ty);
    }
    get scos() {
      return this[_value][$_get](0);
    }
    get ssin() {
      return this[_value][$_get](1);
    }
    get tx() {
      return this[_value][$_get](2);
    }
    get ty() {
      return this[_value][$_get](3);
    }
  };
  (ui.RSTransform.new = function(scos, ssin, tx, ty) {
    this[_value] = typed_data.Float32List.new(4);
    this[_value][$_set](0, scos);
    this[_value][$_set](1, ssin);
    this[_value][$_set](2, tx);
    this[_value][$_set](3, ty);
  }).prototype = ui.RSTransform.prototype;
  dart.addTypeTests(ui.RSTransform);
  dart.setGetterSignature(ui.RSTransform, () => ({
    __proto__: dart.getGetters(ui.RSTransform.__proto__),
    scos: core.double,
    ssin: core.double,
    tx: core.double,
    ty: core.double
  }));
  dart.setFieldSignature(ui.RSTransform, () => ({
    __proto__: dart.getFields(ui.RSTransform.__proto__),
    [_value]: dart.finalFieldType(typed_data.Float32List)
  }));
  ui.Point = class Point extends core.Object {
    get x() {
      return this[x$0];
    }
    set x(value) {
      super.x = value;
    }
    get y() {
      return this[y$0];
    }
    set y(value) {
      super.y = value;
    }
    _negate() {
      return new ui.Point.new(-dart.notNull(this.x), -dart.notNull(this.y));
    }
    ['-'](other) {
      return new ui.Offset.new(dart.notNull(this.x) - dart.notNull(other.x), dart.notNull(this.y) - dart.notNull(other.y));
    }
    ['+'](other) {
      return new ui.Point.new(dart.notNull(this.x) + dart.notNull(other.dx), dart.notNull(this.y) + dart.notNull(other.dy));
    }
    ['&'](other) {
      return new ui.Rect.fromLTWH(this.x, this.y, other.width, other.height);
    }
    ['*'](operand) {
      return new ui.Point.new(dart.notNull(this.x) * dart.notNull(operand), dart.notNull(this.y) * dart.notNull(operand));
    }
    ['/'](operand) {
      return new ui.Point.new(dart.notNull(this.x) / dart.notNull(operand), dart.notNull(this.y) / dart.notNull(operand));
    }
    ['~/'](operand) {
      return new ui.Point.new((dart.notNull(this.x) / dart.notNull(operand))[$truncate]()[$toDouble](), (dart.notNull(this.y) / dart.notNull(operand))[$truncate]()[$toDouble]());
    }
    ['%'](operand) {
      return new ui.Point.new(this.x[$modulo](operand), this.y[$modulo](operand));
    }
    toOffset() {
      return new ui.Offset.new(this.x, this.y);
    }
    static lerp(a, b, t) {
      if (a == null && b == null) return null;
      if (a == null) return b['*'](t);
      if (b == null) return a['*'](1.0 - dart.notNull(t));
      return new ui.Point.new(ui.lerpDouble(a.x, b.x, t), ui.lerpDouble(a.y, b.y, t));
    }
    _equals(other) {
      if (other == null) return false;
      if (!ui.Point.is(other)) return false;
      let typedOther = ui.Point._check(other);
      return this.x == typedOther.x && this.y == typedOther.y;
    }
    get hashCode() {
      return ui.hashValues(this.x, this.y);
    }
    toString() {
      return "Point(" + dart.str(this.x == null ? null : this.x[$toStringAsFixed](1)) + ", " + dart.str(this.y == null ? null : this.y[$toStringAsFixed](1)) + ")";
    }
  };
  (ui.Point.new = function(x, y) {
    this[x$0] = x;
    this[y$0] = y;
  }).prototype = ui.Point.prototype;
  dart.addTypeTests(ui.Point);
  const x$0 = Symbol("Point.x");
  const y$0 = Symbol("Point.y");
  dart.setMethodSignature(ui.Point, () => ({
    __proto__: dart.getMethods(ui.Point.__proto__),
    _negate: dart.fnType(ui.Point, []),
    '-': dart.fnType(ui.Offset, [ui.Point]),
    '+': dart.fnType(ui.Point, [ui.Offset]),
    '&': dart.fnType(ui.Rect, [ui.Size]),
    '*': dart.fnType(ui.Point, [core.double]),
    '/': dart.fnType(ui.Point, [core.double]),
    '~/': dart.fnType(ui.Point, [core.double]),
    '%': dart.fnType(ui.Point, [core.double]),
    toOffset: dart.fnType(ui.Offset, [])
  }));
  dart.setFieldSignature(ui.Point, () => ({
    __proto__: dart.getFields(ui.Point.__proto__),
    x: dart.finalFieldType(core.double),
    y: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(ui.Point, ['_equals', 'toString']);
  dart.defineExtensionAccessors(ui.Point, ['hashCode']);
  dart.defineLazy(ui.Point, {
    /*ui.Point.origin*/get origin() {
      return dart.const(new ui.Point.new(0.0, 0.0));
    }
  });
  ui._HashEnd = class _HashEnd extends core.Object {};
  (ui._HashEnd.new = function() {
  }).prototype = ui._HashEnd.prototype;
  dart.addTypeTests(ui._HashEnd);
  dart.defineLazy(ui, {
    /*ui._hashEnd*/get _hashEnd() {
      return dart.const(new ui._HashEnd.new());
    }
  });
  ui.hashValues = function(arg01, arg02, arg03, arg04, arg05, arg06, arg07, arg08, arg09, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20) {
    if (arg03 === void 0) arg03 = ui._hashEnd;
    if (arg04 === void 0) arg04 = ui._hashEnd;
    if (arg05 === void 0) arg05 = ui._hashEnd;
    if (arg06 === void 0) arg06 = ui._hashEnd;
    if (arg07 === void 0) arg07 = ui._hashEnd;
    if (arg08 === void 0) arg08 = ui._hashEnd;
    if (arg09 === void 0) arg09 = ui._hashEnd;
    if (arg10 === void 0) arg10 = ui._hashEnd;
    if (arg11 === void 0) arg11 = ui._hashEnd;
    if (arg12 === void 0) arg12 = ui._hashEnd;
    if (arg13 === void 0) arg13 = ui._hashEnd;
    if (arg14 === void 0) arg14 = ui._hashEnd;
    if (arg15 === void 0) arg15 = ui._hashEnd;
    if (arg16 === void 0) arg16 = ui._hashEnd;
    if (arg17 === void 0) arg17 = ui._hashEnd;
    if (arg18 === void 0) arg18 = ui._hashEnd;
    if (arg19 === void 0) arg19 = ui._hashEnd;
    if (arg20 === void 0) arg20 = ui._hashEnd;
    let result = 373;
    if (!!core.Iterable.is(arg01)) dart.assertFailed();
    result = 37 * result + dart.notNull(dart.hashCode(arg01));
    if (!!core.Iterable.is(arg02)) dart.assertFailed();
    result = 37 * result + dart.notNull(dart.hashCode(arg02));
    if (!dart.equals(arg03, ui._hashEnd)) {
      if (!!core.Iterable.is(arg03)) dart.assertFailed();
      result = 37 * result + dart.notNull(dart.hashCode(arg03));
      if (!dart.equals(arg04, ui._hashEnd)) {
        if (!!core.Iterable.is(arg04)) dart.assertFailed();
        result = 37 * result + dart.notNull(dart.hashCode(arg04));
        if (!dart.equals(arg05, ui._hashEnd)) {
          if (!!core.Iterable.is(arg05)) dart.assertFailed();
          result = 37 * result + dart.notNull(dart.hashCode(arg05));
          if (!dart.equals(arg06, ui._hashEnd)) {
            if (!!core.Iterable.is(arg06)) dart.assertFailed();
            result = 37 * result + dart.notNull(dart.hashCode(arg06));
            if (!dart.equals(arg07, ui._hashEnd)) {
              if (!!core.Iterable.is(arg07)) dart.assertFailed();
              result = 37 * result + dart.notNull(dart.hashCode(arg07));
              if (!dart.equals(arg08, ui._hashEnd)) {
                if (!!core.Iterable.is(arg08)) dart.assertFailed();
                result = 37 * result + dart.notNull(dart.hashCode(arg08));
                if (!dart.equals(arg09, ui._hashEnd)) {
                  if (!!core.Iterable.is(arg09)) dart.assertFailed();
                  result = 37 * result + dart.notNull(dart.hashCode(arg09));
                  if (!dart.equals(arg10, ui._hashEnd)) {
                    if (!!core.Iterable.is(arg10)) dart.assertFailed();
                    result = 37 * result + dart.notNull(dart.hashCode(arg10));
                    if (!dart.equals(arg11, ui._hashEnd)) {
                      if (!!core.Iterable.is(arg11)) dart.assertFailed();
                      result = 37 * result + dart.notNull(dart.hashCode(arg11));
                      if (!dart.equals(arg12, ui._hashEnd)) {
                        if (!!core.Iterable.is(arg12)) dart.assertFailed();
                        result = 37 * result + dart.notNull(dart.hashCode(arg12));
                        if (!dart.equals(arg13, ui._hashEnd)) {
                          if (!!core.Iterable.is(arg13)) dart.assertFailed();
                          result = 37 * result + dart.notNull(dart.hashCode(arg13));
                          if (!dart.equals(arg14, ui._hashEnd)) {
                            if (!!core.Iterable.is(arg14)) dart.assertFailed();
                            result = 37 * result + dart.notNull(dart.hashCode(arg14));
                            if (!dart.equals(arg15, ui._hashEnd)) {
                              if (!!core.Iterable.is(arg15)) dart.assertFailed();
                              result = 37 * result + dart.notNull(dart.hashCode(arg15));
                              if (!dart.equals(arg16, ui._hashEnd)) {
                                if (!!core.Iterable.is(arg16)) dart.assertFailed();
                                result = 37 * result + dart.notNull(dart.hashCode(arg16));
                                if (!dart.equals(arg17, ui._hashEnd)) {
                                  if (!!core.Iterable.is(arg17)) dart.assertFailed();
                                  result = 37 * result + dart.notNull(dart.hashCode(arg17));
                                  if (!dart.equals(arg18, ui._hashEnd)) {
                                    if (!!core.Iterable.is(arg18)) dart.assertFailed();
                                    result = 37 * result + dart.notNull(dart.hashCode(arg18));
                                    if (!dart.equals(arg19, ui._hashEnd)) {
                                      if (!!core.Iterable.is(arg19)) dart.assertFailed();
                                      result = 37 * result + dart.notNull(dart.hashCode(arg19));
                                      if (!dart.equals(arg20, ui._hashEnd)) {
                                        if (!!core.Iterable.is(arg20)) dart.assertFailed();
                                        result = 37 * result + dart.notNull(dart.hashCode(arg20));
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return result;
  };
  ui.hashList = function(args) {
    let result = 373;
    if (args != null) {
      for (let arg of args) {
        if (!!core.Iterable.is(arg)) dart.assertFailed();
        result = 37 * result + dart.notNull(dart.hashCode(arg));
      }
    }
    return result;
  };
  let const$0;
  ui.webOnlyInitializePlatform = function(opts) {
    let assetManager = opts && 'assetManager' in opts ? opts.assetManager : null;
    return async.async(dart.void, function* webOnlyInitializePlatform() {
      if (!dart.test(src__engine.domRenderer.debugIsInWidgetTest)) {
        ui.window.webOnlyLocationStrategy = const$0 || (const$0 = dart.const(new ui.HashLocationStrategy.new()));
      }
      if (assetManager == null) {
        assetManager = new src__engine.AssetManager.new();
      }
      yield ui.webOnlySetAssetManager(assetManager);
      yield ui._fontCollection.ensureFontsLoaded();
      src__engine.webOnlyInitializeEngine();
      ui._webOnlyIsInitialized = true;
    });
  };
  dart.defineLazy(ui, {
    /*ui._assetManager*/get _assetManager() {
      return null;
    },
    set _assetManager(_) {},
    /*ui._fontCollection*/get _fontCollection() {
      return null;
    },
    set _fontCollection(_) {},
    /*ui._webOnlyIsInitialized*/get _webOnlyIsInitialized() {
      return false;
    },
    set _webOnlyIsInitialized(_) {}
  });
  dart.copyProperties(ui, {
    get webOnlyIsInitialized() {
      return ui._webOnlyIsInitialized;
    }
  });
  ui.webOnlySetAssetManager = function(assetManager) {
    return async.async(dart.void, function* webOnlySetAssetManager() {
      if (!(assetManager != null)) dart.assertFailed("Cannot set assetManager to null");
      if (dart.equals(assetManager, ui._assetManager)) return;
      ui._assetManager = assetManager;
      let t = ui._fontCollection;
      t == null ? ui._fontCollection = new src__engine.FontCollection.new() : t;
      ui._fontCollection.clear();
      if (ui._assetManager != null) {
        yield ui._fontCollection.registerFonts(ui._assetManager);
      }
      if (dart.test(src__engine.domRenderer.debugIsInWidgetTest)) {
        ui._fontCollection.debugRegisterTestFonts();
      }
    });
  };
  dart.copyProperties(ui, {
    get webOnlyAssetManager() {
      return ui._assetManager;
    }
  });
  dart.copyProperties(ui, {
    get webOnlyFontCollection() {
      return ui._fontCollection;
    }
  });
  ui.lerpDouble = function(a, b, t) {
    {
      if (a == null && b == null) return null;
      let t$ = a;
      t$ == null ? a = 0.0 : t$;
      let t$0 = b;
      t$0 == null ? b = 0.0 : t$0;
      return dart.notNull(a) + (dart.notNull(b) - dart.notNull(a)) * dart.notNull(t);
    }
  };
  ui.saveCompilationTrace = function() {
    dart.throw(new core.UnimplementedError.new());
  };
  ui._offsetIsValid = function(offset) {
    if (!(offset != null)) dart.assertFailed("Offset argument was null.");
    if (!(!offset.dx[$isNaN] && !offset.dy[$isNaN])) dart.assertFailed("Offset argument contained a NaN value.");
    return true;
  };
  ui._matrix4IsValid = function(matrix4) {
    if (!(matrix4 != null)) dart.assertFailed("Matrix4 argument was null.");
    if (!(matrix4[$length] === 16)) dart.assertFailed("Matrix4 must have 16 entries.");
    return true;
  };
  ui._scaleAlpha = function(a, factor) {
    return a.withAlpha(dart.asInt((dart.notNull(a.alpha) * dart.notNull(factor))[$round]()[$clamp](0, 255)));
  };
  ui.Color = class Color extends core.Object {
    get value() {
      return this[_value];
    }
    get alpha() {
      return (4278190080 & dart.notNull(this[_value])) >>> 24;
    }
    get opacity() {
      return dart.notNull(this.alpha) / 255;
    }
    get red() {
      return (16711680 & dart.notNull(this[_value])) >>> 16;
    }
    get green() {
      return (65280 & dart.notNull(this[_value])) >>> 8;
    }
    get blue() {
      return (255 & dart.notNull(this[_value])) >>> 0;
    }
    withAlpha(a) {
      return new ui.Color.fromARGB(a, this.red, this.green, this.blue);
    }
    withOpacity(opacity) {
      if (!(dart.notNull(opacity) >= 0.0 && dart.notNull(opacity) <= 1.0)) dart.assertFailed();
      return this.withAlpha((255.0 * dart.notNull(opacity))[$round]());
    }
    withRed(r) {
      return new ui.Color.fromARGB(this.alpha, r, this.green, this.blue);
    }
    withGreen(g) {
      return new ui.Color.fromARGB(this.alpha, this.red, g, this.blue);
    }
    withBlue(b) {
      return new ui.Color.fromARGB(this.alpha, this.red, this.green, b);
    }
    static _linearizeColorComponent(component) {
      if (dart.notNull(component) <= 0.03928) return dart.notNull(component) / 12.92;
      return math.pow((dart.notNull(component) + 0.055) / 1.055, 2.4);
    }
    computeLuminance() {
      let R = ui.Color._linearizeColorComponent(dart.notNull(this.red) / 255);
      let G = ui.Color._linearizeColorComponent(dart.notNull(this.green) / 255);
      let B = ui.Color._linearizeColorComponent(dart.notNull(this.blue) / 255);
      return 0.2126 * dart.notNull(R) + 0.7152 * dart.notNull(G) + 0.0722 * dart.notNull(B);
    }
    static lerp(a, b, t) {
      if (!(t != null)) dart.assertFailed();
      if (a == null && b == null) return null;
      if (a == null) return ui._scaleAlpha(b, t);
      if (b == null) return ui._scaleAlpha(a, 1.0 - dart.notNull(t));
      return new ui.Color.fromARGB(dart.asInt(ui.lerpDouble(a.alpha, b.alpha, t)[$toInt]()[$clamp](0, 255)), dart.asInt(ui.lerpDouble(a.red, b.red, t)[$toInt]()[$clamp](0, 255)), dart.asInt(ui.lerpDouble(a.green, b.green, t)[$toInt]()[$clamp](0, 255)), dart.asInt(ui.lerpDouble(a.blue, b.blue, t)[$toInt]()[$clamp](0, 255)));
    }
    static alphaBlend(foreground, background) {
      let alpha = foreground.alpha;
      if (alpha === 0) {
        return background;
      }
      let invAlpha = 255 - dart.notNull(alpha);
      let backAlpha = background.alpha;
      if (backAlpha === 255) {
        return new ui.Color.fromARGB(255, ((dart.notNull(alpha) * dart.notNull(foreground.red) + invAlpha * dart.notNull(background.red)) / 255)[$truncate](), ((dart.notNull(alpha) * dart.notNull(foreground.green) + invAlpha * dart.notNull(background.green)) / 255)[$truncate](), ((dart.notNull(alpha) * dart.notNull(foreground.blue) + invAlpha * dart.notNull(background.blue)) / 255)[$truncate]());
      } else {
        backAlpha = (dart.notNull(backAlpha) * invAlpha / 255)[$truncate]();
        let outAlpha = dart.notNull(alpha) + dart.notNull(backAlpha);
        if (!(outAlpha !== 0)) dart.assertFailed();
        return new ui.Color.fromARGB(outAlpha, ((dart.notNull(foreground.red) * dart.notNull(alpha) + dart.notNull(background.red) * dart.notNull(backAlpha)) / outAlpha)[$truncate](), ((dart.notNull(foreground.green) * dart.notNull(alpha) + dart.notNull(background.green) * dart.notNull(backAlpha)) / outAlpha)[$truncate](), ((dart.notNull(foreground.blue) * dart.notNull(alpha) + dart.notNull(background.blue) * dart.notNull(backAlpha)) / outAlpha)[$truncate]());
      }
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      let typedOther = ui.Color._check(other);
      return this.value == typedOther.value;
    }
    get hashCode() {
      return dart.hashCode(this[_value]);
    }
    toCssString() {
      if ((4278190080 & dart.notNull(this[_value])) >>> 0 === 4278190080) {
        return this.toCssStringRgbOnly();
      } else {
        let alpha = (this[_value][$rightShift](24) & 255) / 255.0;
        let sb = new core.StringBuffer.new();
        sb.write("rgba(");
        sb.write((dart.notNull(this[_value]) >> 16 & 255)[$toString]());
        sb.write(",");
        sb.write((dart.notNull(this[_value]) >> 8 & 255)[$toString]());
        sb.write(",");
        sb.write((dart.notNull(this[_value]) & 255)[$toString]());
        sb.write(",");
        sb.write(alpha[$toString]());
        sb.write(")");
        return sb.toString();
      }
    }
    toCssStringRgbOnly() {
      let paddedValue = "00000" + this[_value][$toRadixString](16);
      return "#" + paddedValue[$substring](paddedValue.length - 6);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "Color(0x" + this.value[$toRadixString](16)[$padLeft](8, "0") + ")";
      } else {
        return super.toString();
      }
    }
  };
  (ui.Color.new = function(value) {
    this[_value] = (dart.notNull(value) & 4294967295) >>> 0;
  }).prototype = ui.Color.prototype;
  (ui.Color.fromARGB = function(a, r, g, b) {
    this[_value] = (((dart.notNull(a) & 255) << 24 | (dart.notNull(r) & 255) << 16 | (dart.notNull(g) & 255) << 8 | (dart.notNull(b) & 255) << 0) & 4294967295) >>> 0;
  }).prototype = ui.Color.prototype;
  (ui.Color.fromRGBO = function(r, g, b, opacity) {
    this[_value] = ((((dart.notNull(opacity) * 255 / 1)[$truncate]() & 255) << 24 | (dart.notNull(r) & 255) << 16 | (dart.notNull(g) & 255) << 8 | (dart.notNull(b) & 255) << 0) & 4294967295) >>> 0;
  }).prototype = ui.Color.prototype;
  dart.addTypeTests(ui.Color);
  dart.setMethodSignature(ui.Color, () => ({
    __proto__: dart.getMethods(ui.Color.__proto__),
    withAlpha: dart.fnType(ui.Color, [core.int]),
    withOpacity: dart.fnType(ui.Color, [core.double]),
    withRed: dart.fnType(ui.Color, [core.int]),
    withGreen: dart.fnType(ui.Color, [core.int]),
    withBlue: dart.fnType(ui.Color, [core.int]),
    computeLuminance: dart.fnType(core.double, []),
    toCssString: dart.fnType(core.String, []),
    toCssStringRgbOnly: dart.fnType(core.String, [])
  }));
  dart.setGetterSignature(ui.Color, () => ({
    __proto__: dart.getGetters(ui.Color.__proto__),
    value: core.int,
    alpha: core.int,
    opacity: core.double,
    red: core.int,
    green: core.int,
    blue: core.int
  }));
  dart.setFieldSignature(ui.Color, () => ({
    __proto__: dart.getFields(ui.Color.__proto__),
    [_value]: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.Color, ['_equals', 'toString']);
  dart.defineExtensionAccessors(ui.Color, ['hashCode']);
  ui.StrokeCap = class StrokeCap extends core.Object {
    toString() {
      return {
        0: "StrokeCap.butt",
        1: "StrokeCap.round",
        2: "StrokeCap.square"
      }[this.index];
    }
  };
  (ui.StrokeCap.new = function(x) {
    this.index = x;
  }).prototype = ui.StrokeCap.prototype;
  dart.addTypeTests(ui.StrokeCap);
  dart.setFieldSignature(ui.StrokeCap, () => ({
    __proto__: dart.getFields(ui.StrokeCap.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.StrokeCap, ['toString']);
  ui.StrokeCap.butt = dart.const(new ui.StrokeCap.new(0));
  ui.StrokeCap.round = dart.const(new ui.StrokeCap.new(1));
  ui.StrokeCap.square = dart.const(new ui.StrokeCap.new(2));
  ui.StrokeCap.values = dart.constList([ui.StrokeCap.butt, ui.StrokeCap.round, ui.StrokeCap.square], ui.StrokeCap);
  ui.StrokeJoin = class StrokeJoin extends core.Object {
    toString() {
      return {
        0: "StrokeJoin.miter",
        1: "StrokeJoin.round",
        2: "StrokeJoin.bevel"
      }[this.index];
    }
  };
  (ui.StrokeJoin.new = function(x) {
    this.index = x;
  }).prototype = ui.StrokeJoin.prototype;
  dart.addTypeTests(ui.StrokeJoin);
  dart.setFieldSignature(ui.StrokeJoin, () => ({
    __proto__: dart.getFields(ui.StrokeJoin.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.StrokeJoin, ['toString']);
  ui.StrokeJoin.miter = dart.const(new ui.StrokeJoin.new(0));
  ui.StrokeJoin.round = dart.const(new ui.StrokeJoin.new(1));
  ui.StrokeJoin.bevel = dart.const(new ui.StrokeJoin.new(2));
  ui.StrokeJoin.values = dart.constList([ui.StrokeJoin.miter, ui.StrokeJoin.round, ui.StrokeJoin.bevel], ui.StrokeJoin);
  ui.PaintingStyle = class PaintingStyle extends core.Object {
    toString() {
      return {
        0: "PaintingStyle.fill",
        1: "PaintingStyle.stroke"
      }[this.index];
    }
  };
  (ui.PaintingStyle.new = function(x) {
    this.index = x;
  }).prototype = ui.PaintingStyle.prototype;
  dart.addTypeTests(ui.PaintingStyle);
  dart.setFieldSignature(ui.PaintingStyle, () => ({
    __proto__: dart.getFields(ui.PaintingStyle.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.PaintingStyle, ['toString']);
  ui.PaintingStyle.fill = dart.const(new ui.PaintingStyle.new(0));
  ui.PaintingStyle.stroke = dart.const(new ui.PaintingStyle.new(1));
  ui.PaintingStyle.values = dart.constList([ui.PaintingStyle.fill, ui.PaintingStyle.stroke], ui.PaintingStyle);
  ui.BlendMode = class BlendMode extends core.Object {
    toString() {
      return {
        0: "BlendMode.clear",
        1: "BlendMode.src",
        2: "BlendMode.dst",
        3: "BlendMode.srcOver",
        4: "BlendMode.dstOver",
        5: "BlendMode.srcIn",
        6: "BlendMode.dstIn",
        7: "BlendMode.srcOut",
        8: "BlendMode.dstOut",
        9: "BlendMode.srcATop",
        10: "BlendMode.dstATop",
        11: "BlendMode.xor",
        12: "BlendMode.plus",
        13: "BlendMode.modulate",
        14: "BlendMode.screen",
        15: "BlendMode.overlay",
        16: "BlendMode.darken",
        17: "BlendMode.lighten",
        18: "BlendMode.colorDodge",
        19: "BlendMode.colorBurn",
        20: "BlendMode.hardLight",
        21: "BlendMode.softLight",
        22: "BlendMode.difference",
        23: "BlendMode.exclusion",
        24: "BlendMode.multiply",
        25: "BlendMode.hue",
        26: "BlendMode.saturation",
        27: "BlendMode.color",
        28: "BlendMode.luminosity"
      }[this.index];
    }
  };
  (ui.BlendMode.new = function(x) {
    this.index = x;
  }).prototype = ui.BlendMode.prototype;
  dart.addTypeTests(ui.BlendMode);
  dart.setFieldSignature(ui.BlendMode, () => ({
    __proto__: dart.getFields(ui.BlendMode.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.BlendMode, ['toString']);
  ui.BlendMode.clear = dart.const(new ui.BlendMode.new(0));
  ui.BlendMode.src = dart.const(new ui.BlendMode.new(1));
  ui.BlendMode.dst = dart.const(new ui.BlendMode.new(2));
  ui.BlendMode.srcOver = dart.const(new ui.BlendMode.new(3));
  ui.BlendMode.dstOver = dart.const(new ui.BlendMode.new(4));
  ui.BlendMode.srcIn = dart.const(new ui.BlendMode.new(5));
  ui.BlendMode.dstIn = dart.const(new ui.BlendMode.new(6));
  ui.BlendMode.srcOut = dart.const(new ui.BlendMode.new(7));
  ui.BlendMode.dstOut = dart.const(new ui.BlendMode.new(8));
  ui.BlendMode.srcATop = dart.const(new ui.BlendMode.new(9));
  ui.BlendMode.dstATop = dart.const(new ui.BlendMode.new(10));
  ui.BlendMode.xor = dart.const(new ui.BlendMode.new(11));
  ui.BlendMode.plus = dart.const(new ui.BlendMode.new(12));
  ui.BlendMode.modulate = dart.const(new ui.BlendMode.new(13));
  ui.BlendMode.screen = dart.const(new ui.BlendMode.new(14));
  ui.BlendMode.overlay = dart.const(new ui.BlendMode.new(15));
  ui.BlendMode.darken = dart.const(new ui.BlendMode.new(16));
  ui.BlendMode.lighten = dart.const(new ui.BlendMode.new(17));
  ui.BlendMode.colorDodge = dart.const(new ui.BlendMode.new(18));
  ui.BlendMode.colorBurn = dart.const(new ui.BlendMode.new(19));
  ui.BlendMode.hardLight = dart.const(new ui.BlendMode.new(20));
  ui.BlendMode.softLight = dart.const(new ui.BlendMode.new(21));
  ui.BlendMode.difference = dart.const(new ui.BlendMode.new(22));
  ui.BlendMode.exclusion = dart.const(new ui.BlendMode.new(23));
  ui.BlendMode.multiply = dart.const(new ui.BlendMode.new(24));
  ui.BlendMode.hue = dart.const(new ui.BlendMode.new(25));
  ui.BlendMode.saturation = dart.const(new ui.BlendMode.new(26));
  ui.BlendMode.color = dart.const(new ui.BlendMode.new(27));
  ui.BlendMode.luminosity = dart.const(new ui.BlendMode.new(28));
  ui.BlendMode.values = dart.constList([ui.BlendMode.clear, ui.BlendMode.src, ui.BlendMode.dst, ui.BlendMode.srcOver, ui.BlendMode.dstOver, ui.BlendMode.srcIn, ui.BlendMode.dstIn, ui.BlendMode.srcOut, ui.BlendMode.dstOut, ui.BlendMode.srcATop, ui.BlendMode.dstATop, ui.BlendMode.xor, ui.BlendMode.plus, ui.BlendMode.modulate, ui.BlendMode.screen, ui.BlendMode.overlay, ui.BlendMode.darken, ui.BlendMode.lighten, ui.BlendMode.colorDodge, ui.BlendMode.colorBurn, ui.BlendMode.hardLight, ui.BlendMode.softLight, ui.BlendMode.difference, ui.BlendMode.exclusion, ui.BlendMode.multiply, ui.BlendMode.hue, ui.BlendMode.saturation, ui.BlendMode.color, ui.BlendMode.luminosity], ui.BlendMode);
  ui.Clip = class Clip extends core.Object {
    toString() {
      return {
        0: "Clip.none",
        1: "Clip.hardEdge",
        2: "Clip.antiAlias",
        3: "Clip.antiAliasWithSaveLayer"
      }[this.index];
    }
  };
  (ui.Clip.new = function(x) {
    this.index = x;
  }).prototype = ui.Clip.prototype;
  dart.addTypeTests(ui.Clip);
  dart.setFieldSignature(ui.Clip, () => ({
    __proto__: dart.getFields(ui.Clip.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.Clip, ['toString']);
  ui.Clip.none = dart.const(new ui.Clip.new(0));
  ui.Clip.hardEdge = dart.const(new ui.Clip.new(1));
  ui.Clip.antiAlias = dart.const(new ui.Clip.new(2));
  ui.Clip.antiAliasWithSaveLayer = dart.const(new ui.Clip.new(3));
  ui.Clip.values = dart.constList([ui.Clip.none, ui.Clip.hardEdge, ui.Clip.antiAlias, ui.Clip.antiAliasWithSaveLayer], ui.Clip);
  ui.PaintData = class PaintData extends core.Object {
    get blendMode() {
      return this[blendMode];
    }
    set blendMode(value) {
      this[blendMode] = value;
    }
    get style() {
      return this[style];
    }
    set style(value) {
      this[style] = value;
    }
    get strokeWidth() {
      return this[strokeWidth];
    }
    set strokeWidth(value) {
      this[strokeWidth] = value;
    }
    get strokeCap() {
      return this[strokeCap];
    }
    set strokeCap(value) {
      this[strokeCap] = value;
    }
    get strokeJoin() {
      return this[strokeJoin];
    }
    set strokeJoin(value) {
      this[strokeJoin] = value;
    }
    get isAntiAlias() {
      return this[isAntiAlias];
    }
    set isAntiAlias(value) {
      this[isAntiAlias] = value;
    }
    get color() {
      return this[color];
    }
    set color(value) {
      this[color] = value;
    }
    get shader() {
      return this[shader];
    }
    set shader(value) {
      this[shader] = value;
    }
    get maskFilter() {
      return this[maskFilter];
    }
    set maskFilter(value) {
      this[maskFilter] = value;
    }
    get filterQuality() {
      return this[filterQuality];
    }
    set filterQuality(value) {
      this[filterQuality] = value;
    }
    get colorFilter() {
      return this[colorFilter];
    }
    set colorFilter(value) {
      this[colorFilter] = value;
    }
    clone() {
      let _ = new ui.PaintData.new();
      _.blendMode = this.blendMode;
      _.filterQuality = this.filterQuality;
      _.maskFilter = this.maskFilter;
      _.shader = this.shader;
      _.isAntiAlias = this.isAntiAlias;
      _.color = this.color;
      _.colorFilter = this.colorFilter;
      _.strokeWidth = this.strokeWidth;
      _.style = this.style;
      _.strokeJoin = this.strokeJoin;
      _.strokeCap = this.strokeCap;
      return _;
    }
  };
  (ui.PaintData.new = function() {
    this[blendMode] = null;
    this[style] = null;
    this[strokeWidth] = null;
    this[strokeCap] = null;
    this[strokeJoin] = null;
    this[isAntiAlias] = true;
    this[color] = null;
    this[shader] = null;
    this[maskFilter] = null;
    this[filterQuality] = null;
    this[colorFilter] = null;
  }).prototype = ui.PaintData.prototype;
  dart.addTypeTests(ui.PaintData);
  const blendMode = Symbol("PaintData.blendMode");
  const style = Symbol("PaintData.style");
  const strokeWidth = Symbol("PaintData.strokeWidth");
  const strokeCap = Symbol("PaintData.strokeCap");
  const strokeJoin = Symbol("PaintData.strokeJoin");
  const isAntiAlias = Symbol("PaintData.isAntiAlias");
  const color = Symbol("PaintData.color");
  const shader = Symbol("PaintData.shader");
  const maskFilter = Symbol("PaintData.maskFilter");
  const filterQuality = Symbol("PaintData.filterQuality");
  const colorFilter = Symbol("PaintData.colorFilter");
  dart.setMethodSignature(ui.PaintData, () => ({
    __proto__: dart.getMethods(ui.PaintData.__proto__),
    clone: dart.fnType(ui.PaintData, [])
  }));
  dart.setFieldSignature(ui.PaintData, () => ({
    __proto__: dart.getFields(ui.PaintData.__proto__),
    blendMode: dart.fieldType(ui.BlendMode),
    style: dart.fieldType(ui.PaintingStyle),
    strokeWidth: dart.fieldType(core.double),
    strokeCap: dart.fieldType(ui.StrokeCap),
    strokeJoin: dart.fieldType(ui.StrokeJoin),
    isAntiAlias: dart.fieldType(core.bool),
    color: dart.fieldType(ui.Color),
    shader: dart.fieldType(ui.Shader),
    maskFilter: dart.fieldType(ui.MaskFilter),
    filterQuality: dart.fieldType(ui.FilterQuality),
    colorFilter: dart.fieldType(ui.ColorFilter)
  }));
  const _paintData = dart.privateName(ui, "_paintData");
  const _blendMode = dart.privateName(ui, "_blendMode");
  const _color = dart.privateName(ui, "_color");
  const _frozen = dart.privateName(ui, "_frozen");
  ui.Paint = class Paint extends core.Object {
    get blendMode() {
      let l = this[_paintData].blendMode;
      return l != null ? l : ui.BlendMode.srcOver;
    }
    set blendMode(value) {
      if (dart.test(this[_frozen])) {
        this[_paintData] = this[_paintData].clone();
        this[_frozen] = false;
      }
      this[_paintData].blendMode = value;
    }
    get style() {
      let l = this[_paintData].style;
      return l != null ? l : ui.PaintingStyle.fill;
    }
    set style(value) {
      if (dart.test(this[_frozen])) {
        this[_paintData] = this[_paintData].clone();
        this[_frozen] = false;
      }
      this[_paintData].style = value;
    }
    get strokeWidth() {
      let l = this[_paintData].strokeWidth;
      return l != null ? l : 0.0;
    }
    set strokeWidth(value) {
      if (dart.test(this[_frozen])) {
        this[_paintData] = this[_paintData].clone();
        this[_frozen] = false;
      }
      this[_paintData].strokeWidth = value;
    }
    get strokeCap() {
      return this[_paintData].strokeCap;
    }
    set strokeCap(value) {
      if (dart.test(this[_frozen])) {
        this[_paintData] = this[_paintData].clone();
        this[_frozen] = false;
      }
      this[_paintData].strokeCap = value;
    }
    get strokeJoin() {
      return this[_paintData].strokeJoin;
    }
    set strokeJoin(value) {
      if (dart.test(this[_frozen])) {
        this[_paintData] = this[_paintData].clone();
        this[_frozen] = false;
      }
      this[_paintData].strokeJoin = value;
    }
    get isAntiAlias() {
      return this[_paintData].isAntiAlias;
    }
    set isAntiAlias(value) {
      if (dart.test(this[_frozen])) {
        this[_paintData] = this[_paintData].clone();
        this[_frozen] = false;
      }
      this[_paintData].isAntiAlias = value;
    }
    get color() {
      return this[_paintData].color;
    }
    set color(value) {
      if (dart.test(this[_frozen])) {
        this[_paintData] = this[_paintData].clone();
        this[_frozen] = false;
      }
      this[_paintData].color = value;
    }
    get invertColors() {
      return false;
    }
    set invertColors(_) {
      if (dart.test(src__engine.assertionsEnabled)) {
        dart.throw(new core.UnsupportedError.new("Paint.invertColors is not supported."));
      }
    }
    get shader() {
      return this[_paintData].shader;
    }
    set shader(value) {
      if (dart.test(this[_frozen])) {
        this[_paintData] = this[_paintData].clone();
        this[_frozen] = false;
      }
      this[_paintData].shader = value;
    }
    get maskFilter() {
      return this[_paintData].maskFilter;
    }
    set maskFilter(value) {
      if (dart.test(this[_frozen])) {
        this[_paintData] = this[_paintData].clone();
        this[_frozen] = false;
      }
      this[_paintData].maskFilter = value;
    }
    get filterQuality() {
      return this[_paintData].filterQuality;
    }
    set filterQuality(value) {
      if (dart.test(this[_frozen])) {
        this[_paintData] = this[_paintData].clone();
        this[_frozen] = false;
      }
      this[_paintData].filterQuality = value;
    }
    get colorFilter() {
      return this[_paintData].colorFilter;
    }
    set colorFilter(value) {
      if (dart.test(this[_frozen])) {
        this[_paintData] = this[_paintData].clone();
        this[_frozen] = false;
      }
      this[_paintData].colorFilter = value;
    }
    get webOnlyPaintData() {
      this[_frozen] = true;
      return this[_paintData];
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        let result = new core.StringBuffer.new();
        let semicolon = "";
        result.write("Paint(");
        if (this.style === ui.PaintingStyle.stroke) {
          result.write(dart.str(this.style));
          if (this.strokeWidth != null && this.strokeWidth !== 0.0)
            result.write(" " + dart.str(this.strokeWidth));
          else
            result.write(" hairline");
          if (this.strokeCap != null && this.strokeCap !== ui.StrokeCap.butt) result.write(" " + dart.str(this.strokeCap));
          semicolon = "; ";
        }
        if (this.isAntiAlias !== true) {
          result.write(semicolon + "antialias off");
          semicolon = "; ";
        }
        if (!dart.equals(this.color, ui.Paint._defaultPaintColor)) {
          if (this.color != null)
            result.write(semicolon + dart.str(this.color));
          else
            result.write(semicolon + "no color");
          semicolon = "; ";
        }
        result.write(")");
        return result.toString();
      } else {
        return super.toString();
      }
    }
  };
  (ui.Paint.new = function() {
    this[_paintData] = new ui.PaintData.new();
    this[_blendMode] = null;
    this[_color] = ui.Paint._defaultPaintColor;
    this[_frozen] = false;
  }).prototype = ui.Paint.prototype;
  dart.addTypeTests(ui.Paint);
  dart.setGetterSignature(ui.Paint, () => ({
    __proto__: dart.getGetters(ui.Paint.__proto__),
    blendMode: ui.BlendMode,
    style: ui.PaintingStyle,
    strokeWidth: core.double,
    strokeCap: ui.StrokeCap,
    strokeJoin: ui.StrokeJoin,
    isAntiAlias: core.bool,
    color: ui.Color,
    invertColors: core.bool,
    shader: ui.Shader,
    maskFilter: ui.MaskFilter,
    filterQuality: ui.FilterQuality,
    colorFilter: ui.ColorFilter,
    webOnlyPaintData: ui.PaintData
  }));
  dart.setSetterSignature(ui.Paint, () => ({
    __proto__: dart.getSetters(ui.Paint.__proto__),
    blendMode: ui.BlendMode,
    style: ui.PaintingStyle,
    strokeWidth: core.double,
    strokeCap: ui.StrokeCap,
    strokeJoin: ui.StrokeJoin,
    isAntiAlias: core.bool,
    color: ui.Color,
    invertColors: core.bool,
    shader: ui.Shader,
    maskFilter: ui.MaskFilter,
    filterQuality: ui.FilterQuality,
    colorFilter: ui.ColorFilter
  }));
  dart.setFieldSignature(ui.Paint, () => ({
    __proto__: dart.getFields(ui.Paint.__proto__),
    [_paintData]: dart.fieldType(ui.PaintData),
    [_blendMode]: dart.fieldType(ui.BlendMode),
    [_color]: dart.fieldType(ui.Color),
    [_frozen]: dart.fieldType(core.bool)
  }));
  dart.defineExtensionMethods(ui.Paint, ['toString']);
  dart.defineLazy(ui.Paint, {
    /*ui.Paint._defaultPaintColor*/get _defaultPaintColor() {
      return dart.const(new ui.Color.new(4278190080));
    }
  });
  ui.Shader = class Shader extends core.Object {
    webOnlySerializeToCssPaint() {
      dart.throw(new core.UnsupportedError.new("CSS paint not implemented for this shader type"));
    }
  };
  (ui.Shader.__ = function() {
  }).prototype = ui.Shader.prototype;
  dart.addTypeTests(ui.Shader);
  dart.setMethodSignature(ui.Shader, () => ({
    __proto__: dart.getMethods(ui.Shader.__proto__),
    webOnlySerializeToCssPaint: dart.fnType(core.List, [])
  }));
  ui.Gradient = class Gradient extends ui.Shader {
    static linear(from, to, colors, colorStops, tileMode) {
      if (colorStops === void 0) colorStops = null;
      if (tileMode === void 0) tileMode = ui.TileMode.clamp;
      return new ui._GradientLinear.new(from, to, colors, colorStops, tileMode);
    }
    static radial(center, radius, colors, colorStops, tileMode, matrix4, focal, focalRadius) {
      if (colorStops === void 0) colorStops = null;
      if (tileMode === void 0) tileMode = ui.TileMode.clamp;
      if (matrix4 === void 0) matrix4 = null;
      if (focal === void 0) focal = null;
      if (focalRadius === void 0) focalRadius = 0.0;
      let t = focalRadius;
      t == null ? focalRadius = 0.0 : t;
      ui._validateColorStops(colors, colorStops);
      if (focal == null || dart.equals(focal, center) && focalRadius === 0.0) {
        return new ui._GradientRadial.new(center, radius, colors, colorStops, tileMode, matrix4);
      } else {
        if (!(!dart.equals(center, ui.Offset.zero) || !dart.equals(focal, ui.Offset.zero))) dart.assertFailed();
        return new ui._GradientConical.new(focal, focalRadius, center, radius, colors, colorStops, tileMode, matrix4);
      }
    }
    static sweep(center, colors, colorStops, tileMode, startAngle, endAngle, matrix4) {
      if (colorStops === void 0) colorStops = null;
      if (tileMode === void 0) tileMode = ui.TileMode.clamp;
      if (startAngle === void 0) startAngle = 0.0;
      if (endAngle === void 0) endAngle = 3.141592653589793 * 2;
      if (matrix4 === void 0) matrix4 = null;
      return new ui._GradientSweep.new(center, colors, colorStops, tileMode, startAngle, endAngle, matrix4);
    }
  };
  (ui.Gradient.__ = function() {
    ui.Gradient.__proto__.__.call(this);
  }).prototype = ui.Gradient.prototype;
  dart.addTypeTests(ui.Gradient);
  ui._GradientSweep = class _GradientSweep extends ui.Gradient {
    createPaintStyle(_) {
      dart.throw(new core.UnimplementedError.new());
    }
  };
  (ui._GradientSweep.new = function(center, colors, colorStops, tileMode, startAngle, endAngle, matrix4) {
    this.center = center;
    this.colors = colors;
    this.colorStops = colorStops;
    this.tileMode = tileMode;
    this.startAngle = startAngle;
    this.endAngle = endAngle;
    this.matrix4 = matrix4;
    if (!dart.test(ui._offsetIsValid(center))) dart.assertFailed();
    if (!(colors != null)) dart.assertFailed();
    if (!(tileMode != null)) dart.assertFailed();
    if (!(startAngle != null)) dart.assertFailed();
    if (!(endAngle != null)) dart.assertFailed();
    if (!(dart.notNull(startAngle) < dart.notNull(endAngle))) dart.assertFailed();
    if (!(matrix4 == null || dart.test(ui._matrix4IsValid(matrix4)))) dart.assertFailed();
    ui._GradientSweep.__proto__.__.call(this);
    ui._validateColorStops(this.colors, this.colorStops);
  }).prototype = ui._GradientSweep.prototype;
  dart.addTypeTests(ui._GradientSweep);
  dart.setMethodSignature(ui._GradientSweep, () => ({
    __proto__: dart.getMethods(ui._GradientSweep.__proto__),
    createPaintStyle: dart.fnType(core.Object, [html.CanvasRenderingContext2D])
  }));
  dart.setFieldSignature(ui._GradientSweep, () => ({
    __proto__: dart.getFields(ui._GradientSweep.__proto__),
    center: dart.finalFieldType(ui.Offset),
    colors: dart.finalFieldType(ListOfColor()),
    colorStops: dart.finalFieldType(ListOfdouble()),
    tileMode: dart.finalFieldType(ui.TileMode),
    startAngle: dart.finalFieldType(core.double),
    endAngle: dart.finalFieldType(core.double),
    matrix4: dart.finalFieldType(typed_data.Float64List)
  }));
  ui._validateColorStops = function(colors, colorStops) {
    if (colorStops == null) {
      if (colors[$length] !== 2) dart.throw(new core.ArgumentError.new("\"colors\" must have length 2 if \"colorStops\" is omitted."));
    } else {
      if (colors[$length] != colorStops[$length]) dart.throw(new core.ArgumentError.new("\"colors\" and \"colorStops\" arguments must have equal length."));
    }
  };
  ui._GradientLinear = class _GradientLinear extends ui.Gradient {
    createPaintStyle(ctx) {
      let gradient = ctx.createLinearGradient(this.from.dx, this.from.dy, this.to.dx, this.to.dy);
      if (this.colorStops == null) {
        if (!(this.colors[$length] === 2)) dart.assertFailed();
        gradient.addColorStop(0, this.colors[$_get](0).toCssString());
        gradient.addColorStop(1, this.colors[$_get](1).toCssString());
        return gradient;
      }
      for (let i = 0; i < dart.notNull(this.colors[$length]); i++) {
        gradient.addColorStop(this.colorStops[$_get](i), this.colors[$_get](i).toCssString());
      }
      return gradient;
    }
    webOnlySerializeToCssPaint() {
      let serializedColors = [];
      for (let i = 0; i < dart.notNull(this.colors[$length]); i++) {
        serializedColors[$add](this.colors[$_get](i).toCssString());
      }
      return [1, this.from.dx, this.from.dy, this.to.dx, this.to.dy, serializedColors, this.colorStops, this.tileMode.index];
    }
  };
  (ui._GradientLinear.new = function(from, to, colors, colorStops, tileMode) {
    this.from = from;
    this.to = to;
    this.colors = colors;
    this.colorStops = colorStops;
    this.tileMode = tileMode;
    if (!dart.test(ui._offsetIsValid(from))) dart.assertFailed();
    if (!dart.test(ui._offsetIsValid(to))) dart.assertFailed();
    if (!(colors != null)) dart.assertFailed();
    if (!(tileMode != null)) dart.assertFailed();
    ui._GradientLinear.__proto__.__.call(this);
    ui._validateColorStops(this.colors, this.colorStops);
  }).prototype = ui._GradientLinear.prototype;
  dart.addTypeTests(ui._GradientLinear);
  dart.setMethodSignature(ui._GradientLinear, () => ({
    __proto__: dart.getMethods(ui._GradientLinear.__proto__),
    createPaintStyle: dart.fnType(html.CanvasGradient, [html.CanvasRenderingContext2D])
  }));
  dart.setFieldSignature(ui._GradientLinear, () => ({
    __proto__: dart.getFields(ui._GradientLinear.__proto__),
    from: dart.finalFieldType(ui.Offset),
    to: dart.finalFieldType(ui.Offset),
    colors: dart.finalFieldType(ListOfColor()),
    colorStops: dart.finalFieldType(ListOfdouble()),
    tileMode: dart.finalFieldType(ui.TileMode)
  }));
  ui._GradientRadial = class _GradientRadial extends ui.Gradient {
    createPaintStyle(_) {
      dart.throw(new core.UnimplementedError.new());
    }
  };
  (ui._GradientRadial.new = function(center, radius, colors, colorStops, tileMode, matrix4) {
    this.center = center;
    this.radius = radius;
    this.colors = colors;
    this.colorStops = colorStops;
    this.tileMode = tileMode;
    this.matrix4 = matrix4;
    ui._GradientRadial.__proto__.__.call(this);
  }).prototype = ui._GradientRadial.prototype;
  dart.addTypeTests(ui._GradientRadial);
  dart.setMethodSignature(ui._GradientRadial, () => ({
    __proto__: dart.getMethods(ui._GradientRadial.__proto__),
    createPaintStyle: dart.fnType(core.Object, [html.CanvasRenderingContext2D])
  }));
  dart.setFieldSignature(ui._GradientRadial, () => ({
    __proto__: dart.getFields(ui._GradientRadial.__proto__),
    center: dart.finalFieldType(ui.Offset),
    radius: dart.finalFieldType(core.double),
    colors: dart.finalFieldType(ListOfColor()),
    colorStops: dart.finalFieldType(ListOfdouble()),
    tileMode: dart.finalFieldType(ui.TileMode),
    matrix4: dart.finalFieldType(typed_data.Float64List)
  }));
  ui._GradientConical = class _GradientConical extends ui.Gradient {
    createPaintStyle(_) {
      dart.throw(new core.UnimplementedError.new());
    }
  };
  (ui._GradientConical.new = function(focal, focalRadius, center, radius, colors, colorStops, tileMode, matrix4) {
    this.focal = focal;
    this.focalRadius = focalRadius;
    this.center = center;
    this.radius = radius;
    this.colors = colors;
    this.colorStops = colorStops;
    this.tileMode = tileMode;
    this.matrix4 = matrix4;
    ui._GradientConical.__proto__.__.call(this);
  }).prototype = ui._GradientConical.prototype;
  dart.addTypeTests(ui._GradientConical);
  dart.setMethodSignature(ui._GradientConical, () => ({
    __proto__: dart.getMethods(ui._GradientConical.__proto__),
    createPaintStyle: dart.fnType(core.Object, [html.CanvasRenderingContext2D])
  }));
  dart.setFieldSignature(ui._GradientConical, () => ({
    __proto__: dart.getFields(ui._GradientConical.__proto__),
    focal: dart.finalFieldType(ui.Offset),
    focalRadius: dart.finalFieldType(core.double),
    center: dart.finalFieldType(ui.Offset),
    radius: dart.finalFieldType(core.double),
    colors: dart.finalFieldType(ListOfColor()),
    colorStops: dart.finalFieldType(ListOfdouble()),
    tileMode: dart.finalFieldType(ui.TileMode),
    matrix4: dart.finalFieldType(typed_data.Float64List)
  }));
  ui.Image = class Image extends core.Object {
    toString() {
      return "[" + dart.str(this.width) + "×" + dart.str(this.height) + "]";
    }
  };
  (ui.Image.new = function() {
  }).prototype = ui.Image.prototype;
  dart.addTypeTests(ui.Image);
  dart.defineExtensionMethods(ui.Image, ['toString']);
  ui.ColorFilter = class ColorFilter extends core.Object {
    _equals(other) {
      if (other == null) return false;
      if (!ui.ColorFilter.is(other)) return false;
      let typedOther = ui.ColorFilter._check(other);
      return dart.equals(this[_color], typedOther[_color]) && this[_blendMode] == typedOther[_blendMode];
    }
    get hashCode() {
      return ui.hashValues(this[_color], this[_blendMode]);
    }
    webOnlySerializeToCssPaint() {
      dart.throw(new core.UnsupportedError.new("ColorFilter for CSS paint not yet supported"));
    }
    toString() {
      return dart.test(src__engine.assertionsEnabled) ? "ColorFilter(" + dart.str(this[_color]) + ", " + dart.str(this[_blendMode]) + ")" : super.toString();
    }
  };
  (ui.ColorFilter.mode = function(color, blendMode) {
    this[_color] = color;
    this[_blendMode] = blendMode;
  }).prototype = ui.ColorFilter.prototype;
  dart.addTypeTests(ui.ColorFilter);
  dart.setMethodSignature(ui.ColorFilter, () => ({
    __proto__: dart.getMethods(ui.ColorFilter.__proto__),
    webOnlySerializeToCssPaint: dart.fnType(core.List, [])
  }));
  dart.setFieldSignature(ui.ColorFilter, () => ({
    __proto__: dart.getFields(ui.ColorFilter.__proto__),
    [_color]: dart.finalFieldType(ui.Color),
    [_blendMode]: dart.finalFieldType(ui.BlendMode)
  }));
  dart.defineExtensionMethods(ui.ColorFilter, ['_equals', 'toString']);
  dart.defineExtensionAccessors(ui.ColorFilter, ['hashCode']);
  ui.BlurStyle = class BlurStyle extends core.Object {
    toString() {
      return {
        0: "BlurStyle.normal",
        1: "BlurStyle.solid",
        2: "BlurStyle.outer",
        3: "BlurStyle.inner"
      }[this.index];
    }
  };
  (ui.BlurStyle.new = function(x) {
    this.index = x;
  }).prototype = ui.BlurStyle.prototype;
  dart.addTypeTests(ui.BlurStyle);
  dart.setFieldSignature(ui.BlurStyle, () => ({
    __proto__: dart.getFields(ui.BlurStyle.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.BlurStyle, ['toString']);
  ui.BlurStyle.normal = dart.const(new ui.BlurStyle.new(0));
  ui.BlurStyle.solid = dart.const(new ui.BlurStyle.new(1));
  ui.BlurStyle.outer = dart.const(new ui.BlurStyle.new(2));
  ui.BlurStyle.inner = dart.const(new ui.BlurStyle.new(3));
  ui.BlurStyle.values = dart.constList([ui.BlurStyle.normal, ui.BlurStyle.solid, ui.BlurStyle.outer, ui.BlurStyle.inner], ui.BlurStyle);
  const _style = dart.privateName(ui, "_style");
  const _sigma = dart.privateName(ui, "_sigma");
  ui.MaskFilter = class MaskFilter extends core.Object {
    get webOnlySigma() {
      return this[_sigma];
    }
    _equals(other) {
      if (other == null) return false;
      if (!ui.MaskFilter.is(other)) return false;
      let typedOther = ui.MaskFilter._check(other);
      return this[_style] == typedOther[_style] && this[_sigma] == typedOther[_sigma];
    }
    get hashCode() {
      return ui.hashValues(this[_style], this[_sigma]);
    }
    webOnlySerializeToCssPaint() {
      return [this[_style] == null ? null : this[_style].index, this[_sigma]];
    }
    toString() {
      return "MaskFilter.blur(" + dart.str(this[_style]) + ", " + this[_sigma][$toStringAsFixed](1) + ")";
    }
  };
  (ui.MaskFilter.blur = function(style, sigma) {
    this[_style] = style;
    this[_sigma] = sigma;
    if (!(style != null)) dart.assertFailed();
    if (!(sigma != null)) dart.assertFailed();
  }).prototype = ui.MaskFilter.prototype;
  dart.addTypeTests(ui.MaskFilter);
  dart.setMethodSignature(ui.MaskFilter, () => ({
    __proto__: dart.getMethods(ui.MaskFilter.__proto__),
    webOnlySerializeToCssPaint: dart.fnType(core.List, [])
  }));
  dart.setGetterSignature(ui.MaskFilter, () => ({
    __proto__: dart.getGetters(ui.MaskFilter.__proto__),
    webOnlySigma: core.double
  }));
  dart.setFieldSignature(ui.MaskFilter, () => ({
    __proto__: dart.getFields(ui.MaskFilter.__proto__),
    [_style]: dart.finalFieldType(ui.BlurStyle),
    [_sigma]: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(ui.MaskFilter, ['_equals', 'toString']);
  dart.defineExtensionAccessors(ui.MaskFilter, ['hashCode']);
  ui.FilterQuality = class FilterQuality extends core.Object {
    toString() {
      return {
        0: "FilterQuality.none",
        1: "FilterQuality.low",
        2: "FilterQuality.medium",
        3: "FilterQuality.high"
      }[this.index];
    }
  };
  (ui.FilterQuality.new = function(x) {
    this.index = x;
  }).prototype = ui.FilterQuality.prototype;
  dart.addTypeTests(ui.FilterQuality);
  dart.setFieldSignature(ui.FilterQuality, () => ({
    __proto__: dart.getFields(ui.FilterQuality.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.FilterQuality, ['toString']);
  ui.FilterQuality.none = dart.const(new ui.FilterQuality.new(0));
  ui.FilterQuality.low = dart.const(new ui.FilterQuality.new(1));
  ui.FilterQuality.medium = dart.const(new ui.FilterQuality.new(2));
  ui.FilterQuality.high = dart.const(new ui.FilterQuality.new(3));
  ui.FilterQuality.values = dart.constList([ui.FilterQuality.none, ui.FilterQuality.low, ui.FilterQuality.medium, ui.FilterQuality.high], ui.FilterQuality);
  const _initBlur = dart.privateName(ui, "_initBlur");
  ui.ImageFilter = class ImageFilter extends core.Object {
    [_initBlur](sigmaX, sigmaY) {}
  };
  (ui.ImageFilter.blur = function(opts) {
    let sigmaX = opts && 'sigmaX' in opts ? opts.sigmaX : 0.0;
    let sigmaY = opts && 'sigmaY' in opts ? opts.sigmaY : 0.0;
    this[_initBlur](sigmaX, sigmaY);
  }).prototype = ui.ImageFilter.prototype;
  dart.addTypeTests(ui.ImageFilter);
  dart.setMethodSignature(ui.ImageFilter, () => ({
    __proto__: dart.getMethods(ui.ImageFilter.__proto__),
    [_initBlur]: dart.fnType(dart.void, [core.double, core.double])
  }));
  ui.ImageByteFormat = class ImageByteFormat extends core.Object {
    toString() {
      return {
        0: "ImageByteFormat.rawRgba",
        1: "ImageByteFormat.rawUnmodified",
        2: "ImageByteFormat.png"
      }[this.index];
    }
  };
  (ui.ImageByteFormat.new = function(x) {
    this.index = x;
  }).prototype = ui.ImageByteFormat.prototype;
  dart.addTypeTests(ui.ImageByteFormat);
  dart.setFieldSignature(ui.ImageByteFormat, () => ({
    __proto__: dart.getFields(ui.ImageByteFormat.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.ImageByteFormat, ['toString']);
  ui.ImageByteFormat.rawRgba = dart.const(new ui.ImageByteFormat.new(0));
  ui.ImageByteFormat.rawUnmodified = dart.const(new ui.ImageByteFormat.new(1));
  ui.ImageByteFormat.png = dart.const(new ui.ImageByteFormat.new(2));
  ui.ImageByteFormat.values = dart.constList([ui.ImageByteFormat.rawRgba, ui.ImageByteFormat.rawUnmodified, ui.ImageByteFormat.png], ui.ImageByteFormat);
  ui.PixelFormat = class PixelFormat extends core.Object {
    toString() {
      return {
        0: "PixelFormat.rgba8888",
        1: "PixelFormat.bgra8888"
      }[this.index];
    }
  };
  (ui.PixelFormat.new = function(x) {
    this.index = x;
  }).prototype = ui.PixelFormat.prototype;
  dart.addTypeTests(ui.PixelFormat);
  dart.setFieldSignature(ui.PixelFormat, () => ({
    __proto__: dart.getFields(ui.PixelFormat.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.PixelFormat, ['toString']);
  ui.PixelFormat.rgba8888 = dart.const(new ui.PixelFormat.new(0));
  ui.PixelFormat.bgra8888 = dart.const(new ui.PixelFormat.new(1));
  ui.PixelFormat.values = dart.constList([ui.PixelFormat.rgba8888, ui.PixelFormat.bgra8888], ui.PixelFormat);
  ui._ImageInfo = class _ImageInfo extends core.Object {};
  (ui._ImageInfo.new = function(width, height, format, rowBytes) {
    this.width = width;
    this.height = height;
    this.format = format;
    this.rowBytes = rowBytes;
    let t = this.rowBytes;
    t == null ? this.rowBytes = dart.notNull(this.width) * 4 : t;
  }).prototype = ui._ImageInfo.prototype;
  dart.addTypeTests(ui._ImageInfo);
  dart.setFieldSignature(ui._ImageInfo, () => ({
    __proto__: dart.getFields(ui._ImageInfo.__proto__),
    width: dart.fieldType(core.int),
    height: dart.fieldType(core.int),
    format: dart.fieldType(core.int),
    rowBytes: dart.fieldType(core.int)
  }));
  const _durationMillis = dart.privateName(ui, "_durationMillis");
  ui.FrameInfo = class FrameInfo extends core.Object {
    get duration() {
      return new core.Duration.new({milliseconds: this[_durationMillis]});
    }
    get [_durationMillis]() {
      return 0;
    }
    get image() {
      return null;
    }
  };
  (ui.FrameInfo.__ = function() {
  }).prototype = ui.FrameInfo.prototype;
  dart.addTypeTests(ui.FrameInfo);
  dart.setGetterSignature(ui.FrameInfo, () => ({
    __proto__: dart.getGetters(ui.FrameInfo.__proto__),
    duration: core.Duration,
    [_durationMillis]: core.int,
    image: ui.Image
  }));
  const _getNextFrame = dart.privateName(ui, "_getNextFrame");
  ui.Codec = class Codec extends core.Object {
    get frameCount() {
      return 0;
    }
    get repetitionCount() {
      return 0;
    }
    getNextFrame() {
      return src__engine.futurize(ui.FrameInfo, dart.bind(this, _getNextFrame));
    }
    [_getNextFrame](callback) {
      return null;
    }
    dispose() {}
  };
  (ui.Codec.__ = function() {
  }).prototype = ui.Codec.prototype;
  dart.addTypeTests(ui.Codec);
  dart.setMethodSignature(ui.Codec, () => ({
    __proto__: dart.getMethods(ui.Codec.__proto__),
    getNextFrame: dart.fnType(async.Future$(ui.FrameInfo), []),
    [_getNextFrame]: dart.fnType(core.String, [dart.fnType(dart.void, [ui.FrameInfo])]),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(ui.Codec, () => ({
    __proto__: dart.getGetters(ui.Codec.__proto__),
    frameCount: core.int,
    repetitionCount: core.int
  }));
  ui.instantiateImageCodec = function(list, opts) {
    let decodedCacheRatioCap = opts && 'decodedCacheRatioCap' in opts ? opts.decodedCacheRatioCap : core.double.infinity;
    return src__engine.futurize(ui.Codec, dart.fn(callback => ui._instantiateImageCodec(list, callback, null), FnToString()));
  };
  ui._instantiateImageCodec = function(list, callback, imageInfo) {
    let blob = html.Blob.new([list[$buffer]]);
    callback(new src__engine.HtmlBlobCodec.new(blob));
    return null;
  };
  ui.webOnlyInstantiateImageCodecFromUrl = function(uri) {
    return src__engine.futurize(ui.Codec, dart.fn(callback => ui._instantiateImageCodecFromUrl(uri, callback), FnToString()));
  };
  ui._instantiateImageCodecFromUrl = function(uri, callback) {
    callback(new src__engine.HtmlCodec.new(dart.toString(uri)));
    return null;
  };
  ui.decodeImageFromList = function(list, callback) {
    ui._decodeImageFromListAsync(list, callback);
  };
  ui._decodeImageFromListAsync = function(list, callback) {
    return async.async(dart.void, function* _decodeImageFromListAsync() {
      let codec = (yield ui.instantiateImageCodec(list));
      let frameInfo = (yield codec.getNextFrame());
      callback(frameInfo.image);
    });
  };
  ui.decodeImageFromPixels = function(pixels, width, height, format, callback, opts) {
    let rowBytes = opts && 'rowBytes' in opts ? opts.rowBytes : null;
    let imageInfo = new ui._ImageInfo.new(width, height, format.index, rowBytes);
    let codecFuture = src__engine.futurize(ui.Codec, dart.fn(callback => ui._instantiateImageCodec(pixels, callback, imageInfo), FnToString()));
    FutureOfFrameInfo()._check(codecFuture.then(ui.FrameInfo, dart.fn(codec => codec.getNextFrame(), CodecToFutureOfFrameInfo()))).then(dart.void, dart.fn(frameInfo => callback(frameInfo.image), FrameInfoTovoid()));
  };
  let const$1;
  ui.Shadow = class Shadow extends core.Object {
    get color() {
      return this[color$0];
    }
    set color(value) {
      super.color = value;
    }
    get offset() {
      return this[offset$0];
    }
    set offset(value) {
      super.offset = value;
    }
    get blurRadius() {
      return this[blurRadius$];
    }
    set blurRadius(value) {
      super.blurRadius = value;
    }
    static convertRadiusToSigma(radius) {
      return dart.notNull(radius) * 0.57735 + 0.5;
    }
    get blurSigma() {
      return ui.Shadow.convertRadiusToSigma(this.blurRadius);
    }
    toPaint() {
      let _ = new ui.Paint.new();
      _.color = this.color;
      _.maskFilter = new ui.MaskFilter.blur(ui.BlurStyle.normal, this.blurSigma);
      return _;
    }
    scale(factor) {
      return new ui.Shadow.new({color: this.color, offset: this.offset['*'](factor), blurRadius: dart.notNull(this.blurRadius) * dart.notNull(factor)});
    }
    static lerp(a, b, t) {
      if (!(t != null)) dart.assertFailed();
      if (a == null && b == null) return null;
      if (a == null) return b.scale(t);
      if (b == null) return a.scale(1.0 - dart.notNull(t));
      return new ui.Shadow.new({color: ui.Color.lerp(a.color, b.color, t), offset: ui.Offset.lerp(a.offset, b.offset, t), blurRadius: ui.lerpDouble(a.blurRadius, b.blurRadius, t)});
    }
    static lerpList(a, b, t) {
      {
        if (!(t != null)) dart.assertFailed();
        if (a == null && b == null) return null;
        let t$ = a;
        t$ == null ? a = JSArrayOfShadow().of([]) : t$;
        let t$0 = b;
        t$0 == null ? b = JSArrayOfShadow().of([]) : t$0;
        let result = JSArrayOfShadow().of([]);
        let commonLength = math.min(core.int, a[$length], b[$length]);
        for (let i = 0; i < commonLength; i = i + 1)
          result[$add](ui.Shadow.lerp(a[$_get](i), b[$_get](i), t));
        for (let i = commonLength; i < dart.notNull(a[$length]); i = i + 1)
          result[$add](a[$_get](i).scale(1.0 - dart.notNull(t)));
        for (let i = commonLength; i < dart.notNull(b[$length]); i = i + 1)
          result[$add](b[$_get](i).scale(t));
        return result;
      }
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!ui.Shadow.is(other)) return false;
      let typedOther = ui.Shadow._check(other);
      return dart.equals(this.color, typedOther.color) && dart.equals(this.offset, typedOther.offset) && this.blurRadius == typedOther.blurRadius;
    }
    get hashCode() {
      return ui.hashValues(this.color, this.offset, this.blurRadius);
    }
    toString() {
      return "TextShadow(" + dart.str(this.color) + ", " + dart.str(this.offset) + ", " + dart.str(this.blurRadius) + ")";
    }
  };
  (ui.Shadow.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : const$1 || (const$1 = dart.const(new ui.Color.new(4278190080)));
    let offset = opts && 'offset' in opts ? opts.offset : ui.Offset.zero;
    let blurRadius = opts && 'blurRadius' in opts ? opts.blurRadius : 0.0;
    this[color$0] = color;
    this[offset$0] = offset;
    this[blurRadius$] = blurRadius;
    if (!(color != null)) dart.assertFailed("Text shadow color was null.");
    if (!(offset != null)) dart.assertFailed("Text shadow offset was null.");
    if (!(dart.notNull(blurRadius) >= 0.0)) dart.assertFailed("Text shadow blur radius should be non-negative.");
  }).prototype = ui.Shadow.prototype;
  dart.addTypeTests(ui.Shadow);
  const color$0 = Symbol("Shadow.color");
  const offset$0 = Symbol("Shadow.offset");
  const blurRadius$ = Symbol("Shadow.blurRadius");
  dart.setMethodSignature(ui.Shadow, () => ({
    __proto__: dart.getMethods(ui.Shadow.__proto__),
    toPaint: dart.fnType(ui.Paint, []),
    scale: dart.fnType(ui.Shadow, [core.double])
  }));
  dart.setGetterSignature(ui.Shadow, () => ({
    __proto__: dart.getGetters(ui.Shadow.__proto__),
    blurSigma: core.double
  }));
  dart.setFieldSignature(ui.Shadow, () => ({
    __proto__: dart.getFields(ui.Shadow.__proto__),
    color: dart.finalFieldType(ui.Color),
    offset: dart.finalFieldType(ui.Offset),
    blurRadius: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(ui.Shadow, ['_equals', 'toString']);
  dart.defineExtensionAccessors(ui.Shadow, ['hashCode']);
  dart.defineLazy(ui.Shadow, {
    /*ui.Shadow._kColorDefault*/get _kColorDefault() {
      return 4278190080;
    }
  });
  ui.PointerChange = class PointerChange extends core.Object {
    toString() {
      return {
        0: "PointerChange.cancel",
        1: "PointerChange.add",
        2: "PointerChange.remove",
        3: "PointerChange.hover",
        4: "PointerChange.down",
        5: "PointerChange.move",
        6: "PointerChange.up"
      }[this.index];
    }
  };
  (ui.PointerChange.new = function(x) {
    this.index = x;
  }).prototype = ui.PointerChange.prototype;
  dart.addTypeTests(ui.PointerChange);
  dart.setFieldSignature(ui.PointerChange, () => ({
    __proto__: dart.getFields(ui.PointerChange.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.PointerChange, ['toString']);
  ui.PointerChange.cancel = dart.const(new ui.PointerChange.new(0));
  ui.PointerChange.add = dart.const(new ui.PointerChange.new(1));
  ui.PointerChange.remove = dart.const(new ui.PointerChange.new(2));
  ui.PointerChange.hover = dart.const(new ui.PointerChange.new(3));
  ui.PointerChange.down = dart.const(new ui.PointerChange.new(4));
  ui.PointerChange.move = dart.const(new ui.PointerChange.new(5));
  ui.PointerChange.up = dart.const(new ui.PointerChange.new(6));
  ui.PointerChange.values = dart.constList([ui.PointerChange.cancel, ui.PointerChange.add, ui.PointerChange.remove, ui.PointerChange.hover, ui.PointerChange.down, ui.PointerChange.move, ui.PointerChange.up], ui.PointerChange);
  ui.PointerDeviceKind = class PointerDeviceKind extends core.Object {
    toString() {
      return {
        0: "PointerDeviceKind.touch",
        1: "PointerDeviceKind.mouse",
        2: "PointerDeviceKind.stylus",
        3: "PointerDeviceKind.invertedStylus",
        4: "PointerDeviceKind.unknown"
      }[this.index];
    }
  };
  (ui.PointerDeviceKind.new = function(x) {
    this.index = x;
  }).prototype = ui.PointerDeviceKind.prototype;
  dart.addTypeTests(ui.PointerDeviceKind);
  dart.setFieldSignature(ui.PointerDeviceKind, () => ({
    __proto__: dart.getFields(ui.PointerDeviceKind.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.PointerDeviceKind, ['toString']);
  ui.PointerDeviceKind.touch = dart.const(new ui.PointerDeviceKind.new(0));
  ui.PointerDeviceKind.mouse = dart.const(new ui.PointerDeviceKind.new(1));
  ui.PointerDeviceKind.stylus = dart.const(new ui.PointerDeviceKind.new(2));
  ui.PointerDeviceKind.invertedStylus = dart.const(new ui.PointerDeviceKind.new(3));
  ui.PointerDeviceKind.unknown = dart.const(new ui.PointerDeviceKind.new(4));
  ui.PointerDeviceKind.values = dart.constList([ui.PointerDeviceKind.touch, ui.PointerDeviceKind.mouse, ui.PointerDeviceKind.stylus, ui.PointerDeviceKind.invertedStylus, ui.PointerDeviceKind.unknown], ui.PointerDeviceKind);
  ui.PointerSignalKind = class PointerSignalKind extends core.Object {
    toString() {
      return {
        0: "PointerSignalKind.none",
        1: "PointerSignalKind.scroll",
        2: "PointerSignalKind.unknown"
      }[this.index];
    }
  };
  (ui.PointerSignalKind.new = function(x) {
    this.index = x;
  }).prototype = ui.PointerSignalKind.prototype;
  dart.addTypeTests(ui.PointerSignalKind);
  dart.setFieldSignature(ui.PointerSignalKind, () => ({
    __proto__: dart.getFields(ui.PointerSignalKind.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.PointerSignalKind, ['toString']);
  ui.PointerSignalKind.none = dart.const(new ui.PointerSignalKind.new(0));
  ui.PointerSignalKind.scroll = dart.const(new ui.PointerSignalKind.new(1));
  ui.PointerSignalKind.unknown = dart.const(new ui.PointerSignalKind.new(2));
  ui.PointerSignalKind.values = dart.constList([ui.PointerSignalKind.none, ui.PointerSignalKind.scroll, ui.PointerSignalKind.unknown], ui.PointerSignalKind);
  ui.PointerData = class PointerData extends core.Object {
    get timeStamp() {
      return this[timeStamp$];
    }
    set timeStamp(value) {
      super.timeStamp = value;
    }
    get change() {
      return this[change$];
    }
    set change(value) {
      super.change = value;
    }
    get kind() {
      return this[kind$];
    }
    set kind(value) {
      super.kind = value;
    }
    get signalKind() {
      return this[signalKind$];
    }
    set signalKind(value) {
      super.signalKind = value;
    }
    get device() {
      return this[device$];
    }
    set device(value) {
      super.device = value;
    }
    get physicalX() {
      return this[physicalX$];
    }
    set physicalX(value) {
      super.physicalX = value;
    }
    get physicalY() {
      return this[physicalY$];
    }
    set physicalY(value) {
      super.physicalY = value;
    }
    get buttons() {
      return this[buttons$];
    }
    set buttons(value) {
      super.buttons = value;
    }
    get obscured() {
      return this[obscured$];
    }
    set obscured(value) {
      super.obscured = value;
    }
    get pressure() {
      return this[pressure$];
    }
    set pressure(value) {
      super.pressure = value;
    }
    get pressureMin() {
      return this[pressureMin$];
    }
    set pressureMin(value) {
      super.pressureMin = value;
    }
    get pressureMax() {
      return this[pressureMax$];
    }
    set pressureMax(value) {
      super.pressureMax = value;
    }
    get distance() {
      return this[distance$];
    }
    set distance(value) {
      super.distance = value;
    }
    get distanceMax() {
      return this[distanceMax$];
    }
    set distanceMax(value) {
      super.distanceMax = value;
    }
    get size() {
      return this[size$];
    }
    set size(value) {
      super.size = value;
    }
    get radiusMajor() {
      return this[radiusMajor$];
    }
    set radiusMajor(value) {
      super.radiusMajor = value;
    }
    get radiusMinor() {
      return this[radiusMinor$];
    }
    set radiusMinor(value) {
      super.radiusMinor = value;
    }
    get radiusMin() {
      return this[radiusMin$];
    }
    set radiusMin(value) {
      super.radiusMin = value;
    }
    get radiusMax() {
      return this[radiusMax$];
    }
    set radiusMax(value) {
      super.radiusMax = value;
    }
    get orientation() {
      return this[orientation$];
    }
    set orientation(value) {
      super.orientation = value;
    }
    get tilt() {
      return this[tilt$];
    }
    set tilt(value) {
      super.tilt = value;
    }
    get platformData() {
      return this[platformData$];
    }
    set platformData(value) {
      super.platformData = value;
    }
    get scrollDeltaX() {
      return this[scrollDeltaX$];
    }
    set scrollDeltaX(value) {
      super.scrollDeltaX = value;
    }
    get scrollDeltaY() {
      return this[scrollDeltaY$];
    }
    set scrollDeltaY(value) {
      super.scrollDeltaY = value;
    }
    toString() {
      return dart.str(this[$runtimeType]) + "(x: " + dart.str(this.physicalX) + ", y: " + dart.str(this.physicalY) + ")";
    }
    toStringFull() {
      return dart.str(this[$runtimeType]) + "(" + ("timeStamp: " + dart.str(this.timeStamp) + ", ") + ("change: " + dart.str(this.change) + ", ") + ("kind: " + dart.str(this.kind) + ", ") + ("signalKind: " + dart.str(this.signalKind) + ", ") + ("device: " + dart.str(this.device) + ", ") + ("physicalX: " + dart.str(this.physicalX) + ", ") + ("physicalY: " + dart.str(this.physicalY) + ", ") + ("buttons: " + dart.str(this.buttons) + ", ") + ("pressure: " + dart.str(this.pressure) + ", ") + ("pressureMin: " + dart.str(this.pressureMin) + ", ") + ("pressureMax: " + dart.str(this.pressureMax) + ", ") + ("distance: " + dart.str(this.distance) + ", ") + ("distanceMax: " + dart.str(this.distanceMax) + ", ") + ("size: " + dart.str(this.size) + ", ") + ("radiusMajor: " + dart.str(this.radiusMajor) + ", ") + ("radiusMinor: " + dart.str(this.radiusMinor) + ", ") + ("radiusMin: " + dart.str(this.radiusMin) + ", ") + ("radiusMax: " + dart.str(this.radiusMax) + ", ") + ("orientation: " + dart.str(this.orientation) + ", ") + ("tilt: " + dart.str(this.tilt) + ", ") + ("platformData: " + dart.str(this.platformData) + ", ") + ("scrollDeltaX: " + dart.str(this.scrollDeltaX) + ", ") + ("scrollDeltaY: " + dart.str(this.scrollDeltaY)) + ")";
    }
  };
  (ui.PointerData.new = function(opts) {
    let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : core.Duration.zero;
    let change = opts && 'change' in opts ? opts.change : ui.PointerChange.cancel;
    let kind = opts && 'kind' in opts ? opts.kind : ui.PointerDeviceKind.touch;
    let signalKind = opts && 'signalKind' in opts ? opts.signalKind : null;
    let device = opts && 'device' in opts ? opts.device : 0;
    let physicalX = opts && 'physicalX' in opts ? opts.physicalX : 0.0;
    let physicalY = opts && 'physicalY' in opts ? opts.physicalY : 0.0;
    let buttons = opts && 'buttons' in opts ? opts.buttons : 0;
    let obscured = opts && 'obscured' in opts ? opts.obscured : false;
    let pressure = opts && 'pressure' in opts ? opts.pressure : 0.0;
    let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : 0.0;
    let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : 0.0;
    let distance = opts && 'distance' in opts ? opts.distance : 0.0;
    let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : 0.0;
    let size = opts && 'size' in opts ? opts.size : 0.0;
    let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : 0.0;
    let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : 0.0;
    let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : 0.0;
    let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : 0.0;
    let orientation = opts && 'orientation' in opts ? opts.orientation : 0.0;
    let tilt = opts && 'tilt' in opts ? opts.tilt : 0.0;
    let platformData = opts && 'platformData' in opts ? opts.platformData : 0;
    let scrollDeltaX = opts && 'scrollDeltaX' in opts ? opts.scrollDeltaX : 0.0;
    let scrollDeltaY = opts && 'scrollDeltaY' in opts ? opts.scrollDeltaY : 0.0;
    this[timeStamp$] = timeStamp;
    this[change$] = change;
    this[kind$] = kind;
    this[signalKind$] = signalKind;
    this[device$] = device;
    this[physicalX$] = physicalX;
    this[physicalY$] = physicalY;
    this[buttons$] = buttons;
    this[obscured$] = obscured;
    this[pressure$] = pressure;
    this[pressureMin$] = pressureMin;
    this[pressureMax$] = pressureMax;
    this[distance$] = distance;
    this[distanceMax$] = distanceMax;
    this[size$] = size;
    this[radiusMajor$] = radiusMajor;
    this[radiusMinor$] = radiusMinor;
    this[radiusMin$] = radiusMin;
    this[radiusMax$] = radiusMax;
    this[orientation$] = orientation;
    this[tilt$] = tilt;
    this[platformData$] = platformData;
    this[scrollDeltaX$] = scrollDeltaX;
    this[scrollDeltaY$] = scrollDeltaY;
  }).prototype = ui.PointerData.prototype;
  dart.addTypeTests(ui.PointerData);
  const timeStamp$ = Symbol("PointerData.timeStamp");
  const change$ = Symbol("PointerData.change");
  const kind$ = Symbol("PointerData.kind");
  const signalKind$ = Symbol("PointerData.signalKind");
  const device$ = Symbol("PointerData.device");
  const physicalX$ = Symbol("PointerData.physicalX");
  const physicalY$ = Symbol("PointerData.physicalY");
  const buttons$ = Symbol("PointerData.buttons");
  const obscured$ = Symbol("PointerData.obscured");
  const pressure$ = Symbol("PointerData.pressure");
  const pressureMin$ = Symbol("PointerData.pressureMin");
  const pressureMax$ = Symbol("PointerData.pressureMax");
  const distance$ = Symbol("PointerData.distance");
  const distanceMax$ = Symbol("PointerData.distanceMax");
  const size$ = Symbol("PointerData.size");
  const radiusMajor$ = Symbol("PointerData.radiusMajor");
  const radiusMinor$ = Symbol("PointerData.radiusMinor");
  const radiusMin$ = Symbol("PointerData.radiusMin");
  const radiusMax$ = Symbol("PointerData.radiusMax");
  const orientation$ = Symbol("PointerData.orientation");
  const tilt$ = Symbol("PointerData.tilt");
  const platformData$ = Symbol("PointerData.platformData");
  const scrollDeltaX$ = Symbol("PointerData.scrollDeltaX");
  const scrollDeltaY$ = Symbol("PointerData.scrollDeltaY");
  dart.setMethodSignature(ui.PointerData, () => ({
    __proto__: dart.getMethods(ui.PointerData.__proto__),
    toStringFull: dart.fnType(core.String, [])
  }));
  dart.setFieldSignature(ui.PointerData, () => ({
    __proto__: dart.getFields(ui.PointerData.__proto__),
    timeStamp: dart.finalFieldType(core.Duration),
    change: dart.finalFieldType(ui.PointerChange),
    kind: dart.finalFieldType(ui.PointerDeviceKind),
    signalKind: dart.finalFieldType(ui.PointerSignalKind),
    device: dart.finalFieldType(core.int),
    physicalX: dart.finalFieldType(core.double),
    physicalY: dart.finalFieldType(core.double),
    buttons: dart.finalFieldType(core.int),
    obscured: dart.finalFieldType(core.bool),
    pressure: dart.finalFieldType(core.double),
    pressureMin: dart.finalFieldType(core.double),
    pressureMax: dart.finalFieldType(core.double),
    distance: dart.finalFieldType(core.double),
    distanceMax: dart.finalFieldType(core.double),
    size: dart.finalFieldType(core.double),
    radiusMajor: dart.finalFieldType(core.double),
    radiusMinor: dart.finalFieldType(core.double),
    radiusMin: dart.finalFieldType(core.double),
    radiusMax: dart.finalFieldType(core.double),
    orientation: dart.finalFieldType(core.double),
    tilt: dart.finalFieldType(core.double),
    platformData: dart.finalFieldType(core.int),
    scrollDeltaX: dart.finalFieldType(core.double),
    scrollDeltaY: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(ui.PointerData, ['toString']);
  let const$2;
  ui.PointerDataPacket = class PointerDataPacket extends core.Object {
    get data() {
      return this[data$];
    }
    set data(value) {
      super.data = value;
    }
  };
  (ui.PointerDataPacket.new = function(opts) {
    let data = opts && 'data' in opts ? opts.data : const$2 || (const$2 = dart.constList([], ui.PointerData));
    this[data$] = data;
  }).prototype = ui.PointerDataPacket.prototype;
  dart.addTypeTests(ui.PointerDataPacket);
  const data$ = Symbol("PointerDataPacket.data");
  dart.setFieldSignature(ui.PointerDataPacket, () => ({
    __proto__: dart.getFields(ui.PointerDataPacket.__proto__),
    data: dart.finalFieldType(ListOfPointerData())
  }));
  ui.SemanticsAction = class SemanticsAction extends core.Object {
    get index() {
      return this[index$];
    }
    set index(value) {
      super.index = value;
    }
    toString() {
      switch (this.index) {
        case 1:
        {
          return "SemanticsAction.tap";
        }
        case 2:
        {
          return "SemanticsAction.longPress";
        }
        case 4:
        {
          return "SemanticsAction.scrollLeft";
        }
        case 8:
        {
          return "SemanticsAction.scrollRight";
        }
        case 16:
        {
          return "SemanticsAction.scrollUp";
        }
        case 32:
        {
          return "SemanticsAction.scrollDown";
        }
        case 64:
        {
          return "SemanticsAction.increase";
        }
        case 128:
        {
          return "SemanticsAction.decrease";
        }
        case 256:
        {
          return "SemanticsAction.showOnScreen";
        }
        case 512:
        {
          return "SemanticsAction.moveCursorForwardByCharacter";
        }
        case 1024:
        {
          return "SemanticsAction.moveCursorBackwardByCharacter";
        }
        case 2048:
        {
          return "SemanticsAction.setSelection";
        }
        case 4096:
        {
          return "SemanticsAction.copy";
        }
        case 8192:
        {
          return "SemanticsAction.cut";
        }
        case 16384:
        {
          return "SemanticsAction.paste";
        }
        case 32768:
        {
          return "SemanticsAction.didGainAccessibilityFocus";
        }
        case 65536:
        {
          return "SemanticsAction.didLoseAccessibilityFocus";
        }
        case 131072:
        {
          return "SemanticsAction.customAction";
        }
        case 262144:
        {
          return "SemanticsAction.dismiss";
        }
        case 524288:
        {
          return "SemanticsAction.moveCursorForwardByWord";
        }
        case 1048576:
        {
          return "SemanticsAction.moveCursorBackwardByWord";
        }
      }
      return null;
    }
  };
  (ui.SemanticsAction.__ = function(index) {
    this[index$] = index;
  }).prototype = ui.SemanticsAction.prototype;
  dart.addTypeTests(ui.SemanticsAction);
  const index$ = Symbol("SemanticsAction.index");
  dart.setFieldSignature(ui.SemanticsAction, () => ({
    __proto__: dart.getFields(ui.SemanticsAction.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.SemanticsAction, ['toString']);
  dart.defineLazy(ui.SemanticsAction, {
    /*ui.SemanticsAction._kTapIndex*/get _kTapIndex() {
      return 1 << 0;
    },
    /*ui.SemanticsAction._kLongPressIndex*/get _kLongPressIndex() {
      return 1 << 1;
    },
    /*ui.SemanticsAction._kScrollLeftIndex*/get _kScrollLeftIndex() {
      return 1 << 2;
    },
    /*ui.SemanticsAction._kScrollRightIndex*/get _kScrollRightIndex() {
      return 1 << 3;
    },
    /*ui.SemanticsAction._kScrollUpIndex*/get _kScrollUpIndex() {
      return 1 << 4;
    },
    /*ui.SemanticsAction._kScrollDownIndex*/get _kScrollDownIndex() {
      return 1 << 5;
    },
    /*ui.SemanticsAction._kIncreaseIndex*/get _kIncreaseIndex() {
      return 1 << 6;
    },
    /*ui.SemanticsAction._kDecreaseIndex*/get _kDecreaseIndex() {
      return 1 << 7;
    },
    /*ui.SemanticsAction._kShowOnScreenIndex*/get _kShowOnScreenIndex() {
      return 1 << 8;
    },
    /*ui.SemanticsAction._kMoveCursorForwardByCharacterIndex*/get _kMoveCursorForwardByCharacterIndex() {
      return 1 << 9;
    },
    /*ui.SemanticsAction._kMoveCursorBackwardByCharacterIndex*/get _kMoveCursorBackwardByCharacterIndex() {
      return 1 << 10;
    },
    /*ui.SemanticsAction._kSetSelectionIndex*/get _kSetSelectionIndex() {
      return 1 << 11;
    },
    /*ui.SemanticsAction._kCopyIndex*/get _kCopyIndex() {
      return 1 << 12;
    },
    /*ui.SemanticsAction._kCutIndex*/get _kCutIndex() {
      return 1 << 13;
    },
    /*ui.SemanticsAction._kPasteIndex*/get _kPasteIndex() {
      return 1 << 14;
    },
    /*ui.SemanticsAction._kDidGainAccessibilityFocusIndex*/get _kDidGainAccessibilityFocusIndex() {
      return 1 << 15;
    },
    /*ui.SemanticsAction._kDidLoseAccessibilityFocusIndex*/get _kDidLoseAccessibilityFocusIndex() {
      return 1 << 16;
    },
    /*ui.SemanticsAction._kCustomAction*/get _kCustomAction() {
      return 1 << 17;
    },
    /*ui.SemanticsAction._kDismissIndex*/get _kDismissIndex() {
      return 1 << 18;
    },
    /*ui.SemanticsAction._kMoveCursorForwardByWordIndex*/get _kMoveCursorForwardByWordIndex() {
      return 1 << 19;
    },
    /*ui.SemanticsAction._kMoveCursorBackwardByWordIndex*/get _kMoveCursorBackwardByWordIndex() {
      return 1 << 20;
    },
    /*ui.SemanticsAction.tap*/get tap() {
      return dart.const(new ui.SemanticsAction.__(1));
    },
    /*ui.SemanticsAction.longPress*/get longPress() {
      return dart.const(new ui.SemanticsAction.__(2));
    },
    /*ui.SemanticsAction.scrollLeft*/get scrollLeft() {
      return dart.const(new ui.SemanticsAction.__(4));
    },
    /*ui.SemanticsAction.scrollRight*/get scrollRight() {
      return dart.const(new ui.SemanticsAction.__(8));
    },
    /*ui.SemanticsAction.scrollUp*/get scrollUp() {
      return dart.const(new ui.SemanticsAction.__(16));
    },
    /*ui.SemanticsAction.scrollDown*/get scrollDown() {
      return dart.const(new ui.SemanticsAction.__(32));
    },
    /*ui.SemanticsAction.increase*/get increase() {
      return dart.const(new ui.SemanticsAction.__(64));
    },
    /*ui.SemanticsAction.decrease*/get decrease() {
      return dart.const(new ui.SemanticsAction.__(128));
    },
    /*ui.SemanticsAction.showOnScreen*/get showOnScreen() {
      return dart.const(new ui.SemanticsAction.__(256));
    },
    /*ui.SemanticsAction.moveCursorForwardByCharacter*/get moveCursorForwardByCharacter() {
      return dart.const(new ui.SemanticsAction.__(512));
    },
    /*ui.SemanticsAction.moveCursorBackwardByCharacter*/get moveCursorBackwardByCharacter() {
      return dart.const(new ui.SemanticsAction.__(1024));
    },
    /*ui.SemanticsAction.setSelection*/get setSelection() {
      return dart.const(new ui.SemanticsAction.__(2048));
    },
    /*ui.SemanticsAction.copy*/get copy() {
      return dart.const(new ui.SemanticsAction.__(4096));
    },
    /*ui.SemanticsAction.cut*/get cut() {
      return dart.const(new ui.SemanticsAction.__(8192));
    },
    /*ui.SemanticsAction.paste*/get paste() {
      return dart.const(new ui.SemanticsAction.__(16384));
    },
    /*ui.SemanticsAction.didGainAccessibilityFocus*/get didGainAccessibilityFocus() {
      return dart.const(new ui.SemanticsAction.__(32768));
    },
    /*ui.SemanticsAction.didLoseAccessibilityFocus*/get didLoseAccessibilityFocus() {
      return dart.const(new ui.SemanticsAction.__(65536));
    },
    /*ui.SemanticsAction.customAction*/get customAction() {
      return dart.const(new ui.SemanticsAction.__(131072));
    },
    /*ui.SemanticsAction.dismiss*/get dismiss() {
      return dart.const(new ui.SemanticsAction.__(262144));
    },
    /*ui.SemanticsAction.moveCursorForwardByWord*/get moveCursorForwardByWord() {
      return dart.const(new ui.SemanticsAction.__(524288));
    },
    /*ui.SemanticsAction.moveCursorBackwardByWord*/get moveCursorBackwardByWord() {
      return dart.const(new ui.SemanticsAction.__(1048576));
    },
    /*ui.SemanticsAction.values*/get values() {
      return dart.constMap(core.int, ui.SemanticsAction, [1, ui.SemanticsAction.tap, 2, ui.SemanticsAction.longPress, 4, ui.SemanticsAction.scrollLeft, 8, ui.SemanticsAction.scrollRight, 16, ui.SemanticsAction.scrollUp, 32, ui.SemanticsAction.scrollDown, 64, ui.SemanticsAction.increase, 128, ui.SemanticsAction.decrease, 256, ui.SemanticsAction.showOnScreen, 512, ui.SemanticsAction.moveCursorForwardByCharacter, 1024, ui.SemanticsAction.moveCursorBackwardByCharacter, 2048, ui.SemanticsAction.setSelection, 4096, ui.SemanticsAction.copy, 8192, ui.SemanticsAction.cut, 16384, ui.SemanticsAction.paste, 32768, ui.SemanticsAction.didGainAccessibilityFocus, 65536, ui.SemanticsAction.didLoseAccessibilityFocus, 131072, ui.SemanticsAction.customAction, 262144, ui.SemanticsAction.dismiss, 524288, ui.SemanticsAction.moveCursorForwardByWord, 1048576, ui.SemanticsAction.moveCursorBackwardByWord]);
    }
  });
  ui.SemanticsFlag = class SemanticsFlag extends core.Object {
    get index() {
      return this[index$0];
    }
    set index(value) {
      super.index = value;
    }
    toString() {
      switch (this.index) {
        case 1:
        {
          return "SemanticsFlag.hasCheckedState";
        }
        case 2:
        {
          return "SemanticsFlag.isChecked";
        }
        case 4:
        {
          return "SemanticsFlag.isSelected";
        }
        case 8:
        {
          return "SemanticsFlag.isButton";
        }
        case 16:
        {
          return "SemanticsFlag.isTextField";
        }
        case 32:
        {
          return "SemanticsFlag.isFocused";
        }
        case 64:
        {
          return "SemanticsFlag.hasEnabledState";
        }
        case 128:
        {
          return "SemanticsFlag.isEnabled";
        }
        case 256:
        {
          return "SemanticsFlag.isInMutuallyExclusiveGroup";
        }
        case 512:
        {
          return "SemanticsFlag.isHeader";
        }
        case 1024:
        {
          return "SemanticsFlag.isObscured";
        }
        case 2048:
        {
          return "SemanticsFlag.scopesRoute";
        }
        case 4096:
        {
          return "SemanticsFlag.namesRoute";
        }
        case 8192:
        {
          return "SemanticsFlag.isHidden";
        }
        case 16384:
        {
          return "SemanticsFlag.isImage";
        }
        case 32768:
        {
          return "SemanticsFlag.isLiveRegion";
        }
        case 65536:
        {
          return "SemanticsFlag.hasToggledState";
        }
        case 131072:
        {
          return "SemanticsFlag.isToggled";
        }
        case 262144:
        {
          return "SemanticsFlag.hasImplicitScrolling";
        }
        case 524288:
        {
          return "SemanticsFlag.isMultiline";
        }
      }
      return null;
    }
  };
  (ui.SemanticsFlag.__ = function(index) {
    this[index$0] = index;
  }).prototype = ui.SemanticsFlag.prototype;
  dart.addTypeTests(ui.SemanticsFlag);
  const index$0 = Symbol("SemanticsFlag.index");
  dart.setFieldSignature(ui.SemanticsFlag, () => ({
    __proto__: dart.getFields(ui.SemanticsFlag.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.SemanticsFlag, ['toString']);
  dart.defineLazy(ui.SemanticsFlag, {
    /*ui.SemanticsFlag._kHasCheckedStateIndex*/get _kHasCheckedStateIndex() {
      return 1 << 0;
    },
    /*ui.SemanticsFlag._kIsCheckedIndex*/get _kIsCheckedIndex() {
      return 1 << 1;
    },
    /*ui.SemanticsFlag._kIsSelectedIndex*/get _kIsSelectedIndex() {
      return 1 << 2;
    },
    /*ui.SemanticsFlag._kIsButtonIndex*/get _kIsButtonIndex() {
      return 1 << 3;
    },
    /*ui.SemanticsFlag._kIsTextFieldIndex*/get _kIsTextFieldIndex() {
      return 1 << 4;
    },
    /*ui.SemanticsFlag._kIsFocusedIndex*/get _kIsFocusedIndex() {
      return 1 << 5;
    },
    /*ui.SemanticsFlag._kHasEnabledStateIndex*/get _kHasEnabledStateIndex() {
      return 1 << 6;
    },
    /*ui.SemanticsFlag._kIsEnabledIndex*/get _kIsEnabledIndex() {
      return 1 << 7;
    },
    /*ui.SemanticsFlag._kIsInMutuallyExclusiveGroupIndex*/get _kIsInMutuallyExclusiveGroupIndex() {
      return 1 << 8;
    },
    /*ui.SemanticsFlag._kIsHeaderIndex*/get _kIsHeaderIndex() {
      return 1 << 9;
    },
    /*ui.SemanticsFlag._kIsObscuredIndex*/get _kIsObscuredIndex() {
      return 1 << 10;
    },
    /*ui.SemanticsFlag._kScopesRouteIndex*/get _kScopesRouteIndex() {
      return 1 << 11;
    },
    /*ui.SemanticsFlag._kNamesRouteIndex*/get _kNamesRouteIndex() {
      return 1 << 12;
    },
    /*ui.SemanticsFlag._kIsHiddenIndex*/get _kIsHiddenIndex() {
      return 1 << 13;
    },
    /*ui.SemanticsFlag._kIsImageIndex*/get _kIsImageIndex() {
      return 1 << 14;
    },
    /*ui.SemanticsFlag._kIsLiveRegionIndex*/get _kIsLiveRegionIndex() {
      return 1 << 15;
    },
    /*ui.SemanticsFlag._kHasToggledStateIndex*/get _kHasToggledStateIndex() {
      return 1 << 16;
    },
    /*ui.SemanticsFlag._kIsToggledIndex*/get _kIsToggledIndex() {
      return 1 << 17;
    },
    /*ui.SemanticsFlag._kHasImplicitScrollingIndex*/get _kHasImplicitScrollingIndex() {
      return 1 << 18;
    },
    /*ui.SemanticsFlag._kIsMultilineIndex*/get _kIsMultilineIndex() {
      return 1 << 19;
    },
    /*ui.SemanticsFlag.hasCheckedState*/get hasCheckedState() {
      return dart.const(new ui.SemanticsFlag.__(1));
    },
    /*ui.SemanticsFlag.isChecked*/get isChecked() {
      return dart.const(new ui.SemanticsFlag.__(2));
    },
    /*ui.SemanticsFlag.isSelected*/get isSelected() {
      return dart.const(new ui.SemanticsFlag.__(4));
    },
    /*ui.SemanticsFlag.isButton*/get isButton() {
      return dart.const(new ui.SemanticsFlag.__(8));
    },
    /*ui.SemanticsFlag.isTextField*/get isTextField() {
      return dart.const(new ui.SemanticsFlag.__(16));
    },
    /*ui.SemanticsFlag.isFocused*/get isFocused() {
      return dart.const(new ui.SemanticsFlag.__(32));
    },
    /*ui.SemanticsFlag.hasEnabledState*/get hasEnabledState() {
      return dart.const(new ui.SemanticsFlag.__(64));
    },
    /*ui.SemanticsFlag.isEnabled*/get isEnabled() {
      return dart.const(new ui.SemanticsFlag.__(128));
    },
    /*ui.SemanticsFlag.isInMutuallyExclusiveGroup*/get isInMutuallyExclusiveGroup() {
      return dart.const(new ui.SemanticsFlag.__(256));
    },
    /*ui.SemanticsFlag.isHeader*/get isHeader() {
      return dart.const(new ui.SemanticsFlag.__(512));
    },
    /*ui.SemanticsFlag.isObscured*/get isObscured() {
      return dart.const(new ui.SemanticsFlag.__(1024));
    },
    /*ui.SemanticsFlag.scopesRoute*/get scopesRoute() {
      return dart.const(new ui.SemanticsFlag.__(2048));
    },
    /*ui.SemanticsFlag.namesRoute*/get namesRoute() {
      return dart.const(new ui.SemanticsFlag.__(4096));
    },
    /*ui.SemanticsFlag.isHidden*/get isHidden() {
      return dart.const(new ui.SemanticsFlag.__(8192));
    },
    /*ui.SemanticsFlag.isImage*/get isImage() {
      return dart.const(new ui.SemanticsFlag.__(16384));
    },
    /*ui.SemanticsFlag.isLiveRegion*/get isLiveRegion() {
      return dart.const(new ui.SemanticsFlag.__(32768));
    },
    /*ui.SemanticsFlag.hasToggledState*/get hasToggledState() {
      return dart.const(new ui.SemanticsFlag.__(65536));
    },
    /*ui.SemanticsFlag.isToggled*/get isToggled() {
      return dart.const(new ui.SemanticsFlag.__(131072));
    },
    /*ui.SemanticsFlag.hasImplicitScrolling*/get hasImplicitScrolling() {
      return dart.const(new ui.SemanticsFlag.__(262144));
    },
    /*ui.SemanticsFlag.isMultiline*/get isMultiline() {
      return dart.const(new ui.SemanticsFlag.__(524288));
    },
    /*ui.SemanticsFlag.values*/get values() {
      return dart.constMap(core.int, ui.SemanticsFlag, [1, ui.SemanticsFlag.hasCheckedState, 2, ui.SemanticsFlag.isChecked, 4, ui.SemanticsFlag.isSelected, 8, ui.SemanticsFlag.isButton, 16, ui.SemanticsFlag.isTextField, 32, ui.SemanticsFlag.isFocused, 64, ui.SemanticsFlag.hasEnabledState, 128, ui.SemanticsFlag.isEnabled, 256, ui.SemanticsFlag.isInMutuallyExclusiveGroup, 512, ui.SemanticsFlag.isHeader, 1024, ui.SemanticsFlag.isObscured, 2048, ui.SemanticsFlag.scopesRoute, 4096, ui.SemanticsFlag.namesRoute, 8192, ui.SemanticsFlag.isHidden, 16384, ui.SemanticsFlag.isImage, 32768, ui.SemanticsFlag.isLiveRegion, 65536, ui.SemanticsFlag.hasToggledState, 131072, ui.SemanticsFlag.isToggled, 262144, ui.SemanticsFlag.hasImplicitScrolling, 524288, ui.SemanticsFlag.isMultiline]);
    }
  });
  const _nodeUpdates = dart.privateName(ui, "_nodeUpdates");
  ui.SemanticsUpdateBuilder = class SemanticsUpdateBuilder extends core.Object {
    updateNode(opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let flags = opts && 'flags' in opts ? opts.flags : null;
      let actions = opts && 'actions' in opts ? opts.actions : null;
      let textSelectionBase = opts && 'textSelectionBase' in opts ? opts.textSelectionBase : null;
      let textSelectionExtent = opts && 'textSelectionExtent' in opts ? opts.textSelectionExtent : null;
      let scrollChildren = opts && 'scrollChildren' in opts ? opts.scrollChildren : null;
      let scrollIndex = opts && 'scrollIndex' in opts ? opts.scrollIndex : null;
      let scrollPosition = opts && 'scrollPosition' in opts ? opts.scrollPosition : null;
      let scrollExtentMax = opts && 'scrollExtentMax' in opts ? opts.scrollExtentMax : null;
      let scrollExtentMin = opts && 'scrollExtentMin' in opts ? opts.scrollExtentMin : null;
      let rect = opts && 'rect' in opts ? opts.rect : null;
      let label = opts && 'label' in opts ? opts.label : null;
      let hint = opts && 'hint' in opts ? opts.hint : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let increasedValue = opts && 'increasedValue' in opts ? opts.increasedValue : null;
      let decreasedValue = opts && 'decreasedValue' in opts ? opts.decreasedValue : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let transform = opts && 'transform' in opts ? opts.transform : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let thickness = opts && 'thickness' in opts ? opts.thickness : null;
      let childrenInTraversalOrder = opts && 'childrenInTraversalOrder' in opts ? opts.childrenInTraversalOrder : null;
      let childrenInHitTestOrder = opts && 'childrenInHitTestOrder' in opts ? opts.childrenInHitTestOrder : null;
      let customAcccessibilityActions = opts && 'customAcccessibilityActions' in opts ? opts.customAcccessibilityActions : null;
      let additionalActions = opts && 'additionalActions' in opts ? opts.additionalActions : null;
      let platformViewId = opts && 'platformViewId' in opts ? opts.platformViewId : null;
      if (transform[$length] !== 16) dart.throw(new core.ArgumentError.new("transform argument must have 16 entries."));
      this[_nodeUpdates][$add](new src__engine.SemanticsNodeUpdate.new({id: id, flags: flags, actions: actions, textSelectionBase: textSelectionBase, textSelectionExtent: textSelectionExtent, scrollChildren: scrollChildren, scrollIndex: scrollIndex, scrollPosition: scrollPosition, scrollExtentMax: scrollExtentMax, scrollExtentMin: scrollExtentMin, rect: rect, label: label, hint: hint, value: value, increasedValue: increasedValue, decreasedValue: decreasedValue, textDirection: textDirection, transform: transform, elevation: elevation, thickness: thickness, childrenInTraversalOrder: childrenInTraversalOrder, childrenInHitTestOrder: childrenInHitTestOrder, additionalActions: additionalActions != null ? additionalActions : customAcccessibilityActions, platformViewId: platformViewId}));
    }
    updateCustomAction(opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let label = opts && 'label' in opts ? opts.label : null;
      let hint = opts && 'hint' in opts ? opts.hint : null;
      let overrideId = opts && 'overrideId' in opts ? opts.overrideId : -1;
    }
    build() {
      return ui.SemanticsUpdate.__({nodeUpdates: this[_nodeUpdates]});
    }
  };
  (ui.SemanticsUpdateBuilder.new = function() {
    this[_nodeUpdates] = JSArrayOfSemanticsNodeUpdate().of([]);
  }).prototype = ui.SemanticsUpdateBuilder.prototype;
  dart.addTypeTests(ui.SemanticsUpdateBuilder);
  dart.setMethodSignature(ui.SemanticsUpdateBuilder, () => ({
    __proto__: dart.getMethods(ui.SemanticsUpdateBuilder.__proto__),
    updateNode: dart.fnType(dart.void, [], {id: core.int, flags: core.int, actions: core.int, textSelectionBase: core.int, textSelectionExtent: core.int, scrollChildren: core.int, scrollIndex: core.int, scrollPosition: core.double, scrollExtentMax: core.double, scrollExtentMin: core.double, rect: ui.Rect, label: core.String, hint: core.String, value: core.String, increasedValue: core.String, decreasedValue: core.String, textDirection: ui.TextDirection, transform: typed_data.Float64List, elevation: core.double, thickness: core.double, childrenInTraversalOrder: typed_data.Int32List, childrenInHitTestOrder: typed_data.Int32List, customAcccessibilityActions: typed_data.Int32List, additionalActions: typed_data.Int32List, platformViewId: core.int}),
    updateCustomAction: dart.fnType(dart.void, [], {id: core.int, label: core.String, hint: core.String, overrideId: core.int}),
    build: dart.fnType(ui.SemanticsUpdate, [])
  }));
  dart.setFieldSignature(ui.SemanticsUpdateBuilder, () => ({
    __proto__: dart.getFields(ui.SemanticsUpdateBuilder.__proto__),
    [_nodeUpdates]: dart.finalFieldType(ListOfSemanticsNodeUpdate())
  }));
  ui.SemanticsUpdate = class SemanticsUpdate extends core.Object {
    static __(opts) {
      return new src__engine.SemanticsUpdate.new(opts);
    }
  };
  (ui.SemanticsUpdate[dart.mixinNew] = function() {
  }).prototype = ui.SemanticsUpdate.prototype;
  dart.addTypeTests(ui.SemanticsUpdate);
  ui.ensureLeading = function(str, leading, opts) {
    let applyWhenEmpty = opts && 'applyWhenEmpty' in opts ? opts.applyWhenEmpty : true;
    if (str[$isEmpty] && !dart.test(applyWhenEmpty)) {
      return str;
    }
    return str[$startsWith](leading) ? str : dart.str(leading) + dart.str(str);
  };
  ui.LocationStrategy = class LocationStrategy extends core.Object {};
  (ui.LocationStrategy.new = function() {
  }).prototype = ui.LocationStrategy.prototype;
  dart.addTypeTests(ui.LocationStrategy);
  let const$3;
  const _platformLocation = dart.privateName(ui, "_platformLocation");
  const _waitForPopState = dart.privateName(ui, "_waitForPopState");
  ui.HashLocationStrategy = class HashLocationStrategy extends ui.LocationStrategy {
    onPopState(fn) {
      this[_platformLocation].onPopState(fn);
      return dart.fn(() => this[_platformLocation].offPopState(fn), VoidTovoid());
    }
    get path() {
      let l = this[_platformLocation].hash;
      let path = l != null ? l : "";
      path = path[$isEmpty] ? path : path[$substring](1);
      return ui.ensureLeading(path, "/");
    }
    prepareExternalUrl(url) {
      return url[$isEmpty] ? dart.str(this[_platformLocation].pathname) + dart.str(this[_platformLocation].search) : "#" + dart.str(url);
    }
    pushState(state, title, url) {
      this[_platformLocation].pushState(state, title, this.prepareExternalUrl(url));
    }
    replaceState(state, title, url) {
      this[_platformLocation].replaceState(state, title, this.prepareExternalUrl(url));
    }
    back() {
      this[_platformLocation].back();
      return this[_waitForPopState]();
    }
    [_waitForPopState]() {
      let completer = CompleterOfvoid().new();
      let unsubscribe = null;
      unsubscribe = this.onPopState(dart.fn(_ => {
        unsubscribe();
        completer.complete();
      }, EventToNull()));
      return completer.future;
    }
  };
  (ui.HashLocationStrategy.new = function(platformLocation) {
    if (platformLocation === void 0) platformLocation = const$3 || (const$3 = dart.const(new ui.BrowserPlatformLocation.new()));
    this[_platformLocation] = platformLocation;
    ui.HashLocationStrategy.__proto__.new.call(this);
  }).prototype = ui.HashLocationStrategy.prototype;
  dart.addTypeTests(ui.HashLocationStrategy);
  dart.setMethodSignature(ui.HashLocationStrategy, () => ({
    __proto__: dart.getMethods(ui.HashLocationStrategy.__proto__),
    onPopState: dart.fnType(dart.fnType(dart.void, []), [dart.fnType(dart.dynamic, [html.Event])]),
    prepareExternalUrl: dart.fnType(core.String, [core.String]),
    pushState: dart.fnType(dart.void, [dart.dynamic, core.String, core.String]),
    replaceState: dart.fnType(dart.void, [dart.dynamic, core.String, core.String]),
    back: dart.fnType(async.Future$(dart.void), []),
    [_waitForPopState]: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setGetterSignature(ui.HashLocationStrategy, () => ({
    __proto__: dart.getGetters(ui.HashLocationStrategy.__proto__),
    path: core.String
  }));
  dart.setFieldSignature(ui.HashLocationStrategy, () => ({
    __proto__: dart.getFields(ui.HashLocationStrategy.__proto__),
    [_platformLocation]: dart.finalFieldType(ui.PlatformLocation)
  }));
  ui.PlatformLocation = class PlatformLocation extends core.Object {};
  (ui.PlatformLocation.new = function() {
  }).prototype = ui.PlatformLocation.prototype;
  dart.addTypeTests(ui.PlatformLocation);
  const _location = dart.privateName(ui, "_location");
  const _history = dart.privateName(ui, "_history");
  ui.BrowserPlatformLocation = class BrowserPlatformLocation extends ui.PlatformLocation {
    get [_location]() {
      return html.window[$location];
    }
    get [_history]() {
      return html.window.history;
    }
    onPopState(fn) {
      html.window[$addEventListener]("popstate", fn);
    }
    offPopState(fn) {
      html.window[$removeEventListener]("popstate", fn);
    }
    onHashChange(fn) {
      html.window[$addEventListener]("hashchange", fn);
    }
    offHashChange(fn) {
      html.window[$removeEventListener]("hashchange", fn);
    }
    get pathname() {
      return this[_location].pathname;
    }
    get search() {
      return this[_location].search;
    }
    get hash() {
      return this[_location].hash;
    }
    pushState(state, title, url) {
      this[_history][$pushState](state, title, url);
    }
    replaceState(state, title, url) {
      this[_history][$replaceState](state, title, url);
    }
    back() {
      this[_history].back();
    }
  };
  (ui.BrowserPlatformLocation.new = function() {
    ui.BrowserPlatformLocation.__proto__.new.call(this);
  }).prototype = ui.BrowserPlatformLocation.prototype;
  dart.addTypeTests(ui.BrowserPlatformLocation);
  dart.setMethodSignature(ui.BrowserPlatformLocation, () => ({
    __proto__: dart.getMethods(ui.BrowserPlatformLocation.__proto__),
    onPopState: dart.fnType(dart.void, [dart.fnType(dart.dynamic, [html.Event])]),
    offPopState: dart.fnType(dart.void, [dart.fnType(dart.dynamic, [html.Event])]),
    onHashChange: dart.fnType(dart.void, [dart.fnType(dart.dynamic, [html.Event])]),
    offHashChange: dart.fnType(dart.void, [dart.fnType(dart.dynamic, [html.Event])]),
    pushState: dart.fnType(dart.void, [dart.dynamic, core.String, core.String]),
    replaceState: dart.fnType(dart.void, [dart.dynamic, core.String, core.String]),
    back: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(ui.BrowserPlatformLocation, () => ({
    __proto__: dart.getGetters(ui.BrowserPlatformLocation.__proto__),
    [_location]: html.Location,
    [_history]: html.History,
    pathname: core.String,
    search: core.String,
    hash: core.String
  }));
  ui.FontStyle = class FontStyle extends core.Object {
    toString() {
      return {
        0: "FontStyle.normal",
        1: "FontStyle.italic"
      }[this.index];
    }
  };
  (ui.FontStyle.new = function(x) {
    this.index = x;
  }).prototype = ui.FontStyle.prototype;
  dart.addTypeTests(ui.FontStyle);
  dart.setFieldSignature(ui.FontStyle, () => ({
    __proto__: dart.getFields(ui.FontStyle.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.FontStyle, ['toString']);
  ui.FontStyle.normal = dart.const(new ui.FontStyle.new(0));
  ui.FontStyle.italic = dart.const(new ui.FontStyle.new(1));
  ui.FontStyle.values = dart.constList([ui.FontStyle.normal, ui.FontStyle.italic], ui.FontStyle);
  let const$4;
  ui.FontWeight = class FontWeight extends core.Object {
    get index() {
      return this[index$1];
    }
    set index(value) {
      super.index = value;
    }
    static lerp(a, b, t) {
      if (!(t != null)) dart.assertFailed();
      return ui.FontWeight.values[$_get](dart.asInt(ui.lerpDouble((() => {
        let l = a == null ? null : a.index;
        return l != null ? l : ui.FontWeight.normal.index;
      })(), (() => {
        let l = b == null ? null : b.index;
        return l != null ? l : ui.FontWeight.normal.index;
      })(), t)[$round]()[$clamp](0, 8)));
    }
    toString() {
      return (const$4 || (const$4 = dart.constMap(core.int, core.String, [0, "FontWeight.w100", 1, "FontWeight.w200", 2, "FontWeight.w300", 3, "FontWeight.w400", 4, "FontWeight.w500", 5, "FontWeight.w600", 6, "FontWeight.w700", 7, "FontWeight.w800", 8, "FontWeight.w900"])))[$_get](this.index);
    }
  };
  (ui.FontWeight.__ = function(index) {
    this[index$1] = index;
  }).prototype = ui.FontWeight.prototype;
  dart.addTypeTests(ui.FontWeight);
  const index$1 = Symbol("FontWeight.index");
  dart.setFieldSignature(ui.FontWeight, () => ({
    __proto__: dart.getFields(ui.FontWeight.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.FontWeight, ['toString']);
  dart.defineLazy(ui.FontWeight, {
    /*ui.FontWeight.w100*/get w100() {
      return dart.const(new ui.FontWeight.__(0));
    },
    /*ui.FontWeight.w200*/get w200() {
      return dart.const(new ui.FontWeight.__(1));
    },
    /*ui.FontWeight.w300*/get w300() {
      return dart.const(new ui.FontWeight.__(2));
    },
    /*ui.FontWeight.w400*/get w400() {
      return dart.const(new ui.FontWeight.__(3));
    },
    /*ui.FontWeight.w500*/get w500() {
      return dart.const(new ui.FontWeight.__(4));
    },
    /*ui.FontWeight.w600*/get w600() {
      return dart.const(new ui.FontWeight.__(5));
    },
    /*ui.FontWeight.w700*/get w700() {
      return dart.const(new ui.FontWeight.__(6));
    },
    /*ui.FontWeight.w800*/get w800() {
      return dart.const(new ui.FontWeight.__(7));
    },
    /*ui.FontWeight.w900*/get w900() {
      return dart.const(new ui.FontWeight.__(8));
    },
    /*ui.FontWeight.normal*/get normal() {
      return ui.FontWeight.w400;
    },
    /*ui.FontWeight.bold*/get bold() {
      return ui.FontWeight.w700;
    },
    /*ui.FontWeight.values*/get values() {
      return dart.constList([ui.FontWeight.w100, ui.FontWeight.w200, ui.FontWeight.w300, ui.FontWeight.w400, ui.FontWeight.w500, ui.FontWeight.w600, ui.FontWeight.w700, ui.FontWeight.w800, ui.FontWeight.w900], ui.FontWeight);
    }
  });
  ui.TextAlign = class TextAlign extends core.Object {
    toString() {
      return {
        0: "TextAlign.left",
        1: "TextAlign.right",
        2: "TextAlign.center",
        3: "TextAlign.justify",
        4: "TextAlign.start",
        5: "TextAlign.end"
      }[this.index];
    }
  };
  (ui.TextAlign.new = function(x) {
    this.index = x;
  }).prototype = ui.TextAlign.prototype;
  dart.addTypeTests(ui.TextAlign);
  dart.setFieldSignature(ui.TextAlign, () => ({
    __proto__: dart.getFields(ui.TextAlign.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.TextAlign, ['toString']);
  ui.TextAlign.left = dart.const(new ui.TextAlign.new(0));
  ui.TextAlign.right = dart.const(new ui.TextAlign.new(1));
  ui.TextAlign.center = dart.const(new ui.TextAlign.new(2));
  ui.TextAlign.justify = dart.const(new ui.TextAlign.new(3));
  ui.TextAlign.start = dart.const(new ui.TextAlign.new(4));
  ui.TextAlign.end = dart.const(new ui.TextAlign.new(5));
  ui.TextAlign.values = dart.constList([ui.TextAlign.left, ui.TextAlign.right, ui.TextAlign.center, ui.TextAlign.justify, ui.TextAlign.start, ui.TextAlign.end], ui.TextAlign);
  ui.textAlignToCssValue = function(align, textDirection) {
    switch (align) {
      case ui.TextAlign.left:
      {
        return "left";
      }
      case ui.TextAlign.right:
      {
        return "right";
      }
      case ui.TextAlign.center:
      {
        return "center";
      }
      case ui.TextAlign.justify:
      {
        return "justify";
      }
      case ui.TextAlign.start:
      {
        switch (textDirection) {
          case ui.TextDirection.ltr:
          {
            return null;
          }
          case ui.TextDirection.rtl:
          {
            return "right";
          }
        }
        break;
      }
      case ui.TextAlign.end:
      {
        switch (textDirection) {
          case ui.TextDirection.ltr:
          {
            return "end";
          }
          case ui.TextDirection.rtl:
          {
            return "left";
          }
        }
        break;
      }
    }
    dart.throw(new core.AssertionError.new("Unsupported TextAlign value " + dart.str(align)));
  };
  ui.TextBaseline = class TextBaseline extends core.Object {
    toString() {
      return {
        0: "TextBaseline.alphabetic",
        1: "TextBaseline.ideographic"
      }[this.index];
    }
  };
  (ui.TextBaseline.new = function(x) {
    this.index = x;
  }).prototype = ui.TextBaseline.prototype;
  dart.addTypeTests(ui.TextBaseline);
  dart.setFieldSignature(ui.TextBaseline, () => ({
    __proto__: dart.getFields(ui.TextBaseline.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.TextBaseline, ['toString']);
  ui.TextBaseline.alphabetic = dart.const(new ui.TextBaseline.new(0));
  ui.TextBaseline.ideographic = dart.const(new ui.TextBaseline.new(1));
  ui.TextBaseline.values = dart.constList([ui.TextBaseline.alphabetic, ui.TextBaseline.ideographic], ui.TextBaseline);
  const _mask = dart.privateName(ui, "_mask");
  ui.TextDecoration = class TextDecoration extends core.Object {
    static combine(decorations) {
      let mask = 0;
      for (let decoration of decorations) {
        mask = (mask | dart.notNull(decoration[_mask])) >>> 0;
      }
      return new ui.TextDecoration.__(mask);
    }
    contains(other) {
      return (dart.notNull(this[_mask]) | dart.notNull(other[_mask])) >>> 0 === this[_mask];
    }
    _equals(other) {
      if (other == null) return false;
      if (!ui.TextDecoration.is(other)) return false;
      let typedOther = ui.TextDecoration._check(other);
      return this[_mask] == typedOther[_mask];
    }
    get hashCode() {
      return dart.hashCode(this[_mask]);
    }
    toString() {
      if (this[_mask] === 0) return "TextDecoration.none";
      let values = JSArrayOfString().of([]);
      if ((dart.notNull(this[_mask]) & dart.notNull(ui.TextDecoration.underline[_mask])) !== 0) values[$add]("underline");
      if ((dart.notNull(this[_mask]) & dart.notNull(ui.TextDecoration.overline[_mask])) !== 0) values[$add]("overline");
      if ((dart.notNull(this[_mask]) & dart.notNull(ui.TextDecoration.lineThrough[_mask])) !== 0) values[$add]("lineThrough");
      if (values[$length] === 1) return "TextDecoration." + dart.str(values[$_get](0));
      return "TextDecoration.combine([" + dart.str(values[$join](", ")) + "])";
    }
  };
  (ui.TextDecoration.__ = function(mask) {
    this[_mask] = mask;
  }).prototype = ui.TextDecoration.prototype;
  dart.addTypeTests(ui.TextDecoration);
  dart.setMethodSignature(ui.TextDecoration, () => ({
    __proto__: dart.getMethods(ui.TextDecoration.__proto__),
    contains: dart.fnType(core.bool, [ui.TextDecoration])
  }));
  dart.setFieldSignature(ui.TextDecoration, () => ({
    __proto__: dart.getFields(ui.TextDecoration.__proto__),
    [_mask]: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.TextDecoration, ['_equals', 'toString']);
  dart.defineExtensionAccessors(ui.TextDecoration, ['hashCode']);
  dart.defineLazy(ui.TextDecoration, {
    /*ui.TextDecoration.none*/get none() {
      return dart.const(new ui.TextDecoration.__(0));
    },
    /*ui.TextDecoration.underline*/get underline() {
      return dart.const(new ui.TextDecoration.__(1));
    },
    /*ui.TextDecoration.overline*/get overline() {
      return dart.const(new ui.TextDecoration.__(2));
    },
    /*ui.TextDecoration.lineThrough*/get lineThrough() {
      return dart.const(new ui.TextDecoration.__(4));
    }
  });
  ui.TextDecorationStyle = class TextDecorationStyle extends core.Object {
    toString() {
      return {
        0: "TextDecorationStyle.solid",
        1: "TextDecorationStyle.double",
        2: "TextDecorationStyle.dotted",
        3: "TextDecorationStyle.dashed",
        4: "TextDecorationStyle.wavy"
      }[this.index];
    }
  };
  (ui.TextDecorationStyle.new = function(x) {
    this.index = x;
  }).prototype = ui.TextDecorationStyle.prototype;
  dart.addTypeTests(ui.TextDecorationStyle);
  dart.setFieldSignature(ui.TextDecorationStyle, () => ({
    __proto__: dart.getFields(ui.TextDecorationStyle.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.TextDecorationStyle, ['toString']);
  ui.TextDecorationStyle.solid = dart.const(new ui.TextDecorationStyle.new(0));
  ui.TextDecorationStyle.double = dart.const(new ui.TextDecorationStyle.new(1));
  ui.TextDecorationStyle.dotted = dart.const(new ui.TextDecorationStyle.new(2));
  ui.TextDecorationStyle.dashed = dart.const(new ui.TextDecorationStyle.new(3));
  ui.TextDecorationStyle.wavy = dart.const(new ui.TextDecorationStyle.new(4));
  ui.TextDecorationStyle.values = dart.constList([ui.TextDecorationStyle.solid, ui.TextDecorationStyle.double, ui.TextDecorationStyle.dotted, ui.TextDecorationStyle.dashed, ui.TextDecorationStyle.wavy], ui.TextDecorationStyle);
  ui._listEquals = function(T, a, b) {
    if (a == null) return b == null;
    if (b == null || a[$length] != b[$length]) return false;
    for (let index = 0; index < dart.notNull(a[$length]); index = index + 1) {
      if (!dart.equals(a[$_get](index), b[$_get](index))) return false;
    }
    return true;
  };
  const _decoration = dart.privateName(ui, "_decoration");
  const _decorationColor = dart.privateName(ui, "_decorationColor");
  const _decorationStyle = dart.privateName(ui, "_decorationStyle");
  const _fontWeight = dart.privateName(ui, "_fontWeight");
  const _fontStyle = dart.privateName(ui, "_fontStyle");
  const _textBaseline = dart.privateName(ui, "_textBaseline");
  const _webOnlyIsFontFamilyProvided = dart.privateName(ui, "_webOnlyIsFontFamilyProvided");
  const _fontFamily = dart.privateName(ui, "_fontFamily");
  const _fontFamilyFallback = dart.privateName(ui, "_fontFamilyFallback");
  const _fontSize = dart.privateName(ui, "_fontSize");
  const _letterSpacing = dart.privateName(ui, "_letterSpacing");
  const _wordSpacing = dart.privateName(ui, "_wordSpacing");
  const _height = dart.privateName(ui, "_height");
  const _locale = dart.privateName(ui, "_locale");
  const _background = dart.privateName(ui, "_background");
  const _foreground = dart.privateName(ui, "_foreground");
  const _shadows = dart.privateName(ui, "_shadows");
  const _effectiveFontFamily = dart.privateName(ui, "_effectiveFontFamily");
  ui.TextStyle = class TextStyle extends core.Object {
    get [_effectiveFontFamily]() {
      if (dart.test(src__engine.assertionsEnabled)) {
        if (dart.test(src__engine.domRenderer.debugIsInWidgetTest)) {
          return "Ahem";
        }
      }
      if (this[_fontFamily] == null || this[_fontFamily][$isEmpty]) {
        return src__engine.DomRenderer.defaultFontFamily;
      }
      return this[_fontFamily];
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!ui.TextStyle.is(other)) return false;
      let typedOther = ui.TextStyle._check(other);
      return dart.equals(this[_color], typedOther[_color]) && dart.equals(this[_decoration], typedOther[_decoration]) && dart.equals(this[_decorationColor], typedOther[_decorationColor]) && this[_decorationStyle] == typedOther[_decorationStyle] && dart.equals(this[_fontWeight], typedOther[_fontWeight]) && this[_fontStyle] == typedOther[_fontStyle] && this[_textBaseline] == typedOther[_textBaseline] && this[_fontFamily] == typedOther[_fontFamily] && this[_fontSize] == typedOther[_fontSize] && this[_letterSpacing] == typedOther[_letterSpacing] && this[_wordSpacing] == typedOther[_wordSpacing] && this[_height] == typedOther[_height] && dart.equals(this[_locale], typedOther[_locale]) && dart.equals(this[_background], typedOther[_background]) && dart.equals(this[_foreground], typedOther[_foreground]) && dart.test(ui._listEquals(ui.Shadow, this[_shadows], typedOther[_shadows])) && dart.test(ui._listEquals(core.String, this[_fontFamilyFallback], typedOther[_fontFamilyFallback]));
    }
    get hashCode() {
      return ui.hashValues(this[_color], this[_decoration], this[_decorationColor], this[_decorationStyle], this[_fontWeight], this[_fontStyle], this[_textBaseline], this[_fontFamily], this[_fontFamilyFallback], this[_fontSize], this[_letterSpacing], this[_wordSpacing], this[_height], this[_locale], this[_background], this[_foreground], this[_shadows]);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "TextStyle(" + ("color: " + dart.str(this[_color] != null ? this[_color] : "unspecified") + ", ") + ("decoration: " + dart.str(this[_decoration] != null ? this[_decoration] : "unspecified") + ", ") + ("decorationColor: " + dart.str(this[_decorationColor] != null ? this[_decorationColor] : "unspecified") + ", ") + ("decorationStyle: " + dart.str(this[_decorationStyle] != null ? this[_decorationStyle] : "unspecified") + ", ") + ("fontWeight: " + dart.str(this[_fontWeight] != null ? this[_fontWeight] : "unspecified") + ", ") + ("fontStyle: " + dart.str(this[_fontStyle] != null ? this[_fontStyle] : "unspecified") + ", ") + ("textBaseline: " + dart.str(this[_textBaseline] != null ? this[_textBaseline] : "unspecified") + ", ") + ("fontFamily: " + dart.str(dart.test(this[_webOnlyIsFontFamilyProvided]) && this[_fontFamily] != null ? this[_fontFamily] : "unspecified") + ", ") + ("fontFamilyFallback: " + dart.str(dart.test(this[_webOnlyIsFontFamilyProvided]) && this[_fontFamilyFallback] != null && dart.test(this[_fontFamilyFallback][$isNotEmpty]) ? this[_fontFamilyFallback] : "unspecified") + ", ") + ("fontSize: " + (this[_fontSize] != null ? this[_fontSize][$toStringAsFixed](1) : "unspecified") + ", ") + ("letterSpacing: " + (this[_letterSpacing] != null ? dart.str(this[_letterSpacing]) + "x" : "unspecified") + ", ") + ("wordSpacing: " + (this[_wordSpacing] != null ? dart.str(this[_wordSpacing]) + "x" : "unspecified") + ", ") + ("height: " + (this[_height] != null ? this[_height][$toStringAsFixed](1) + "x" : "unspecified") + ", ") + ("locale: " + dart.str(this[_locale] != null ? this[_locale] : "unspecified") + ", ") + ("background: " + dart.str(this[_background] != null ? this[_background] : "unspecified") + ", ") + ("foreground: " + dart.str(this[_foreground] != null ? this[_foreground] : "unspecified") + ", ") + ("shadows: " + dart.str(this[_shadows] != null ? this[_shadows] : "unspecified")) + ")";
      } else {
        return super.toString();
      }
    }
  };
  (ui.TextStyle.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let decorationColor = opts && 'decorationColor' in opts ? opts.decorationColor : null;
    let decorationStyle = opts && 'decorationStyle' in opts ? opts.decorationStyle : null;
    let decorationThickness = opts && 'decorationThickness' in opts ? opts.decorationThickness : null;
    let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
    let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    let fontFamily = opts && 'fontFamily' in opts ? opts.fontFamily : null;
    let fontFamilyFallback = opts && 'fontFamilyFallback' in opts ? opts.fontFamilyFallback : null;
    let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
    let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
    let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let background = opts && 'background' in opts ? opts.background : null;
    let foreground = opts && 'foreground' in opts ? opts.foreground : null;
    let shadows = opts && 'shadows' in opts ? opts.shadows : null;
    if (!(color == null || foreground == null)) dart.assertFailed("Cannot provide both a color and a foreground\n" + "The color argument is just a shorthand for \"foreground: new Paint()..color = color\".");
    this[_color] = color;
    this[_decoration] = decoration;
    this[_decorationColor] = decorationColor;
    this[_decorationStyle] = decorationStyle;
    this[_fontWeight] = fontWeight;
    this[_fontStyle] = fontStyle;
    this[_textBaseline] = textBaseline;
    this[_webOnlyIsFontFamilyProvided] = fontFamily != null;
    let l = fontFamily;
    this[_fontFamily] = l != null ? l : "";
    this[_fontFamilyFallback] = fontFamilyFallback;
    this[_fontSize] = fontSize;
    this[_letterSpacing] = letterSpacing;
    this[_wordSpacing] = wordSpacing;
    this[_height] = height;
    this[_locale] = locale;
    this[_background] = background;
    this[_foreground] = foreground;
    this[_shadows] = shadows;
  }).prototype = ui.TextStyle.prototype;
  dart.addTypeTests(ui.TextStyle);
  dart.setGetterSignature(ui.TextStyle, () => ({
    __proto__: dart.getGetters(ui.TextStyle.__proto__),
    [_effectiveFontFamily]: core.String
  }));
  dart.setFieldSignature(ui.TextStyle, () => ({
    __proto__: dart.getFields(ui.TextStyle.__proto__),
    [_color]: dart.finalFieldType(ui.Color),
    [_decoration]: dart.finalFieldType(ui.TextDecoration),
    [_decorationColor]: dart.finalFieldType(ui.Color),
    [_decorationStyle]: dart.finalFieldType(ui.TextDecorationStyle),
    [_fontWeight]: dart.finalFieldType(ui.FontWeight),
    [_fontStyle]: dart.finalFieldType(ui.FontStyle),
    [_textBaseline]: dart.finalFieldType(ui.TextBaseline),
    [_webOnlyIsFontFamilyProvided]: dart.finalFieldType(core.bool),
    [_fontFamily]: dart.finalFieldType(core.String),
    [_fontFamilyFallback]: dart.finalFieldType(ListOfString()),
    [_fontSize]: dart.finalFieldType(core.double),
    [_letterSpacing]: dart.finalFieldType(core.double),
    [_wordSpacing]: dart.finalFieldType(core.double),
    [_height]: dart.finalFieldType(core.double),
    [_locale]: dart.finalFieldType(ui.Locale),
    [_background]: dart.finalFieldType(ui.Paint),
    [_foreground]: dart.finalFieldType(ui.Paint),
    [_shadows]: dart.finalFieldType(ListOfShadow())
  }));
  dart.defineExtensionMethods(ui.TextStyle, ['_equals', 'toString']);
  dart.defineExtensionAccessors(ui.TextStyle, ['hashCode']);
  const _textAlign = dart.privateName(ui, "_textAlign");
  const _textDirection = dart.privateName(ui, "_textDirection");
  const _maxLines = dart.privateName(ui, "_maxLines");
  const _strutStyle = dart.privateName(ui, "_strutStyle");
  const _ellipsis = dart.privateName(ui, "_ellipsis");
  const _forceStrutHeight = dart.privateName(ui, "_forceStrutHeight");
  const _webOnlyLineHeight = dart.privateName(ui, "_webOnlyLineHeight");
  ui.ParagraphStyle = class ParagraphStyle extends core.Object {
    get [_effectiveFontFamily]() {
      if (dart.test(src__engine.assertionsEnabled)) {
        if (dart.test(src__engine.domRenderer.debugIsInWidgetTest)) {
          return "Ahem";
        }
      }
      if (this[_fontFamily] == null || this[_fontFamily][$isEmpty]) {
        return src__engine.DomRenderer.defaultFontFamily;
      }
      return this[_fontFamily];
    }
    get [_webOnlyLineHeight]() {
      if (this[_strutStyle] == null || this[_strutStyle][_height] == null) {
        return this[_height];
      }
      if (this[_strutStyle][_forceStrutHeight] === true) {
        return this[_strutStyle][_height];
      }
      return math.max(core.double, this[_strutStyle][_height], this[_height]);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      let typedOther = ui.ParagraphStyle._check(other);
      return this[_textAlign] == typedOther[_textAlign] || this[_textDirection] == typedOther[_textDirection] || dart.equals(this[_fontWeight], typedOther[_fontWeight]) || this[_fontStyle] == typedOther[_fontStyle] || this[_maxLines] == typedOther[_maxLines] || this[_fontFamily] == typedOther[_fontFamily] || this[_fontSize] == typedOther[_fontSize] || this[_height] == typedOther[_height] || this[_ellipsis] == typedOther[_ellipsis] || dart.equals(this[_locale], typedOther[_locale]);
    }
    get hashCode() {
      return ui.hashValues(this[_fontFamily], this[_fontSize], this[_height], this[_ellipsis], this[_locale]);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return dart.str(this[$runtimeType]) + "(" + ("textAlign: " + dart.str(this[_textAlign] != null ? this[_textAlign] : "unspecified") + ", ") + ("textDirection: " + dart.str(this[_textDirection] != null ? this[_textDirection] : "unspecified") + ", ") + ("fontWeight: " + dart.str(this[_fontWeight] != null ? this[_fontWeight] : "unspecified") + ", ") + ("fontStyle: " + dart.str(this[_fontStyle] != null ? this[_fontStyle] : "unspecified") + ", ") + ("maxLines: " + dart.str(this[_maxLines] != null ? this[_maxLines] : "unspecified") + ", ") + ("fontFamily: " + (this[_fontFamily] != null ? this[_fontFamily] : "unspecified") + ", ") + ("fontSize: " + (this[_fontSize] != null ? this[_fontSize][$toStringAsFixed](1) : "unspecified") + ", ") + ("height: " + (this[_height] != null ? this[_height][$toStringAsFixed](1) + "x" : "unspecified") + ", ") + ("ellipsis: " + (this[_ellipsis] != null ? "\"" + dart.str(this[_ellipsis]) + "\"" : "unspecified") + ", ") + ("locale: " + dart.str(this[_locale] != null ? this[_locale] : "unspecified")) + ")";
      } else {
        return super.toString();
      }
    }
  };
  (ui.ParagraphStyle.new = function(opts) {
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let maxLines = opts && 'maxLines' in opts ? opts.maxLines : null;
    let fontFamily = opts && 'fontFamily' in opts ? opts.fontFamily : null;
    let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
    let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
    let strutStyle = opts && 'strutStyle' in opts ? opts.strutStyle : null;
    let ellipsis = opts && 'ellipsis' in opts ? opts.ellipsis : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    this[_textAlign] = textAlign;
    this[_textDirection] = textDirection;
    this[_fontWeight] = fontWeight;
    this[_fontStyle] = fontStyle;
    this[_maxLines] = maxLines;
    this[_fontFamily] = fontFamily;
    this[_fontSize] = fontSize;
    this[_height] = height;
    this[_strutStyle] = strutStyle;
    this[_ellipsis] = ellipsis;
    this[_locale] = locale;
  }).prototype = ui.ParagraphStyle.prototype;
  dart.addTypeTests(ui.ParagraphStyle);
  dart.setGetterSignature(ui.ParagraphStyle, () => ({
    __proto__: dart.getGetters(ui.ParagraphStyle.__proto__),
    [_effectiveFontFamily]: core.String,
    [_webOnlyLineHeight]: core.double
  }));
  dart.setFieldSignature(ui.ParagraphStyle, () => ({
    __proto__: dart.getFields(ui.ParagraphStyle.__proto__),
    [_textAlign]: dart.finalFieldType(ui.TextAlign),
    [_textDirection]: dart.finalFieldType(ui.TextDirection),
    [_fontWeight]: dart.finalFieldType(ui.FontWeight),
    [_fontStyle]: dart.finalFieldType(ui.FontStyle),
    [_maxLines]: dart.finalFieldType(core.int),
    [_fontFamily]: dart.finalFieldType(core.String),
    [_fontSize]: dart.finalFieldType(core.double),
    [_height]: dart.finalFieldType(core.double),
    [_strutStyle]: dart.finalFieldType(ui.StrutStyle),
    [_ellipsis]: dart.finalFieldType(core.String),
    [_locale]: dart.finalFieldType(ui.Locale)
  }));
  dart.defineExtensionMethods(ui.ParagraphStyle, ['_equals', 'toString']);
  dart.defineExtensionAccessors(ui.ParagraphStyle, ['hashCode']);
  const _leading = dart.privateName(ui, "_leading");
  ui.StrutStyle = class StrutStyle extends core.Object {
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      let typedOther = ui.StrutStyle._check(other);
      return this[_fontFamily] == typedOther[_fontFamily] && this[_fontSize] == typedOther[_fontSize] && this[_height] == typedOther[_height] && this[_leading] == typedOther[_leading] && dart.equals(this[_fontWeight], typedOther[_fontWeight]) && this[_fontStyle] == typedOther[_fontStyle] && this[_forceStrutHeight] == typedOther[_forceStrutHeight] && dart.test(ui._listEquals(core.String, this[_fontFamilyFallback], typedOther[_fontFamilyFallback]));
    }
    get hashCode() {
      return ui.hashValues(this[_fontFamily], this[_fontFamilyFallback], this[_fontSize], this[_height], this[_leading], this[_fontWeight], this[_fontStyle], this[_forceStrutHeight]);
    }
  };
  (ui.StrutStyle.new = function(opts) {
    let fontFamily = opts && 'fontFamily' in opts ? opts.fontFamily : null;
    let fontFamilyFallback = opts && 'fontFamilyFallback' in opts ? opts.fontFamilyFallback : null;
    let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
    let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
    let forceStrutHeight = opts && 'forceStrutHeight' in opts ? opts.forceStrutHeight : null;
    this[_fontFamily] = fontFamily;
    this[_fontFamilyFallback] = fontFamilyFallback;
    this[_fontSize] = fontSize;
    this[_height] = height;
    this[_leading] = leading;
    this[_fontWeight] = fontWeight;
    this[_fontStyle] = fontStyle;
    this[_forceStrutHeight] = forceStrutHeight;
  }).prototype = ui.StrutStyle.prototype;
  dart.addTypeTests(ui.StrutStyle);
  dart.setFieldSignature(ui.StrutStyle, () => ({
    __proto__: dart.getFields(ui.StrutStyle.__proto__),
    [_fontFamily]: dart.finalFieldType(core.String),
    [_fontFamilyFallback]: dart.finalFieldType(ListOfString()),
    [_fontSize]: dart.finalFieldType(core.double),
    [_height]: dart.finalFieldType(core.double),
    [_leading]: dart.finalFieldType(core.double),
    [_fontWeight]: dart.finalFieldType(ui.FontWeight),
    [_fontStyle]: dart.finalFieldType(ui.FontStyle),
    [_forceStrutHeight]: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(ui.StrutStyle, ['_equals']);
  dart.defineExtensionAccessors(ui.StrutStyle, ['hashCode']);
  ui.TextDirection = class TextDirection extends core.Object {
    toString() {
      return {
        0: "TextDirection.rtl",
        1: "TextDirection.ltr"
      }[this.index];
    }
  };
  (ui.TextDirection.new = function(x) {
    this.index = x;
  }).prototype = ui.TextDirection.prototype;
  dart.addTypeTests(ui.TextDirection);
  dart.setFieldSignature(ui.TextDirection, () => ({
    __proto__: dart.getFields(ui.TextDirection.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.TextDirection, ['toString']);
  ui.TextDirection.rtl = dart.const(new ui.TextDirection.new(0));
  ui.TextDirection.ltr = dart.const(new ui.TextDirection.new(1));
  ui.TextDirection.values = dart.constList([ui.TextDirection.rtl, ui.TextDirection.ltr], ui.TextDirection);
  ui.textDirectionToCssValue = function(textDirection) {
    return textDirection === ui.TextDirection.ltr ? null : "rtl";
  };
  ui.TextBox = class TextBox extends core.Object {
    get left() {
      return this[left$1];
    }
    set left(value) {
      super.left = value;
    }
    get top() {
      return this[top$1];
    }
    set top(value) {
      super.top = value;
    }
    get right() {
      return this[right$1];
    }
    set right(value) {
      super.right = value;
    }
    get bottom() {
      return this[bottom$1];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get direction() {
      return this[direction$];
    }
    set direction(value) {
      super.direction = value;
    }
    toRect() {
      return new ui.Rect.fromLTRB(this.left, this.top, this.right, this.bottom);
    }
    get start() {
      return this.direction === ui.TextDirection.ltr ? this.left : this.right;
    }
    get end() {
      return this.direction === ui.TextDirection.ltr ? this.right : this.left;
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      let typedOther = ui.TextBox._check(other);
      return typedOther.left == this.left && typedOther.top == this.top && typedOther.right == this.right && typedOther.bottom == this.bottom && typedOther.direction == this.direction;
    }
    get hashCode() {
      return ui.hashValues(this.left, this.top, this.right, this.bottom, this.direction);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "TextBox.fromLTRBD(" + this.left[$toStringAsFixed](1) + ", " + this.top[$toStringAsFixed](1) + ", " + this.right[$toStringAsFixed](1) + ", " + this.bottom[$toStringAsFixed](1) + ", " + dart.str(this.direction) + ")";
      }
      return super.toString();
    }
  };
  (ui.TextBox.fromLTRBD = function(left, top, right, bottom, direction) {
    this[left$1] = left;
    this[top$1] = top;
    this[right$1] = right;
    this[bottom$1] = bottom;
    this[direction$] = direction;
  }).prototype = ui.TextBox.prototype;
  (ui.TextBox.__ = function(left, top, right, bottom, directionIndex) {
    this[left$1] = left;
    this[top$1] = top;
    this[right$1] = right;
    this[bottom$1] = bottom;
    this[direction$] = ui.TextDirection.values[$_get](directionIndex);
  }).prototype = ui.TextBox.prototype;
  dart.addTypeTests(ui.TextBox);
  const left$1 = Symbol("TextBox.left");
  const top$1 = Symbol("TextBox.top");
  const right$1 = Symbol("TextBox.right");
  const bottom$1 = Symbol("TextBox.bottom");
  const direction$ = Symbol("TextBox.direction");
  dart.setMethodSignature(ui.TextBox, () => ({
    __proto__: dart.getMethods(ui.TextBox.__proto__),
    toRect: dart.fnType(ui.Rect, [])
  }));
  dart.setGetterSignature(ui.TextBox, () => ({
    __proto__: dart.getGetters(ui.TextBox.__proto__),
    start: core.double,
    end: core.double
  }));
  dart.setFieldSignature(ui.TextBox, () => ({
    __proto__: dart.getFields(ui.TextBox.__proto__),
    left: dart.finalFieldType(core.double),
    top: dart.finalFieldType(core.double),
    right: dart.finalFieldType(core.double),
    bottom: dart.finalFieldType(core.double),
    direction: dart.finalFieldType(ui.TextDirection)
  }));
  dart.defineExtensionMethods(ui.TextBox, ['_equals', 'toString']);
  dart.defineExtensionAccessors(ui.TextBox, ['hashCode']);
  ui.TextAffinity = class TextAffinity extends core.Object {
    toString() {
      return {
        0: "TextAffinity.upstream",
        1: "TextAffinity.downstream"
      }[this.index];
    }
  };
  (ui.TextAffinity.new = function(x) {
    this.index = x;
  }).prototype = ui.TextAffinity.prototype;
  dart.addTypeTests(ui.TextAffinity);
  dart.setFieldSignature(ui.TextAffinity, () => ({
    __proto__: dart.getFields(ui.TextAffinity.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.TextAffinity, ['toString']);
  ui.TextAffinity.upstream = dart.const(new ui.TextAffinity.new(0));
  ui.TextAffinity.downstream = dart.const(new ui.TextAffinity.new(1));
  ui.TextAffinity.values = dart.constList([ui.TextAffinity.upstream, ui.TextAffinity.downstream], ui.TextAffinity);
  ui.TextPosition = class TextPosition extends core.Object {
    get offset() {
      return this[offset$1];
    }
    set offset(value) {
      super.offset = value;
    }
    get affinity() {
      return this[affinity$];
    }
    set affinity(value) {
      super.affinity = value;
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      let typedOther = ui.TextPosition._check(other);
      return typedOther.offset == this.offset && typedOther.affinity == this.affinity;
    }
    get hashCode() {
      return ui.hashValues(this.offset, this.affinity);
    }
    toString() {
      return dart.str(this[$runtimeType]) + "(offset: " + dart.str(this.offset) + ", affinity: " + dart.str(this.affinity) + ")";
    }
  };
  (ui.TextPosition.new = function(opts) {
    let offset = opts && 'offset' in opts ? opts.offset : null;
    let affinity = opts && 'affinity' in opts ? opts.affinity : ui.TextAffinity.downstream;
    this[offset$1] = offset;
    this[affinity$] = affinity;
    if (!(offset != null)) dart.assertFailed();
    if (!(affinity != null)) dart.assertFailed();
  }).prototype = ui.TextPosition.prototype;
  dart.addTypeTests(ui.TextPosition);
  const offset$1 = Symbol("TextPosition.offset");
  const affinity$ = Symbol("TextPosition.affinity");
  dart.setFieldSignature(ui.TextPosition, () => ({
    __proto__: dart.getFields(ui.TextPosition.__proto__),
    offset: dart.finalFieldType(core.int),
    affinity: dart.finalFieldType(ui.TextAffinity)
  }));
  dart.defineExtensionMethods(ui.TextPosition, ['_equals', 'toString']);
  dart.defineExtensionAccessors(ui.TextPosition, ['hashCode']);
  ui.ParagraphConstraints = class ParagraphConstraints extends core.Object {
    get width() {
      return this[width$];
    }
    set width(value) {
      super.width = value;
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      let typedOther = ui.ParagraphConstraints._check(other);
      return typedOther.width == this.width;
    }
    get hashCode() {
      return dart.hashCode(this.width);
    }
    toString() {
      return dart.str(this[$runtimeType]) + "(width: " + dart.str(this.width) + ")";
    }
  };
  (ui.ParagraphConstraints.new = function(opts) {
    let width = opts && 'width' in opts ? opts.width : null;
    this[width$] = width;
    if (!(width != null)) dart.assertFailed();
  }).prototype = ui.ParagraphConstraints.prototype;
  dart.addTypeTests(ui.ParagraphConstraints);
  const width$ = Symbol("ParagraphConstraints.width");
  dart.setFieldSignature(ui.ParagraphConstraints, () => ({
    __proto__: dart.getFields(ui.ParagraphConstraints.__proto__),
    width: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(ui.ParagraphConstraints, ['_equals', 'toString']);
  dart.defineExtensionAccessors(ui.ParagraphConstraints, ['hashCode']);
  ui.BoxHeightStyle = class BoxHeightStyle extends core.Object {
    toString() {
      return {
        0: "BoxHeightStyle.tight",
        1: "BoxHeightStyle.max",
        2: "BoxHeightStyle.includeLineSpacingMiddle",
        3: "BoxHeightStyle.includeLineSpacingTop",
        4: "BoxHeightStyle.includeLineSpacingBottom"
      }[this.index];
    }
  };
  (ui.BoxHeightStyle.new = function(x) {
    this.index = x;
  }).prototype = ui.BoxHeightStyle.prototype;
  dart.addTypeTests(ui.BoxHeightStyle);
  dart.setFieldSignature(ui.BoxHeightStyle, () => ({
    __proto__: dart.getFields(ui.BoxHeightStyle.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.BoxHeightStyle, ['toString']);
  ui.BoxHeightStyle.tight = dart.const(new ui.BoxHeightStyle.new(0));
  ui.BoxHeightStyle.max = dart.const(new ui.BoxHeightStyle.new(1));
  ui.BoxHeightStyle.includeLineSpacingMiddle = dart.const(new ui.BoxHeightStyle.new(2));
  ui.BoxHeightStyle.includeLineSpacingTop = dart.const(new ui.BoxHeightStyle.new(3));
  ui.BoxHeightStyle.includeLineSpacingBottom = dart.const(new ui.BoxHeightStyle.new(4));
  ui.BoxHeightStyle.values = dart.constList([ui.BoxHeightStyle.tight, ui.BoxHeightStyle.max, ui.BoxHeightStyle.includeLineSpacingMiddle, ui.BoxHeightStyle.includeLineSpacingTop, ui.BoxHeightStyle.includeLineSpacingBottom], ui.BoxHeightStyle);
  ui.BoxWidthStyle = class BoxWidthStyle extends core.Object {
    toString() {
      return {
        0: "BoxWidthStyle.tight",
        1: "BoxWidthStyle.max"
      }[this.index];
    }
  };
  (ui.BoxWidthStyle.new = function(x) {
    this.index = x;
  }).prototype = ui.BoxWidthStyle.prototype;
  dart.addTypeTests(ui.BoxWidthStyle);
  dart.setFieldSignature(ui.BoxWidthStyle, () => ({
    __proto__: dart.getFields(ui.BoxWidthStyle.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.BoxWidthStyle, ['toString']);
  ui.BoxWidthStyle.tight = dart.const(new ui.BoxWidthStyle.new(0));
  ui.BoxWidthStyle.max = dart.const(new ui.BoxWidthStyle.new(1));
  ui.BoxWidthStyle.values = dart.constList([ui.BoxWidthStyle.tight, ui.BoxWidthStyle.max], ui.BoxWidthStyle);
  const _paragraphElement = dart.privateName(ui, "_paragraphElement");
  const _paragraphGeometricStyle = dart.privateName(ui, "_paragraphGeometricStyle");
  const _plainText = dart.privateName(ui, "_plainText");
  const _paint = dart.privateName(ui, "_paint");
  const _width = dart.privateName(ui, "_width");
  const _lineHeight = dart.privateName(ui, "_lineHeight");
  const _minIntrinsicWidth = dart.privateName(ui, "_minIntrinsicWidth");
  const _maxIntrinsicWidth = dart.privateName(ui, "_maxIntrinsicWidth");
  const _alphabeticBaseline = dart.privateName(ui, "_alphabeticBaseline");
  const _ideographicBaseline = dart.privateName(ui, "_ideographicBaseline");
  const _didExceedMaxLines = dart.privateName(ui, "_didExceedMaxLines");
  const _lastUsedConstraints = dart.privateName(ui, "_lastUsedConstraints");
  const _webOnlyIsSingleLine = dart.privateName(ui, "_webOnlyIsSingleLine");
  const _webOnlyIsLaidOut = dart.privateName(ui, "_webOnlyIsLaidOut");
  const _getBoxesForRange = dart.privateName(ui, "_getBoxesForRange");
  const _cloneWithText = dart.privateName(ui, "_cloneWithText");
  ui.Paragraph = class Paragraph extends core.Object {
    webOnlyGetParagraphElement() {
      return this[_paragraphElement];
    }
    get width() {
      return this[_width];
    }
    get height() {
      return this[_height];
    }
    get minIntrinsicWidth() {
      return this[_minIntrinsicWidth];
    }
    get maxIntrinsicWidth() {
      return this[_maxIntrinsicWidth];
    }
    get alphabeticBaseline() {
      return this[_alphabeticBaseline];
    }
    get ideographicBaseline() {
      return this[_ideographicBaseline];
    }
    get didExceedMaxLines() {
      return this[_didExceedMaxLines];
    }
    get webOnlyAlignOffset() {
      return this[webOnlyAlignOffset];
    }
    set webOnlyAlignOffset(value) {
      this[webOnlyAlignOffset] = value;
    }
    layout(constraints) {
      if (dart.equals(constraints, this[_lastUsedConstraints])) {
        return;
      }
      src__engine.TextMeasurementService.instance.measure(this, constraints);
      this[_lastUsedConstraints] = constraints;
      if (this[_paragraphGeometricStyle].maxLines != null) {
        this[_didExceedMaxLines] = dart.notNull(this.webOnlyMaxLinesHeight) < dart.notNull(this[_height]);
      } else {
        this[_didExceedMaxLines] = false;
      }
      if (dart.test(this[_webOnlyIsSingleLine]) && constraints != null) {
        switch (this[_textAlign]) {
          case ui.TextAlign.center:
          {
            this.webOnlyAlignOffset = (dart.notNull(constraints.width) - dart.notNull(this[_maxIntrinsicWidth])) / 2.0;
            break;
          }
          case ui.TextAlign.right:
          {
            this.webOnlyAlignOffset = dart.notNull(constraints.width) - dart.notNull(this[_maxIntrinsicWidth]);
            break;
          }
          case ui.TextAlign.start:
          {
            this.webOnlyAlignOffset = this[_textDirection] === ui.TextDirection.rtl ? dart.notNull(constraints.width) - dart.notNull(this[_maxIntrinsicWidth]) : 0.0;
            break;
          }
          case ui.TextAlign.end:
          {
            this.webOnlyAlignOffset = this[_textDirection] === ui.TextDirection.ltr ? dart.notNull(constraints.width) - dart.notNull(this[_maxIntrinsicWidth]) : 0.0;
            break;
          }
          default:
          {
            this.webOnlyAlignOffset = 0.0;
            break;
          }
        }
      }
    }
    webOnlyGetParagraphGeometricStyle() {
      return this[_paragraphGeometricStyle];
    }
    webOnlyGetPlainText() {
      return this[_plainText];
    }
    webOnlyGetPaint() {
      return this[_paint];
    }
    get webOnlyMaxLinesHeight() {
      if (!dart.test(this[_webOnlyIsLaidOut])) dart.assertFailed();
      if (this[_paragraphGeometricStyle].maxLines == null) {
        return null;
      }
      if (!(this[_lineHeight] != null)) dart.assertFailed();
      return dart.notNull(this[_paragraphGeometricStyle].maxLines) * dart.notNull(this[_lineHeight]);
    }
    webOnlySetComputedLayout(opts) {
      let width = opts && 'width' in opts ? opts.width : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let lineHeight = opts && 'lineHeight' in opts ? opts.lineHeight : null;
      let minIntrinsicWidth = opts && 'minIntrinsicWidth' in opts ? opts.minIntrinsicWidth : null;
      let maxIntrinsicWidth = opts && 'maxIntrinsicWidth' in opts ? opts.maxIntrinsicWidth : null;
      let alphabeticBaseline = opts && 'alphabeticBaseline' in opts ? opts.alphabeticBaseline : null;
      let ideographicBaseline = opts && 'ideographicBaseline' in opts ? opts.ideographicBaseline : null;
      let isSingleLine = opts && 'isSingleLine' in opts ? opts.isSingleLine : null;
      if (!(width != null && height != null && minIntrinsicWidth != null && maxIntrinsicWidth != null && dart.notNull(minIntrinsicWidth) <= dart.notNull(maxIntrinsicWidth) && alphabeticBaseline != null && ideographicBaseline != null)) dart.assertFailed();
      this[_width] = width;
      this[_height] = height;
      this[_lineHeight] = lineHeight;
      this[_minIntrinsicWidth] = minIntrinsicWidth;
      this[_maxIntrinsicWidth] = maxIntrinsicWidth;
      this[_alphabeticBaseline] = alphabeticBaseline;
      this[_ideographicBaseline] = ideographicBaseline;
      this[_webOnlyIsSingleLine] = isSingleLine;
      this[_webOnlyIsLaidOut] = true;
    }
    get webOnlyDrawOnCanvas() {
      return dart.test(this[_webOnlyIsSingleLine]) && this[_plainText] != null && this[_paragraphGeometricStyle].ellipsis == null && this[_paragraphGeometricStyle].decoration == null && this[_paragraphGeometricStyle].letterSpacing == null && this[_paragraphGeometricStyle].wordSpacing == null && this[_background] == null;
    }
    get webOnlyIsLaidOut() {
      return this[_webOnlyIsLaidOut];
    }
    webOnlyDebugHasSameRootStyle(style) {
      if (!dart.test(dart.fn(() => {
        if (!dart.equals(style, this[_paragraphGeometricStyle])) {
          dart.throw(core.Exception.new("Attempted to measure a paragraph whose style is " + "different from the style of the ruler used to measure it."));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed();
      return true;
    }
    getBoxesForRange(start, end, opts) {
      let boxHeightStyle = opts && 'boxHeightStyle' in opts ? opts.boxHeightStyle : ui.BoxHeightStyle.tight;
      let boxWidthStyle = opts && 'boxWidthStyle' in opts ? opts.boxWidthStyle : ui.BoxWidthStyle.tight;
      if (!(boxHeightStyle != null)) dart.assertFailed();
      if (!(boxWidthStyle != null)) dart.assertFailed();
      return this[_getBoxesForRange](start, end, boxHeightStyle.index, boxWidthStyle.index);
    }
    [_getBoxesForRange](start, end, boxHeightStyle, boxWidthStyle) {
      if (this[_plainText] == null) {
        return JSArrayOfTextBox().of([]);
      }
      let length = this[_plainText].length;
      if (dart.notNull(start) < 0 || dart.notNull(end) < 0 || dart.notNull(start) > length || dart.notNull(end) > length) {
        return JSArrayOfTextBox().of([]);
      }
      return src__engine.TextMeasurementService.instance.measureBoxesForRange(this, this[_lastUsedConstraints], {start: start, end: end, alignOffset: this.webOnlyAlignOffset, textDirection: this[_textDirection]});
    }
    [_cloneWithText](plainText) {
      return new ui.Paragraph.__({plainText: plainText, paragraphElement: html.HtmlElement._check(this[_paragraphElement][$clone](true)), paragraphGeometricStyle: this[_paragraphGeometricStyle], paint: this[_paint], textAlign: this[_textAlign], textDirection: this[_textDirection], background: this[_background]});
    }
    getPositionForOffset(offset) {
      if (this[_plainText] == null) {
        return new ui.TextPosition.new({offset: 0});
      }
      let dx = dart.notNull(offset.dx) - dart.notNull(this.webOnlyAlignOffset);
      let instance = src__engine.TextMeasurementService.instance;
      const _measureSingleLineWidth = text => {
        if (this[_paragraphGeometricStyle].letterSpacing != null || this[_paragraphGeometricStyle].wordSpacing != null || this[_paragraphGeometricStyle].decoration != null) {
          return instance.measureSingleLineText(this[_cloneWithText](text)).width;
        } else {
          return instance.measureSingleLineWidth(text, this[_paragraphGeometricStyle]);
        }
      };
      dart.fn(_measureSingleLineWidth, StringTodouble());
      let low = 0;
      let high = this[_plainText].length;
      do {
        let current = ((low + high) / 2)[$truncate]();
        let width = _measureSingleLineWidth(this[_plainText][$substring](0, current));
        if (dart.notNull(width) < dx) {
          low = current;
        } else if (dart.notNull(width) > dx) {
          high = current;
        } else {
          low = high = current;
        }
      } while (high - low > 1);
      if (low === high) {
        return new ui.TextPosition.new({offset: high, affinity: ui.TextAffinity.upstream});
      }
      let lowWidth = _measureSingleLineWidth(this[_plainText][$substring](0, low));
      let highWidth = _measureSingleLineWidth(this[_plainText][$substring](0, high));
      if (dx - dart.notNull(lowWidth) < dart.notNull(highWidth) - dx) {
        return new ui.TextPosition.new({offset: low, affinity: ui.TextAffinity.downstream});
      } else {
        return new ui.TextPosition.new({offset: high, affinity: ui.TextAffinity.upstream});
      }
    }
    getWordBoundary(offset) {
      if (this[_plainText] == null) {
        return JSArrayOfint().of([offset, offset]);
      }
      let start = src__engine.WordBreaker.prevBreakIndex(this[_plainText], offset);
      let end = src__engine.WordBreaker.nextBreakIndex(this[_plainText], offset);
      return JSArrayOfint().of([start, end]);
    }
  };
  (ui.Paragraph.__ = function(opts) {
    let paragraphElement = opts && 'paragraphElement' in opts ? opts.paragraphElement : null;
    let paragraphGeometricStyle = opts && 'paragraphGeometricStyle' in opts ? opts.paragraphGeometricStyle : null;
    let plainText = opts && 'plainText' in opts ? opts.plainText : null;
    let paint = opts && 'paint' in opts ? opts.paint : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let background = opts && 'background' in opts ? opts.background : null;
    this[_width] = 0.0;
    this[_height] = 0.0;
    this[_lineHeight] = 0.0;
    this[_minIntrinsicWidth] = 0.0;
    this[_maxIntrinsicWidth] = 0.0;
    this[_alphabeticBaseline] = 0.0;
    this[_ideographicBaseline] = 0.0;
    this[_didExceedMaxLines] = false;
    this[_lastUsedConstraints] = null;
    this[webOnlyAlignOffset] = 0.0;
    this[_webOnlyIsSingleLine] = false;
    this[_webOnlyIsLaidOut] = false;
    if (!(plainText == null && paint == null || plainText != null && paint != null)) dart.assertFailed();
    this[_paragraphElement] = paragraphElement;
    this[_paragraphGeometricStyle] = paragraphGeometricStyle;
    this[_plainText] = plainText;
    this[_textAlign] = textAlign;
    this[_textDirection] = textDirection;
    this[_paint] = paint;
    this[_background] = background;
  }).prototype = ui.Paragraph.prototype;
  dart.addTypeTests(ui.Paragraph);
  const webOnlyAlignOffset = Symbol("Paragraph.webOnlyAlignOffset");
  dart.setMethodSignature(ui.Paragraph, () => ({
    __proto__: dart.getMethods(ui.Paragraph.__proto__),
    webOnlyGetParagraphElement: dart.fnType(html.HtmlElement, []),
    layout: dart.fnType(dart.void, [ui.ParagraphConstraints]),
    webOnlyGetParagraphGeometricStyle: dart.fnType(src__engine.ParagraphGeometricStyle, []),
    webOnlyGetPlainText: dart.fnType(core.String, []),
    webOnlyGetPaint: dart.fnType(ui.Paint, []),
    webOnlySetComputedLayout: dart.fnType(dart.void, [], {width: core.double, height: core.double, lineHeight: core.double, minIntrinsicWidth: core.double, maxIntrinsicWidth: core.double, alphabeticBaseline: core.double, ideographicBaseline: core.double, isSingleLine: core.bool}),
    webOnlyDebugHasSameRootStyle: dart.fnType(core.bool, [src__engine.ParagraphGeometricStyle]),
    getBoxesForRange: dart.fnType(core.List$(ui.TextBox), [core.int, core.int], {boxHeightStyle: ui.BoxHeightStyle, boxWidthStyle: ui.BoxWidthStyle}),
    [_getBoxesForRange]: dart.fnType(core.List$(ui.TextBox), [core.int, core.int, core.int, core.int]),
    [_cloneWithText]: dart.fnType(ui.Paragraph, [core.String]),
    getPositionForOffset: dart.fnType(ui.TextPosition, [ui.Offset]),
    getWordBoundary: dart.fnType(core.List$(core.int), [core.int])
  }));
  dart.setGetterSignature(ui.Paragraph, () => ({
    __proto__: dart.getGetters(ui.Paragraph.__proto__),
    width: core.double,
    height: core.double,
    minIntrinsicWidth: core.double,
    maxIntrinsicWidth: core.double,
    alphabeticBaseline: core.double,
    ideographicBaseline: core.double,
    didExceedMaxLines: core.bool,
    webOnlyMaxLinesHeight: core.double,
    webOnlyDrawOnCanvas: core.bool,
    webOnlyIsLaidOut: core.bool
  }));
  dart.setFieldSignature(ui.Paragraph, () => ({
    __proto__: dart.getFields(ui.Paragraph.__proto__),
    [_paragraphElement]: dart.finalFieldType(html.HtmlElement),
    [_paragraphGeometricStyle]: dart.finalFieldType(src__engine.ParagraphGeometricStyle),
    [_plainText]: dart.finalFieldType(core.String),
    [_paint]: dart.finalFieldType(ui.Paint),
    [_textAlign]: dart.finalFieldType(ui.TextAlign),
    [_textDirection]: dart.finalFieldType(ui.TextDirection),
    [_background]: dart.finalFieldType(ui.Paint),
    [_width]: dart.fieldType(core.double),
    [_height]: dart.fieldType(core.double),
    [_lineHeight]: dart.fieldType(core.double),
    [_minIntrinsicWidth]: dart.fieldType(core.double),
    [_maxIntrinsicWidth]: dart.fieldType(core.double),
    [_alphabeticBaseline]: dart.fieldType(core.double),
    [_ideographicBaseline]: dart.fieldType(core.double),
    [_didExceedMaxLines]: dart.fieldType(core.bool),
    [_lastUsedConstraints]: dart.fieldType(ui.ParagraphConstraints),
    webOnlyAlignOffset: dart.fieldType(core.double),
    [_webOnlyIsSingleLine]: dart.fieldType(core.bool),
    [_webOnlyIsLaidOut]: dart.fieldType(core.bool)
  }));
  const _paragraphStyle = dart.privateName(ui, "_paragraphStyle");
  const _ops = dart.privateName(ui, "_ops");
  const _tryBuildPlainText = dart.privateName(ui, "_tryBuildPlainText");
  const _buildRichText = dart.privateName(ui, "_buildRichText");
  ui.ParagraphBuilder = class ParagraphBuilder extends core.Object {
    pushStyle(style) {
      this[_ops][$add](style);
    }
    pop() {
      this[_ops][$add](ui.ParagraphBuilder._paragraphBuilderPop);
    }
    addText(text) {
      this[_ops][$add](text);
    }
    build() {
      let l = this[_tryBuildPlainText]();
      return l != null ? l : this[_buildRichText]();
    }
    [_tryBuildPlainText]() {
      let color = null;
      let decoration = null;
      let decorationColor = null;
      let decorationStyle = null;
      let fontWeight = this[_paragraphStyle][_fontWeight];
      let fontStyle = this[_paragraphStyle][_fontStyle];
      let textBaseline = null;
      let fontFamily = this[_paragraphStyle][_fontFamily];
      let fontSize = this[_paragraphStyle][_fontSize];
      let textAlign = this[_paragraphStyle][_textAlign];
      let textDirection = this[_paragraphStyle][_textDirection];
      let letterSpacing = null;
      let wordSpacing = null;
      let height = null;
      let locale = this[_paragraphStyle][_locale];
      let background = null;
      let foreground = null;
      let i = 0;
      while (i < dart.notNull(this[_ops][$length]) && ui.TextStyle.is(this[_ops][$_get](i))) {
        let style = ui.TextStyle._check(this[_ops][$_get](i));
        if (style[_color] != null) {
          color = style[_color];
        }
        if (style[_decoration] != null) {
          decoration = style[_decoration];
        }
        if (style[_decorationColor] != null) {
          decorationColor = style[_decorationColor];
        }
        if (style[_decorationStyle] != null) {
          decorationStyle = style[_decorationStyle];
        }
        if (style[_fontWeight] != null) {
          fontWeight = style[_fontWeight];
        }
        if (style[_fontStyle] != null) {
          fontStyle = style[_fontStyle];
        }
        if (style[_textBaseline] != null) {
          textBaseline = style[_textBaseline];
        }
        if (style[_fontFamily] != null) {
          fontFamily = style[_fontFamily];
        }
        if (style[_fontSize] != null) {
          fontSize = style[_fontSize];
        }
        if (style[_letterSpacing] != null) {
          letterSpacing = style[_letterSpacing];
        }
        if (style[_wordSpacing] != null) {
          wordSpacing = style[_wordSpacing];
        }
        if (style[_height] != null) {
          height = style[_height];
        }
        if (style[_locale] != null) {
          locale = style[_locale];
        }
        if (style[_background] != null) {
          background = style[_background];
        }
        if (style[_foreground] != null) {
          foreground = style[_foreground];
        }
        i++;
      }
      let cumulativeStyle = new ui.TextStyle.new({color: color, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, fontWeight: fontWeight, fontStyle: fontStyle, textBaseline: textBaseline, fontFamily: fontFamily, fontSize: fontSize, letterSpacing: letterSpacing, wordSpacing: wordSpacing, height: height, locale: locale, background: background, foreground: foreground});
      let paint = null;
      if (foreground != null) {
        paint = foreground;
      } else {
        paint = new ui.Paint.new();
        if (color != null) {
          paint.color = color;
        }
      }
      if (i >= dart.notNull(this[_ops][$length])) {
        ui.applyTextStyleToElement({element: this[_paragraphElement], style: cumulativeStyle});
        return new ui.Paragraph.__({paragraphElement: this[_paragraphElement], paragraphGeometricStyle: new src__engine.ParagraphGeometricStyle.new({fontFamily: fontFamily, fontWeight: fontWeight, fontStyle: fontStyle, fontSize: fontSize, lineHeight: height, maxLines: this[_paragraphStyle][_maxLines], letterSpacing: letterSpacing, wordSpacing: wordSpacing, decoration: ui._textDecorationToCssString(decoration, decorationStyle), ellipsis: this[_paragraphStyle][_ellipsis]}), plainText: "", paint: paint, textAlign: textAlign, textDirection: textDirection, background: cumulativeStyle[_background]});
      }
      if (!(typeof this[_ops][$_get](i) == 'string')) {
        return null;
      }
      let plainTextBuffer = new core.StringBuffer.new();
      while (i < dart.notNull(this[_ops][$length]) && typeof this[_ops][$_get](i) == 'string') {
        plainTextBuffer.write(this[_ops][$_get](i));
        i++;
      }
      for (; i < dart.notNull(this[_ops][$length]); i++) {
        if (!dart.equals(this[_ops][$_get](i), ui.ParagraphBuilder._paragraphBuilderPop)) {
          return null;
        }
      }
      let plainText = plainTextBuffer.toString();
      src__engine.domRenderer.appendText(this[_paragraphElement], plainText);
      ui.applyTextStyleToElement({element: this[_paragraphElement], style: cumulativeStyle});
      if (cumulativeStyle[_background] != null) {
        ui.applyTextBackgroundToElement({element: this[_paragraphElement], style: cumulativeStyle});
      }
      return new ui.Paragraph.__({paragraphElement: this[_paragraphElement], paragraphGeometricStyle: new src__engine.ParagraphGeometricStyle.new({fontFamily: fontFamily, fontWeight: fontWeight, fontStyle: fontStyle, fontSize: fontSize, lineHeight: height, maxLines: this[_paragraphStyle][_maxLines], letterSpacing: letterSpacing, wordSpacing: wordSpacing, decoration: ui._textDecorationToCssString(decoration, decorationStyle), ellipsis: this[_paragraphStyle][_ellipsis]}), plainText: plainText, paint: paint, textAlign: textAlign, textDirection: textDirection, background: cumulativeStyle[_background]});
    }
    [_buildRichText]() {
      let elementStack = [];
      const currentElement = () => {
        return dart.test(elementStack[$isNotEmpty]) ? elementStack[$last] : this[_paragraphElement];
      };
      dart.fn(currentElement, VoidTodynamic());
      for (let i = 0; i < dart.notNull(this[_ops][$length]); i++) {
        let op = this[_ops][$_get](i);
        if (ui.TextStyle.is(op)) {
          let span = src__engine.domRenderer.createElement("span");
          ui.applyTextStyleToElement({element: html.HtmlElement._check(span), style: op});
          if (op[_background] != null) {
            ui.applyTextBackgroundToElement({element: html.HtmlElement._check(span), style: op});
          }
          src__engine.domRenderer.append(html.Element._check(currentElement()), span);
          elementStack[$add](span);
        } else if (typeof op == 'string') {
          src__engine.domRenderer.appendText(html.Element._check(currentElement()), op);
        } else if (core.identical(op, ui.ParagraphBuilder._paragraphBuilderPop)) {
          elementStack[$removeLast]();
        } else {
          dart.throw(new core.UnsupportedError.new("Unsupported ParagraphBuilder operation: " + dart.str(op)));
        }
      }
      return new ui.Paragraph.__({paragraphElement: this[_paragraphElement], paragraphGeometricStyle: new src__engine.ParagraphGeometricStyle.new({fontFamily: this[_paragraphStyle][_fontFamily], fontWeight: this[_paragraphStyle][_fontWeight], fontStyle: this[_paragraphStyle][_fontStyle], fontSize: this[_paragraphStyle][_fontSize], lineHeight: this[_paragraphStyle][_height], maxLines: this[_paragraphStyle][_maxLines], ellipsis: this[_paragraphStyle][_ellipsis]}), plainText: null, paint: null, textAlign: this[_paragraphStyle][_textAlign], textDirection: this[_paragraphStyle][_textDirection], background: null});
    }
  };
  (ui.ParagraphBuilder.new = function(style) {
    this[_paragraphElement] = html.HtmlElement._check(src__engine.domRenderer.createElement("p"));
    this[_ops] = [];
    this[_paragraphStyle] = style;
    let strutFontFamilies = null;
    if (style[_strutStyle] != null) {
      strutFontFamilies = JSArrayOfString().of([]);
      if (style[_strutStyle][_fontFamily] != null) strutFontFamilies[$add](style[_strutStyle][_fontFamily]);
      if (style[_strutStyle][_fontFamilyFallback] != null) strutFontFamilies[$addAll](style[_strutStyle][_fontFamilyFallback]);
    }
    ui.applyParagraphStyleToElement({element: this[_paragraphElement], style: this[_paragraphStyle]});
  }).prototype = ui.ParagraphBuilder.prototype;
  dart.addTypeTests(ui.ParagraphBuilder);
  dart.setMethodSignature(ui.ParagraphBuilder, () => ({
    __proto__: dart.getMethods(ui.ParagraphBuilder.__proto__),
    pushStyle: dart.fnType(dart.void, [ui.TextStyle]),
    pop: dart.fnType(dart.void, []),
    addText: dart.fnType(dart.void, [core.String]),
    build: dart.fnType(ui.Paragraph, []),
    [_tryBuildPlainText]: dart.fnType(ui.Paragraph, []),
    [_buildRichText]: dart.fnType(ui.Paragraph, [])
  }));
  dart.setFieldSignature(ui.ParagraphBuilder, () => ({
    __proto__: dart.getFields(ui.ParagraphBuilder.__proto__),
    [_paragraphElement]: dart.finalFieldType(html.HtmlElement),
    [_paragraphStyle]: dart.finalFieldType(ui.ParagraphStyle),
    [_ops]: dart.finalFieldType(core.List)
  }));
  dart.defineLazy(ui.ParagraphBuilder, {
    /*ui.ParagraphBuilder._paragraphBuilderPop*/get _paragraphBuilderPop() {
      return new core.Object.new();
    }
  });
  ui.applyTextBackgroundToElement = function(opts) {
    let element = opts && 'element' in opts ? opts.element : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let previousStyle = opts && 'previousStyle' in opts ? opts.previousStyle : null;
    let newBackground = style[_background];
    if (previousStyle == null) {
      if (newBackground != null) {
        src__engine.domRenderer.setElementStyle(element, "background-color", newBackground.color.toCssString());
      }
    } else {
      if (!dart.equals(newBackground, previousStyle[_background])) {
        src__engine.domRenderer.setElementStyle(element, "background-color", (() => {
          let t = newBackground.color;
          return t == null ? null : t.toCssString();
        })());
      }
    }
  };
  ui.applyTextStyleToElement = function(opts) {
    let element = opts && 'element' in opts ? opts.element : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let previousStyle = opts && 'previousStyle' in opts ? opts.previousStyle : null;
    if (!(element != null)) dart.assertFailed();
    if (!(style != null)) dart.assertFailed();
    let updateDecoration = false;
    let cssStyle = element.style;
    if (previousStyle == null) {
      let color = style[_color];
      if ((style[_foreground] == null ? null : style[_foreground].color) != null) color = style[_foreground].color;
      if (color != null) {
        cssStyle[$color] = color.toCssString();
      }
      if (style[_fontSize] != null) {
        cssStyle[$fontSize] = dart.str(style[_fontSize][$floor]()) + "px";
      }
      if (style[_fontWeight] != null) {
        cssStyle[$fontWeight] = ui.webOnlyFontWeightToCss(style[_fontWeight]);
      }
      if (style[_fontStyle] != null) {
        cssStyle[$fontStyle] = style[_fontStyle] === ui.FontStyle.normal ? "normal" : "italic";
      }
      if (style[_effectiveFontFamily] != null) {
        cssStyle[$fontFamily] = style[_effectiveFontFamily];
      }
      if (style[_letterSpacing] != null) {
        cssStyle[$letterSpacing] = dart.str(style[_letterSpacing]) + "px";
      }
      if (style[_wordSpacing] != null) {
        cssStyle[$wordSpacing] = dart.str(style[_wordSpacing]) + "px";
      }
      if (style[_decoration] != null) {
        updateDecoration = true;
      }
    } else {
      if (!dart.equals(style[_color], previousStyle[_color]) || !dart.equals(style[_foreground], previousStyle[_foreground])) {
        let color = style[_color];
        if ((style[_foreground] == null ? null : style[_foreground].color) != null) {
          color = style[_foreground].color;
        }
        cssStyle[$color] = color == null ? null : color.toCssString();
      }
      if (style[_fontSize] != previousStyle[_fontSize]) {
        cssStyle[$fontSize] = style[_fontSize] != null ? dart.str(style[_fontSize][$floor]()) + "px" : null;
      }
      if (!dart.equals(style[_fontWeight], previousStyle[_fontWeight])) {
        cssStyle[$fontWeight] = ui.webOnlyFontWeightToCss(style[_fontWeight]);
      }
      if (style[_fontStyle] != previousStyle[_fontStyle]) {
        cssStyle[$fontStyle] = style[_fontStyle] != null ? style[_fontStyle] === ui.FontStyle.normal ? "normal" : "italic" : null;
      }
      if (style[_fontFamily] != previousStyle[_fontFamily]) {
        cssStyle[$fontFamily] = style[_fontFamily];
      }
      if (style[_letterSpacing] != previousStyle[_letterSpacing]) {
        cssStyle[$letterSpacing] = dart.str(style[_letterSpacing]) + "px";
      }
      if (style[_wordSpacing] != previousStyle[_wordSpacing]) {
        cssStyle[$wordSpacing] = dart.str(style[_wordSpacing]) + "px";
      }
      if (!dart.equals(style[_decoration], previousStyle[_decoration]) || style[_decorationStyle] != previousStyle[_decorationStyle] || !dart.equals(style[_decorationColor], previousStyle[_decorationColor])) {
        updateDecoration = true;
      }
    }
    if (updateDecoration) {
      if (style[_decoration] != null) {
        let textDecoration = ui._textDecorationToCssString(style[_decoration], style[_decorationStyle]);
        if (textDecoration != null) {
          cssStyle[$textDecoration] = textDecoration;
          let decorationColor = style[_decorationColor];
          if (decorationColor != null) {
            cssStyle[$textDecorationColor] = decorationColor.toCssString();
          }
        }
      }
    }
  };
  ui._textDecorationToCssString = function(decoration, decorationStyle) {
    let decorations = new core.StringBuffer.new();
    if (decoration != null) {
      if (dart.test(decoration.contains(ui.TextDecoration.underline))) {
        decorations.write("underline ");
      }
      if (dart.test(decoration.contains(ui.TextDecoration.overline))) {
        decorations.write("overline ");
      }
      if (dart.test(decoration.contains(ui.TextDecoration.lineThrough))) {
        decorations.write("line-through ");
      }
    }
    if (decorationStyle != null) {
      decorations.write(ui._decorationStyleToCssString(decorationStyle));
    }
    return dart.test(decorations.isEmpty) ? null : decorations.toString();
  };
  ui._decorationStyleToCssString = function(decorationStyle) {
    switch (decorationStyle) {
      case ui.TextDecorationStyle.dashed:
      {
        return "dashed";
      }
      case ui.TextDecorationStyle.dotted:
      {
        return "dotted";
      }
      case ui.TextDecorationStyle.double:
      {
        return "double";
      }
      case ui.TextDecorationStyle.solid:
      {
        return "solid";
      }
      case ui.TextDecorationStyle.wavy:
      {
        return "wavy";
      }
      default:
      {
        return null;
      }
    }
  };
  ui.applyParagraphStyleToElement = function(opts) {
    let element = opts && 'element' in opts ? opts.element : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let previousStyle = opts && 'previousStyle' in opts ? opts.previousStyle : null;
    if (!(element != null)) dart.assertFailed();
    if (!(style != null)) dart.assertFailed();
    let cssStyle = element.style;
    if (previousStyle == null) {
      if (style[_textAlign] != null) {
        cssStyle[$textAlign] = ui.textAlignToCssValue(style[_textAlign], style[_textDirection] != null ? style[_textDirection] : ui.TextDirection.ltr);
      }
      if (style[_webOnlyLineHeight] != null) {
        cssStyle[$lineHeight] = dart.str(style[_webOnlyLineHeight]);
      }
      if (style[_textDirection] != null) {
        cssStyle[$direction] = ui.textDirectionToCssValue(style[_textDirection]);
      }
      if (style[_fontSize] != null) {
        cssStyle[$fontSize] = dart.str(style[_fontSize][$floor]()) + "px";
      }
      if (style[_fontWeight] != null) {
        cssStyle[$fontWeight] = ui.webOnlyFontWeightToCss(style[_fontWeight]);
      }
      if (style[_fontStyle] != null) {
        cssStyle[$fontStyle] = style[_fontStyle] === ui.FontStyle.normal ? "normal" : "italic";
      }
      if (style[_effectiveFontFamily] != null) {
        cssStyle[$fontFamily] = style[_effectiveFontFamily];
      }
    } else {
      if (style[_textAlign] != previousStyle[_textAlign]) {
        cssStyle[$textAlign] = ui.textAlignToCssValue(style[_textAlign], style[_textDirection] != null ? style[_textDirection] : ui.TextDirection.ltr);
      }
      if (style[_webOnlyLineHeight] != style[_webOnlyLineHeight]) {
        cssStyle[$lineHeight] = dart.str(style[_webOnlyLineHeight]);
      }
      if (style[_textDirection] != previousStyle[_textDirection]) {
        cssStyle[$direction] = ui.textDirectionToCssValue(style[_textDirection]);
      }
      if (style[_fontSize] != previousStyle[_fontSize]) {
        cssStyle[$fontSize] = style[_fontSize] != null ? dart.str(style[_fontSize][$floor]()) + "px" : null;
      }
      if (!dart.equals(style[_fontWeight], previousStyle[_fontWeight])) {
        cssStyle[$fontWeight] = ui.webOnlyFontWeightToCss(style[_fontWeight]);
      }
      if (style[_fontStyle] != previousStyle[_fontStyle]) {
        cssStyle[$fontStyle] = style[_fontStyle] != null ? style[_fontStyle] === ui.FontStyle.normal ? "normal" : "italic" : null;
      }
      if (style[_fontFamily] != previousStyle[_fontFamily]) {
        cssStyle[$fontFamily] = style[_fontFamily];
      }
    }
  };
  ui.webOnlyFontWeightToCss = function(fontWeight) {
    if (fontWeight == null) {
      return null;
    }
    switch (fontWeight.index) {
      case 0:
      {
        return "100";
      }
      case 1:
      {
        return "200";
      }
      case 2:
      {
        return "300";
      }
      case 3:
      {
        return "normal";
      }
      case 4:
      {
        return "500";
      }
      case 5:
      {
        return "600";
      }
      case 6:
      {
        return "bold";
      }
      case 7:
      {
        return "800";
      }
      case 8:
      {
        return "900";
      }
    }
    if (!dart.dassert(dart.fn(() => {
      dart.throw(new core.AssertionError.new("Failed to convert font weight " + dart.str(fontWeight) + " to CSS."));
    }, VoidToNull())())) dart.assertFailed();
    return "";
  };
  ui.loadFontFromList = function(list, opts) {
    let fontFamily = opts && 'fontFamily' in opts ? opts.fontFamily : null;
    if (dart.test(src__engine.assertionsEnabled)) {
      dart.throw(new core.UnsupportedError.new("loadFontFromList is not supported."));
    }
    return FutureOfvoid().value(null);
  };
  ui.TileMode = class TileMode extends core.Object {
    toString() {
      return {
        0: "TileMode.clamp",
        1: "TileMode.repeated",
        2: "TileMode.mirror"
      }[this.index];
    }
  };
  (ui.TileMode.new = function(x) {
    this.index = x;
  }).prototype = ui.TileMode.prototype;
  dart.addTypeTests(ui.TileMode);
  dart.setFieldSignature(ui.TileMode, () => ({
    __proto__: dart.getFields(ui.TileMode.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.TileMode, ['toString']);
  ui.TileMode.clamp = dart.const(new ui.TileMode.new(0));
  ui.TileMode.repeated = dart.const(new ui.TileMode.new(1));
  ui.TileMode.mirror = dart.const(new ui.TileMode.new(2));
  ui.TileMode.values = dart.constList([ui.TileMode.clamp, ui.TileMode.repeated, ui.TileMode.mirror], ui.TileMode);
  dart.defineLazy(ui, {
    /*ui._debugPrintPlatformMessages*/get _debugPrintPlatformMessages() {
      return false;
    }
  });
  ui.AppLifecycleState = class AppLifecycleState extends core.Object {
    toString() {
      return {
        0: "AppLifecycleState.resumed",
        1: "AppLifecycleState.inactive",
        2: "AppLifecycleState.paused",
        3: "AppLifecycleState.suspending"
      }[this.index];
    }
  };
  (ui.AppLifecycleState.new = function(x) {
    this.index = x;
  }).prototype = ui.AppLifecycleState.prototype;
  dart.addTypeTests(ui.AppLifecycleState);
  dart.setFieldSignature(ui.AppLifecycleState, () => ({
    __proto__: dart.getFields(ui.AppLifecycleState.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.AppLifecycleState, ['toString']);
  ui.AppLifecycleState.resumed = dart.const(new ui.AppLifecycleState.new(0));
  ui.AppLifecycleState.inactive = dart.const(new ui.AppLifecycleState.new(1));
  ui.AppLifecycleState.paused = dart.const(new ui.AppLifecycleState.new(2));
  ui.AppLifecycleState.suspending = dart.const(new ui.AppLifecycleState.new(3));
  ui.AppLifecycleState.values = dart.constList([ui.AppLifecycleState.resumed, ui.AppLifecycleState.inactive, ui.AppLifecycleState.paused, ui.AppLifecycleState.suspending], ui.AppLifecycleState);
  ui.WindowPadding = class WindowPadding extends core.Object {
    get left() {
      return this[left$2];
    }
    set left(value) {
      super.left = value;
    }
    get top() {
      return this[top$2];
    }
    set top(value) {
      super.top = value;
    }
    get right() {
      return this[right$2];
    }
    set right(value) {
      super.right = value;
    }
    get bottom() {
      return this[bottom$2];
    }
    set bottom(value) {
      super.bottom = value;
    }
  };
  (ui.WindowPadding.__ = function(opts) {
    let left = opts && 'left' in opts ? opts.left : null;
    let top = opts && 'top' in opts ? opts.top : null;
    let right = opts && 'right' in opts ? opts.right : null;
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    this[left$2] = left;
    this[top$2] = top;
    this[right$2] = right;
    this[bottom$2] = bottom;
  }).prototype = ui.WindowPadding.prototype;
  dart.addTypeTests(ui.WindowPadding);
  const left$2 = Symbol("WindowPadding.left");
  const top$2 = Symbol("WindowPadding.top");
  const right$2 = Symbol("WindowPadding.right");
  const bottom$2 = Symbol("WindowPadding.bottom");
  dart.setFieldSignature(ui.WindowPadding, () => ({
    __proto__: dart.getFields(ui.WindowPadding.__proto__),
    left: dart.finalFieldType(core.double),
    top: dart.finalFieldType(core.double),
    right: dart.finalFieldType(core.double),
    bottom: dart.finalFieldType(core.double)
  }));
  dart.defineLazy(ui.WindowPadding, {
    /*ui.WindowPadding.zero*/get zero() {
      return dart.const(new ui.WindowPadding.__({left: 0.0, top: 0.0, right: 0.0, bottom: 0.0}));
    }
  });
  const _languageCode = dart.privateName(ui, "_languageCode");
  const _countryCode = dart.privateName(ui, "_countryCode");
  ui.Locale = class Locale extends core.Object {
    get languageCode() {
      return ui.Locale._replaceDeprecatedLanguageSubtag(this[_languageCode]);
    }
    static _replaceDeprecatedLanguageSubtag(languageCode) {
      switch (languageCode) {
        case "in":
        {
          return "id";
        }
        case "iw":
        {
          return "he";
        }
        case "ji":
        {
          return "yi";
        }
        case "jw":
        {
          return "jv";
        }
        case "mo":
        {
          return "ro";
        }
        case "aam":
        {
          return "aas";
        }
        case "adp":
        {
          return "dz";
        }
        case "aue":
        {
          return "ktz";
        }
        case "ayx":
        {
          return "nun";
        }
        case "bgm":
        {
          return "bcg";
        }
        case "bjd":
        {
          return "drl";
        }
        case "ccq":
        {
          return "rki";
        }
        case "cjr":
        {
          return "mom";
        }
        case "cka":
        {
          return "cmr";
        }
        case "cmk":
        {
          return "xch";
        }
        case "coy":
        {
          return "pij";
        }
        case "cqu":
        {
          return "quh";
        }
        case "drh":
        {
          return "khk";
        }
        case "drw":
        {
          return "prs";
        }
        case "gav":
        {
          return "dev";
        }
        case "gfx":
        {
          return "vaj";
        }
        case "ggn":
        {
          return "gvr";
        }
        case "gti":
        {
          return "nyc";
        }
        case "guv":
        {
          return "duz";
        }
        case "hrr":
        {
          return "jal";
        }
        case "ibi":
        {
          return "opa";
        }
        case "ilw":
        {
          return "gal";
        }
        case "jeg":
        {
          return "oyb";
        }
        case "kgc":
        {
          return "tdf";
        }
        case "kgh":
        {
          return "kml";
        }
        case "koj":
        {
          return "kwv";
        }
        case "krm":
        {
          return "bmf";
        }
        case "ktr":
        {
          return "dtp";
        }
        case "kvs":
        {
          return "gdj";
        }
        case "kwq":
        {
          return "yam";
        }
        case "kxe":
        {
          return "tvd";
        }
        case "kzj":
        {
          return "dtp";
        }
        case "kzt":
        {
          return "dtp";
        }
        case "lii":
        {
          return "raq";
        }
        case "lmm":
        {
          return "rmx";
        }
        case "meg":
        {
          return "cir";
        }
        case "mst":
        {
          return "mry";
        }
        case "mwj":
        {
          return "vaj";
        }
        case "myt":
        {
          return "mry";
        }
        case "nad":
        {
          return "xny";
        }
        case "ncp":
        {
          return "kdz";
        }
        case "nnx":
        {
          return "ngv";
        }
        case "nts":
        {
          return "pij";
        }
        case "oun":
        {
          return "vaj";
        }
        case "pcr":
        {
          return "adx";
        }
        case "pmc":
        {
          return "huw";
        }
        case "pmu":
        {
          return "phr";
        }
        case "ppa":
        {
          return "bfy";
        }
        case "ppr":
        {
          return "lcq";
        }
        case "pry":
        {
          return "prt";
        }
        case "puz":
        {
          return "pub";
        }
        case "sca":
        {
          return "hle";
        }
        case "skk":
        {
          return "oyb";
        }
        case "tdu":
        {
          return "dtp";
        }
        case "thc":
        {
          return "tpo";
        }
        case "thx":
        {
          return "oyb";
        }
        case "tie":
        {
          return "ras";
        }
        case "tkk":
        {
          return "twm";
        }
        case "tlw":
        {
          return "weo";
        }
        case "tmp":
        {
          return "tyj";
        }
        case "tne":
        {
          return "kak";
        }
        case "tnf":
        {
          return "prs";
        }
        case "tsf":
        {
          return "taj";
        }
        case "uok":
        {
          return "ema";
        }
        case "xba":
        {
          return "cax";
        }
        case "xia":
        {
          return "acn";
        }
        case "xkh":
        {
          return "waw";
        }
        case "xsj":
        {
          return "suj";
        }
        case "ybd":
        {
          return "rki";
        }
        case "yma":
        {
          return "lrr";
        }
        case "ymt":
        {
          return "mtm";
        }
        case "yos":
        {
          return "zom";
        }
        case "yuu":
        {
          return "yug";
        }
        default:
        {
          return languageCode;
        }
      }
    }
    get scriptCode() {
      return this[scriptCode$];
    }
    set scriptCode(value) {
      super.scriptCode = value;
    }
    get countryCode() {
      return ui.Locale._replaceDeprecatedRegionSubtag(this[_countryCode]);
    }
    static _replaceDeprecatedRegionSubtag(regionCode) {
      switch (regionCode) {
        case "BU":
        {
          return "MM";
        }
        case "DD":
        {
          return "DE";
        }
        case "FX":
        {
          return "FR";
        }
        case "TP":
        {
          return "TL";
        }
        case "YD":
        {
          return "YE";
        }
        case "ZR":
        {
          return "CD";
        }
        default:
        {
          return regionCode;
        }
      }
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!ui.Locale.is(other)) return false;
      let typedOther = ui.Locale._check(other);
      return this.languageCode == typedOther.languageCode && this.scriptCode == typedOther.scriptCode && this.countryCode == typedOther.countryCode;
    }
    get hashCode() {
      return ui.hashValues(this.languageCode, this.scriptCode, this.countryCode);
    }
    toString() {
      let out = new core.StringBuffer.new(this.languageCode);
      if (this.scriptCode != null) out.write("_" + dart.str(this.scriptCode));
      if (this[_countryCode] != null) out.write("_" + dart.str(this.countryCode));
      return out.toString();
    }
  };
  (ui.Locale.new = function(languageCode, countryCode) {
    if (countryCode === void 0) countryCode = null;
    this[_languageCode] = languageCode;
    this[_countryCode] = countryCode;
    if (!(languageCode != null)) dart.assertFailed();
    if (!(languageCode !== "")) dart.assertFailed();
    this[scriptCode$] = null;
  }).prototype = ui.Locale.prototype;
  (ui.Locale.fromSubtags = function(opts) {
    let languageCode = opts && 'languageCode' in opts ? opts.languageCode : "und";
    let scriptCode = opts && 'scriptCode' in opts ? opts.scriptCode : null;
    let countryCode = opts && 'countryCode' in opts ? opts.countryCode : null;
    this[scriptCode$] = scriptCode;
    if (!(languageCode != null)) dart.assertFailed();
    if (!(languageCode !== "")) dart.assertFailed();
    this[_languageCode] = languageCode;
    if (!(scriptCode !== "")) dart.assertFailed();
    if (!(countryCode !== "")) dart.assertFailed();
    this[_countryCode] = countryCode;
  }).prototype = ui.Locale.prototype;
  dart.addTypeTests(ui.Locale);
  const scriptCode$ = Symbol("Locale.scriptCode");
  dart.setGetterSignature(ui.Locale, () => ({
    __proto__: dart.getGetters(ui.Locale.__proto__),
    languageCode: core.String,
    countryCode: core.String
  }));
  dart.setFieldSignature(ui.Locale, () => ({
    __proto__: dart.getFields(ui.Locale.__proto__),
    [_languageCode]: dart.finalFieldType(core.String),
    scriptCode: dart.finalFieldType(core.String),
    [_countryCode]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(ui.Locale, ['_equals', 'toString']);
  dart.defineExtensionAccessors(ui.Locale, ['hashCode']);
  const _browserHistory = dart.privateName(ui, "_browserHistory");
  const _physicalSize = dart.privateName(ui, "_physicalSize");
  const _lastKnownWindowInnerWidth = dart.privateName(ui, "_lastKnownWindowInnerWidth");
  const _lastKnownWindowInnerHeight = dart.privateName(ui, "_lastKnownWindowInnerHeight");
  const _textScaleFactor = dart.privateName(ui, "_textScaleFactor");
  const _alwaysUse24HourFormat = dart.privateName(ui, "_alwaysUse24HourFormat");
  const _onTextScaleFactorChanged = dart.privateName(ui, "_onTextScaleFactorChanged");
  const _platformBrightness = dart.privateName(ui, "_platformBrightness");
  const _onPlatformBrightnessChanged = dart.privateName(ui, "_onPlatformBrightnessChanged");
  const _onMetricsChanged = dart.privateName(ui, "_onMetricsChanged");
  const _locales = dart.privateName(ui, "_locales");
  let const$5;
  const _onLocaleChanged = dart.privateName(ui, "_onLocaleChanged");
  const _onBeginFrame = dart.privateName(ui, "_onBeginFrame");
  const _onDrawFrame = dart.privateName(ui, "_onDrawFrame");
  const _onPointerDataPacket = dart.privateName(ui, "_onPointerDataPacket");
  const _onSemanticsEnabledChanged = dart.privateName(ui, "_onSemanticsEnabledChanged");
  const _onSemanticsAction = dart.privateName(ui, "_onSemanticsAction");
  const _onAccessibilityFeaturesChanged = dart.privateName(ui, "_onAccessibilityFeaturesChanged");
  const _onPlatformMessage = dart.privateName(ui, "_onPlatformMessage");
  const _accessibilityFeatures = dart.privateName(ui, "_accessibilityFeatures");
  const _rasterizer = dart.privateName(ui, "_rasterizer");
  const _replyToPlatformMessage = dart.privateName(ui, "_replyToPlatformMessage");
  let const$6;
  const _getHapticFeedbackDuration = dart.privateName(ui, "_getHapticFeedbackDuration");
  ui.Window = class Window extends core.Object {
    webOnlyBack() {
      return this[_browserHistory].back();
    }
    set webOnlyLocationStrategy(strategy) {
      this[_browserHistory].locationStrategy = strategy;
    }
    set webOnlyRouteName(routeName) {
      this[_browserHistory].setRouteName(routeName);
    }
    get devicePixelRatio() {
      return this[devicePixelRatio];
    }
    set devicePixelRatio(value) {
      this[devicePixelRatio] = value;
    }
    get physicalSize() {
      let override = false;
      if (!dart.test(dart.fn(() => {
        if (this.webOnlyDebugPhysicalSizeOverride != null) {
          this[_physicalSize] = this.webOnlyDebugPhysicalSizeOverride;
          override = true;
        }
        return true;
      }, VoidTobool())())) dart.assertFailed();
      if (!override) {
        let windowInnerWidth = html.window.innerWidth;
        let windowInnerHeight = html.window.innerHeight;
        if (windowInnerWidth != this[_lastKnownWindowInnerWidth] || windowInnerHeight != this[_lastKnownWindowInnerHeight]) {
          this[_lastKnownWindowInnerWidth] = windowInnerWidth;
          this[_lastKnownWindowInnerHeight] = windowInnerHeight;
          this[_physicalSize] = new ui.Size.new(windowInnerWidth[$toDouble](), windowInnerHeight[$toDouble]());
        }
      }
      return this[_physicalSize];
    }
    get webOnlyDebugPhysicalSizeOverride() {
      return this[webOnlyDebugPhysicalSizeOverride];
    }
    set webOnlyDebugPhysicalSizeOverride(value) {
      this[webOnlyDebugPhysicalSizeOverride] = value;
    }
    get viewInsets() {
      return this[viewInsets];
    }
    set viewInsets(value) {
      this[viewInsets] = value;
    }
    get padding() {
      return this[padding];
    }
    set padding(value) {
      this[padding] = value;
    }
    get textScaleFactor() {
      return this[_textScaleFactor];
    }
    get alwaysUse24HourFormat() {
      return this[_alwaysUse24HourFormat];
    }
    get onTextScaleFactorChanged() {
      return this[_onTextScaleFactorChanged];
    }
    set onTextScaleFactorChanged(callback) {
      this[_onTextScaleFactorChanged] = callback;
    }
    get platformBrightness() {
      return this[_platformBrightness];
    }
    get onPlatformBrightnessChanged() {
      return this[_onPlatformBrightnessChanged];
    }
    set onPlatformBrightnessChanged(callback) {
      this[_onPlatformBrightnessChanged] = callback;
    }
    get onMetricsChanged() {
      return this[_onMetricsChanged];
    }
    set onMetricsChanged(callback) {
      this[_onMetricsChanged] = callback;
    }
    get locale() {
      if (this[_locales] != null && dart.test(this[_locales][$isNotEmpty])) {
        return this[_locales][$first];
      }
      return null;
    }
    get locales() {
      return this[_locales];
    }
    get onLocaleChanged() {
      return this[_onLocaleChanged];
    }
    set onLocaleChanged(callback) {
      this[_onLocaleChanged] = callback;
    }
    get webOnlyScheduleFrameCallback() {
      return this[webOnlyScheduleFrameCallback];
    }
    set webOnlyScheduleFrameCallback(value) {
      this[webOnlyScheduleFrameCallback] = value;
    }
    scheduleFrame() {
      if (this.webOnlyScheduleFrameCallback == null) {
        dart.throw(core.Exception.new("webOnlyScheduleFrameCallback must be initialized first."));
      }
      this.webOnlyScheduleFrameCallback();
    }
    get onBeginFrame() {
      return this[_onBeginFrame];
    }
    set onBeginFrame(callback) {
      this[_onBeginFrame] = callback;
    }
    get onDrawFrame() {
      return this[_onDrawFrame];
    }
    set onDrawFrame(callback) {
      this[_onDrawFrame] = callback;
    }
    get onPointerDataPacket() {
      return this[_onPointerDataPacket];
    }
    set onPointerDataPacket(callback) {
      this[_onPointerDataPacket] = callback;
    }
    get defaultRouteName() {
      return this[_browserHistory].currentPath;
    }
    get semanticsEnabled() {
      return src__engine.EngineSemanticsOwner.instance.semanticsEnabled;
    }
    get onSemanticsEnabledChanged() {
      return this[_onSemanticsEnabledChanged];
    }
    set onSemanticsEnabledChanged(callback) {
      this[_onSemanticsEnabledChanged] = callback;
    }
    get onSemanticsAction() {
      return this[_onSemanticsAction];
    }
    set onSemanticsAction(callback) {
      this[_onSemanticsAction] = callback;
    }
    get onAccessibilityFeaturesChanged() {
      return this[_onAccessibilityFeaturesChanged];
    }
    set onAccessibilityFeaturesChanged(callback) {
      this[_onAccessibilityFeaturesChanged] = callback;
    }
    get onPlatformMessage() {
      return this[_onPlatformMessage];
    }
    set onPlatformMessage(callback) {
      this[_onPlatformMessage] = callback;
    }
    updateSemantics(update) {
      src__engine.EngineSemanticsOwner.instance.updateSemantics(update);
    }
    [_replyToPlatformMessage](callback, data) {
      FutureOfNull()._check(FutureOfvoid().delayed(core.Duration.zero).then(core.Null, dart.fn(_ => {
        callback(data);
      }, voidToNull())));
    }
    sendPlatformMessage(name, data, callback) {
      if (false) {
        core.print("Sent platform message on channel: \"" + dart.str(name) + "\"");
      }
      switch (name) {
        case "flutter/assets":
        {
          if (!(ui.webOnlyAssetManager != null)) dart.assertFailed();
          let url = convert.utf8.decode(data[$buffer][$asUint8List]());
          FutureOfNull()._check(ui.webOnlyAssetManager.load(url).then(core.Null, dart.fn(assetData => {
            this[_replyToPlatformMessage](callback, assetData);
          }, ByteDataToNull()), {onError: dart.fn(e => {
              html.window[$console].warn("Error while trying to load an asset: " + dart.str(e));
              this[_replyToPlatformMessage](callback, null);
            }, dynamicToNull())}));
          return;
        }
        case "flutter/platform":
        {
          let codec = const$6 || (const$6 = dart.const(new src__engine.JSONMethodCodec.new()));
          let decoded = codec.decodeMethodCall(data);
          switch (decoded.method) {
            case "SystemNavigator.pop":
            {
              FutureOfNull()._check(this[_browserHistory].exit().then(core.Null, dart.fn(_ => {
                this[_replyToPlatformMessage](callback, codec.encodeSuccessEnvelope(true));
              }, voidToNull())));
              return;
            }
            case "HapticFeedback.vibrate":
            {
              let type = core.String._check(decoded.arguments);
              src__engine.domRenderer.vibrate(this[_getHapticFeedbackDuration](type));
              return;
            }
            case "SystemChrome.setApplicationSwitcherDescription":
            {
              let arguments$0 = MapOfString$dynamic()._check(decoded.arguments);
              src__engine.domRenderer.setTitle(core.String._check(arguments$0[$_get]("label")));
              src__engine.domRenderer.setThemeColor(new ui.Color.new(core.int._check(arguments$0[$_get]("primaryColor"))));
            }
          }
          break;
        }
        case "flutter/textinput":
        {
          src__engine.textEditing.handleTextInput(data);
          break;
        }
      }
    }
    [_getHapticFeedbackDuration](type) {
      switch (type) {
        case "HapticFeedbackType.lightImpact":
        {
          return src__engine.DomRenderer.vibrateLightImpact;
        }
        case "HapticFeedbackType.mediumImpact":
        {
          return src__engine.DomRenderer.vibrateMediumImpact;
        }
        case "HapticFeedbackType.heavyImpact":
        {
          return src__engine.DomRenderer.vibrateHeavyImpact;
        }
        case "HapticFeedbackType.selectionClick":
        {
          return src__engine.DomRenderer.vibrateSelectionClick;
        }
        default:
        {
          return src__engine.DomRenderer.vibrateLongPress;
        }
      }
    }
    get accessibilityFeatures() {
      return this[_accessibilityFeatures];
    }
    render(scene) {
      if (src__engine.LayerScene.is(scene)) {
        this[_rasterizer].draw(scene.layerTree);
      } else {
        src__engine.domRenderer.renderScene(scene.webOnlyRootElement);
      }
    }
    static _submitScene(canvas) {
      if (dart.equals(canvas, ui.Window._previousCanvas)) return;
      if (ui.Window._previousCanvas != null) {
        ui.Window._previousCanvas.rootElement[$remove]();
      }
      ui.Window._previousCanvas = canvas;
      src__engine.domRenderer.append(src__engine.domRenderer.rootElement, canvas.rootElement);
    }
  };
  (ui.Window.__ = function() {
    this[_browserHistory] = new src__engine.BrowserHistory.new();
    this[devicePixelRatio] = 1.0;
    this[_physicalSize] = ui.Size.zero;
    this[_lastKnownWindowInnerWidth] = -1;
    this[_lastKnownWindowInnerHeight] = -1;
    this[webOnlyDebugPhysicalSizeOverride] = null;
    this[viewInsets] = ui.WindowPadding.zero;
    this[padding] = ui.WindowPadding.zero;
    this[_textScaleFactor] = 1.0;
    this[_alwaysUse24HourFormat] = false;
    this[_onTextScaleFactorChanged] = null;
    this[_platformBrightness] = ui.Brightness.light;
    this[_onPlatformBrightnessChanged] = null;
    this[_onMetricsChanged] = null;
    this[_locales] = const$5 || (const$5 = dart.constList([ui.Window._enUS], ui.Locale));
    this[_onLocaleChanged] = null;
    this[webOnlyScheduleFrameCallback] = null;
    this[_onBeginFrame] = null;
    this[_onDrawFrame] = null;
    this[_onPointerDataPacket] = null;
    this[_onSemanticsEnabledChanged] = null;
    this[_onSemanticsAction] = null;
    this[_onAccessibilityFeaturesChanged] = null;
    this[_onPlatformMessage] = null;
    this[_accessibilityFeatures] = new ui.AccessibilityFeatures.__(0);
    this[_rasterizer] = new src__engine.Rasterizer.new(new src__engine.Surface.new(dart.fn(ui.Window._submitScene, BitmapCanvasTovoid())));
  }).prototype = ui.Window.prototype;
  dart.addTypeTests(ui.Window);
  const devicePixelRatio = Symbol("Window.devicePixelRatio");
  const webOnlyDebugPhysicalSizeOverride = Symbol("Window.webOnlyDebugPhysicalSizeOverride");
  const viewInsets = Symbol("Window.viewInsets");
  const padding = Symbol("Window.padding");
  const webOnlyScheduleFrameCallback = Symbol("Window.webOnlyScheduleFrameCallback");
  dart.setMethodSignature(ui.Window, () => ({
    __proto__: dart.getMethods(ui.Window.__proto__),
    webOnlyBack: dart.fnType(async.Future$(dart.void), []),
    scheduleFrame: dart.fnType(dart.void, []),
    updateSemantics: dart.fnType(dart.void, [ui.SemanticsUpdate]),
    [_replyToPlatformMessage]: dart.fnType(dart.dynamic, [dart.fnType(dart.void, [typed_data.ByteData]), typed_data.ByteData]),
    sendPlatformMessage: dart.fnType(dart.void, [core.String, typed_data.ByteData, dart.fnType(dart.void, [typed_data.ByteData])]),
    [_getHapticFeedbackDuration]: dart.fnType(core.int, [core.String]),
    render: dart.fnType(dart.void, [ui.Scene])
  }));
  dart.setGetterSignature(ui.Window, () => ({
    __proto__: dart.getGetters(ui.Window.__proto__),
    physicalSize: ui.Size,
    textScaleFactor: core.double,
    alwaysUse24HourFormat: core.bool,
    onTextScaleFactorChanged: dart.fnType(dart.void, []),
    platformBrightness: ui.Brightness,
    onPlatformBrightnessChanged: dart.fnType(dart.void, []),
    onMetricsChanged: dart.fnType(dart.void, []),
    locale: ui.Locale,
    locales: core.List$(ui.Locale),
    onLocaleChanged: dart.fnType(dart.void, []),
    onBeginFrame: dart.fnType(dart.void, [core.Duration]),
    onDrawFrame: dart.fnType(dart.void, []),
    onPointerDataPacket: dart.fnType(dart.void, [ui.PointerDataPacket]),
    defaultRouteName: core.String,
    semanticsEnabled: core.bool,
    onSemanticsEnabledChanged: dart.fnType(dart.void, []),
    onSemanticsAction: dart.fnType(dart.void, [core.int, ui.SemanticsAction, typed_data.ByteData]),
    onAccessibilityFeaturesChanged: dart.fnType(dart.void, []),
    onPlatformMessage: dart.fnType(dart.void, [core.String, typed_data.ByteData, dart.fnType(dart.void, [typed_data.ByteData])]),
    accessibilityFeatures: ui.AccessibilityFeatures
  }));
  dart.setSetterSignature(ui.Window, () => ({
    __proto__: dart.getSetters(ui.Window.__proto__),
    webOnlyLocationStrategy: ui.LocationStrategy,
    webOnlyRouteName: core.String,
    onTextScaleFactorChanged: dart.fnType(dart.void, []),
    onPlatformBrightnessChanged: dart.fnType(dart.void, []),
    onMetricsChanged: dart.fnType(dart.void, []),
    onLocaleChanged: dart.fnType(dart.void, []),
    onBeginFrame: dart.fnType(dart.void, [core.Duration]),
    onDrawFrame: dart.fnType(dart.void, []),
    onPointerDataPacket: dart.fnType(dart.void, [ui.PointerDataPacket]),
    onSemanticsEnabledChanged: dart.fnType(dart.void, []),
    onSemanticsAction: dart.fnType(dart.void, [core.int, ui.SemanticsAction, typed_data.ByteData]),
    onAccessibilityFeaturesChanged: dart.fnType(dart.void, []),
    onPlatformMessage: dart.fnType(dart.void, [core.String, typed_data.ByteData, dart.fnType(dart.void, [typed_data.ByteData])])
  }));
  dart.setFieldSignature(ui.Window, () => ({
    __proto__: dart.getFields(ui.Window.__proto__),
    [_browserHistory]: dart.finalFieldType(src__engine.BrowserHistory),
    devicePixelRatio: dart.fieldType(core.double),
    [_physicalSize]: dart.fieldType(ui.Size),
    [_lastKnownWindowInnerWidth]: dart.fieldType(core.int),
    [_lastKnownWindowInnerHeight]: dart.fieldType(core.int),
    webOnlyDebugPhysicalSizeOverride: dart.fieldType(ui.Size),
    viewInsets: dart.fieldType(ui.WindowPadding),
    padding: dart.fieldType(ui.WindowPadding),
    [_textScaleFactor]: dart.fieldType(core.double),
    [_alwaysUse24HourFormat]: dart.fieldType(core.bool),
    [_onTextScaleFactorChanged]: dart.fieldType(VoidTovoid()),
    [_platformBrightness]: dart.fieldType(ui.Brightness),
    [_onPlatformBrightnessChanged]: dart.fieldType(VoidTovoid()),
    [_onMetricsChanged]: dart.fieldType(VoidTovoid()),
    [_locales]: dart.fieldType(ListOfLocale()),
    [_onLocaleChanged]: dart.fieldType(VoidTovoid()),
    webOnlyScheduleFrameCallback: dart.fieldType(VoidTovoid()),
    [_onBeginFrame]: dart.fieldType(DurationTovoid()),
    [_onDrawFrame]: dart.fieldType(VoidTovoid()),
    [_onPointerDataPacket]: dart.fieldType(PointerDataPacketTovoid()),
    [_onSemanticsEnabledChanged]: dart.fieldType(VoidTovoid()),
    [_onSemanticsAction]: dart.fieldType(intAndSemanticsActionAndByteDataTovoid()),
    [_onAccessibilityFeaturesChanged]: dart.fieldType(VoidTovoid()),
    [_onPlatformMessage]: dart.fieldType(StringAndByteDataAndFnTovoid()),
    [_accessibilityFeatures]: dart.fieldType(ui.AccessibilityFeatures),
    [_rasterizer]: dart.finalFieldType(src__engine.Rasterizer)
  }));
  dart.defineLazy(ui.Window, {
    /*ui.Window._enUS*/get _enUS() {
      return dart.const(new ui.Locale.new("en", "US"));
    },
    /*ui.Window._previousCanvas*/get _previousCanvas() {
      return null;
    },
    set _previousCanvas(_) {}
  });
  const _index = dart.privateName(ui, "_index");
  ui.AccessibilityFeatures = class AccessibilityFeatures extends core.Object {
    get accessibleNavigation() {
      return (1 & dart.notNull(this[_index])) !== 0;
    }
    get invertColors() {
      return (2 & dart.notNull(this[_index])) !== 0;
    }
    get disableAnimations() {
      return (4 & dart.notNull(this[_index])) !== 0;
    }
    get boldText() {
      return (8 & dart.notNull(this[_index])) !== 0;
    }
    get reduceMotion() {
      return (16 & dart.notNull(this[_index])) !== 0;
    }
    toString() {
      let features = JSArrayOfString().of([]);
      if (dart.test(this.accessibleNavigation)) features[$add]("accessibleNavigation");
      if (dart.test(this.invertColors)) features[$add]("invertColors");
      if (dart.test(this.disableAnimations)) features[$add]("disableAnimations");
      if (dart.test(this.boldText)) features[$add]("boldText");
      if (dart.test(this.reduceMotion)) features[$add]("reduceMotion");
      return "AccessibilityFeatures" + dart.str(features);
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      let typedOther = ui.AccessibilityFeatures._check(other);
      return this[_index] == typedOther[_index];
    }
    get hashCode() {
      return dart.hashCode(this[_index]);
    }
  };
  (ui.AccessibilityFeatures.__ = function(index) {
    this[_index] = index;
  }).prototype = ui.AccessibilityFeatures.prototype;
  dart.addTypeTests(ui.AccessibilityFeatures);
  dart.setGetterSignature(ui.AccessibilityFeatures, () => ({
    __proto__: dart.getGetters(ui.AccessibilityFeatures.__proto__),
    accessibleNavigation: core.bool,
    invertColors: core.bool,
    disableAnimations: core.bool,
    boldText: core.bool,
    reduceMotion: core.bool
  }));
  dart.setFieldSignature(ui.AccessibilityFeatures, () => ({
    __proto__: dart.getFields(ui.AccessibilityFeatures.__proto__),
    [_index]: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.AccessibilityFeatures, ['toString', '_equals']);
  dart.defineExtensionAccessors(ui.AccessibilityFeatures, ['hashCode']);
  dart.defineLazy(ui.AccessibilityFeatures, {
    /*ui.AccessibilityFeatures._kAccessibleNavigation*/get _kAccessibleNavigation() {
      return 1 << 0;
    },
    /*ui.AccessibilityFeatures._kInvertColorsIndex*/get _kInvertColorsIndex() {
      return 1 << 1;
    },
    /*ui.AccessibilityFeatures._kDisableAnimationsIndex*/get _kDisableAnimationsIndex() {
      return 1 << 2;
    },
    /*ui.AccessibilityFeatures._kBoldTextIndex*/get _kBoldTextIndex() {
      return 1 << 3;
    },
    /*ui.AccessibilityFeatures._kReduceMotionIndex*/get _kReduceMotionIndex() {
      return 1 << 4;
    }
  });
  ui.Brightness = class Brightness extends core.Object {
    toString() {
      return {
        0: "Brightness.dark",
        1: "Brightness.light"
      }[this.index];
    }
  };
  (ui.Brightness.new = function(x) {
    this.index = x;
  }).prototype = ui.Brightness.prototype;
  dart.addTypeTests(ui.Brightness);
  dart.setFieldSignature(ui.Brightness, () => ({
    __proto__: dart.getFields(ui.Brightness.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(ui.Brightness, ['toString']);
  ui.Brightness.dark = dart.const(new ui.Brightness.new(0));
  ui.Brightness.light = dart.const(new ui.Brightness.new(1));
  ui.Brightness.values = dart.constList([ui.Brightness.dark, ui.Brightness.light], ui.Brightness);
  dart.defineLazy(ui, {
    /*ui.window*/get window() {
      return new ui.Window.__();
    }
  });
  dart.defineLazy(src__engine, {
    /*src__engine._engineInitialized*/get _engineInitialized() {
      return false;
    },
    set _engineInitialized(_) {},
    /*src__engine._hotRestartListeners*/get _hotRestartListeners() {
      return JSArrayOfVoidTovoid().of([]);
    }
  });
  src__engine.registerHotRestartListener = function(listener) {
    src__engine._hotRestartListeners[$add](listener);
  };
  src__engine.webOnlyInitializeEngine = function() {
    if (dart.test(src__engine._engineInitialized)) {
      return;
    }
    developer.registerExtension("ext.flutter.disassemble", dart.fn((_, __) => {
      for (let listener of src__engine._hotRestartListeners) {
        listener();
      }
      return FutureOfServiceExtensionResponse().value(new developer.ServiceExtensionResponse.result("OK"));
    }, StringAndMapOfString$StringToFutureOfServiceExtensionResponse()));
    src__engine._engineInitialized = true;
    src__engine.domRenderer;
    let waitingForAnimation = false;
    ui.window.webOnlyScheduleFrameCallback = dart.fn(() => {
      if (!waitingForAnimation) {
        waitingForAnimation = true;
        html.window[$requestAnimationFrame](dart.fn(highResTime => {
          waitingForAnimation = false;
          let highResTimeMicroseconds = (1000 * dart.notNull(highResTime))[$toInt]();
          if (ui.window.onBeginFrame != null) {
            ui.window.onBeginFrame(new core.Duration.new({microseconds: highResTimeMicroseconds}));
          }
          if (ui.window.onDrawFrame != null) {
            ui.window.onDrawFrame();
          }
        }, numToNull()));
      }
    }, VoidToNull());
    src__engine.Keyboard.initialize();
  };
  const _timestampFunction = dart.privateName(src__engine, "_timestampFunction");
  const _timer = dart.privateName(src__engine, "_timer");
  const _datetime = dart.privateName(src__engine, "_datetime");
  const _cancelTimer = dart.privateName(src__engine, "_cancelTimer");
  const _timerDidFire = dart.privateName(src__engine, "_timerDidFire");
  src__engine.AlarmClock = class AlarmClock extends core.Object {
    get callback() {
      return this[callback];
    }
    set callback(value) {
      this[callback] = value;
    }
    get datetime() {
      return this[_datetime];
    }
    set datetime(value) {
      if (dart.equals(value, this[_datetime])) {
        return;
      }
      if (value == null) {
        this[_cancelTimer]();
        this[_datetime] = null;
        return;
      }
      let now = this[_timestampFunction]();
      let isInTheFuture = !dart.test(value.isBefore(now));
      if (!isInTheFuture) {
        this[_cancelTimer]();
        this[_datetime] = value;
        return;
      }
      if (this[_timer] == null) {
        this[_timer] = async.Timer.new(value.difference(now), dart.bind(this, _timerDidFire));
      } else {
        if (!(this[_datetime] != null)) dart.assertFailed("We can only have a timer if there is a non-null datetime");
        if (dart.test(this[_datetime].isAfter(value))) {
          this[_cancelTimer]();
          this[_timer] = async.Timer.new(value.difference(now), dart.bind(this, _timerDidFire));
        }
      }
      this[_datetime] = value;
    }
    [_cancelTimer]() {
      if (this[_timer] != null) {
        this[_timer].cancel();
        this[_timer] = null;
      }
    }
    [_timerDidFire]() {
      if (!(this[_datetime] != null)) dart.assertFailed("If _datetime is null, the timer would have been cancelled");
      let now = this[_timestampFunction]();
      if (!dart.test(now.isBefore(this[_datetime]))) {
        this[_timer] = null;
        this.callback();
      } else {
        this[_timer] = async.Timer.new(this[_datetime].difference(now), dart.bind(this, _timerDidFire));
      }
    }
  };
  (src__engine.AlarmClock.new = function(timestampFunction) {
    this[_timer] = null;
    this[_datetime] = null;
    this[callback] = null;
    this[_timestampFunction] = timestampFunction;
  }).prototype = src__engine.AlarmClock.prototype;
  dart.addTypeTests(src__engine.AlarmClock);
  const callback = Symbol("AlarmClock.callback");
  dart.setMethodSignature(src__engine.AlarmClock, () => ({
    __proto__: dart.getMethods(src__engine.AlarmClock.__proto__),
    [_cancelTimer]: dart.fnType(dart.void, []),
    [_timerDidFire]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(src__engine.AlarmClock, () => ({
    __proto__: dart.getGetters(src__engine.AlarmClock.__proto__),
    datetime: core.DateTime
  }));
  dart.setSetterSignature(src__engine.AlarmClock, () => ({
    __proto__: dart.getSetters(src__engine.AlarmClock.__proto__),
    datetime: core.DateTime
  }));
  dart.setFieldSignature(src__engine.AlarmClock, () => ({
    __proto__: dart.getFields(src__engine.AlarmClock.__proto__),
    [_timestampFunction]: dart.finalFieldType(VoidToDateTime()),
    [_timer]: dart.fieldType(async.Timer),
    [_datetime]: dart.fieldType(core.DateTime),
    callback: dart.fieldType(VoidTovoid())
  }));
  src__engine.AssetManager = class AssetManager extends core.Object {
    get assetsDir() {
      return this[assetsDir$];
    }
    set assetsDir(value) {
      super.assetsDir = value;
    }
    getAssetUrl(asset) {
      let assetUri = core.Uri.parse(asset);
      let url = null;
      if (dart.test(assetUri.hasScheme)) {
        url = asset;
      } else {
        url = dart.str(this.assetsDir) + "/" + dart.str(asset);
      }
      return url;
    }
    load(asset) {
      return async.async(typed_data.ByteData, (function* load() {
        let url = this.getAssetUrl(asset);
        try {
          let request = (yield html.HttpRequest.request(url, {responseType: "arraybuffer"}));
          return typed_data.ByteBuffer.as(request[$response])[$asByteData]();
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (html.ProgressEvent.is(e)) {
            let target = e[$target];
            if (html.HttpRequest.is(target)) {
              if (target.status === 404 && asset === "AssetManifest.json") {
                html.window[$console].warn("Asset manifest does not exist at `" + dart.str(url) + "` – ignoring.");
                return typed_data.Uint8List.fromList(convert.utf8.encode("{}"))[$buffer][$asByteData]();
              }
              dart.throw(new src__engine.AssetManagerException.new(url, target.status));
            }
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (src__engine.AssetManager.new = function(opts) {
    let assetsDir = opts && 'assetsDir' in opts ? opts.assetsDir : "assets";
    this[assetsDir$] = assetsDir;
  }).prototype = src__engine.AssetManager.prototype;
  dart.addTypeTests(src__engine.AssetManager);
  const assetsDir$ = Symbol("AssetManager.assetsDir");
  dart.setMethodSignature(src__engine.AssetManager, () => ({
    __proto__: dart.getMethods(src__engine.AssetManager.__proto__),
    getAssetUrl: dart.fnType(core.String, [core.String]),
    load: dart.fnType(async.Future$(typed_data.ByteData), [core.String])
  }));
  dart.setFieldSignature(src__engine.AssetManager, () => ({
    __proto__: dart.getFields(src__engine.AssetManager.__proto__),
    assetsDir: dart.finalFieldType(core.String)
  }));
  dart.defineLazy(src__engine.AssetManager, {
    /*src__engine.AssetManager._defaultAssetsDir*/get _defaultAssetsDir() {
      return "assets";
    }
  });
  src__engine.AssetManagerException = class AssetManagerException extends core.Object {
    get url() {
      return this[url$];
    }
    set url(value) {
      super.url = value;
    }
    get httpStatus() {
      return this[httpStatus$];
    }
    set httpStatus(value) {
      super.httpStatus = value;
    }
    toString() {
      return "Failed to load asset at \"" + dart.str(this.url) + "\" (" + dart.str(this.httpStatus) + ")";
    }
  };
  (src__engine.AssetManagerException.new = function(url, httpStatus) {
    this[url$] = url;
    this[httpStatus$] = httpStatus;
  }).prototype = src__engine.AssetManagerException.prototype;
  dart.addTypeTests(src__engine.AssetManagerException);
  const url$ = Symbol("AssetManagerException.url");
  const httpStatus$ = Symbol("AssetManagerException.httpStatus");
  src__engine.AssetManagerException[dart.implements] = () => [core.Exception];
  dart.setFieldSignature(src__engine.AssetManagerException, () => ({
    __proto__: dart.getFields(src__engine.AssetManagerException.__proto__),
    url: dart.finalFieldType(core.String),
    httpStatus: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(src__engine.AssetManagerException, ['toString']);
  src__engine._stringForBlendMode = function(blendMode) {
    if (blendMode == null) return null;
    switch (blendMode) {
      case ui.BlendMode.srcOver:
      {
        return "source-over";
      }
      case ui.BlendMode.srcIn:
      {
        return "source-in";
      }
      case ui.BlendMode.srcOut:
      {
        return "source-out";
      }
      case ui.BlendMode.srcATop:
      {
        return "source-atop";
      }
      case ui.BlendMode.dstOver:
      {
        return "destination-over";
      }
      case ui.BlendMode.dstIn:
      {
        return "destination-in";
      }
      case ui.BlendMode.dstOut:
      {
        return "destination-out";
      }
      case ui.BlendMode.dstATop:
      {
        return "destination-atop";
      }
      case ui.BlendMode.plus:
      {
        return "lighten";
      }
      case ui.BlendMode.src:
      {
        return "copy";
      }
      case ui.BlendMode.xor:
      {
        return "xor";
      }
      case ui.BlendMode.multiply:
      case ui.BlendMode.modulate:
      {
        return "multiply";
      }
      case ui.BlendMode.screen:
      {
        return "screen";
      }
      case ui.BlendMode.overlay:
      {
        return "overlay";
      }
      case ui.BlendMode.darken:
      {
        return "darken";
      }
      case ui.BlendMode.lighten:
      {
        return "lighten";
      }
      case ui.BlendMode.colorDodge:
      {
        return "color-dodge";
      }
      case ui.BlendMode.colorBurn:
      {
        return "color-burn";
      }
      case ui.BlendMode.hardLight:
      {
        return "hard-light";
      }
      case ui.BlendMode.softLight:
      {
        return "soft-light";
      }
      case ui.BlendMode.difference:
      {
        return "difference";
      }
      case ui.BlendMode.exclusion:
      {
        return "exclusion";
      }
      case ui.BlendMode.hue:
      {
        return "hue";
      }
      case ui.BlendMode.saturation:
      {
        return "saturation";
      }
      case ui.BlendMode.color:
      {
        return "color";
      }
      case ui.BlendMode.luminosity:
      {
        return "luminosity";
      }
      default:
      {
        dart.throw(new core.UnimplementedError.new("Flutter Web does not support the blend mode: " + dart.str(blendMode)));
      }
    }
  };
  src__engine._stringForStrokeCap = function(strokeCap) {
    if (strokeCap == null) return null;
    switch (strokeCap) {
      case ui.StrokeCap.butt:
      {
        return "butt";
      }
      case ui.StrokeCap.round:
      {
        return "round";
      }
      case ui.StrokeCap.square:
      default:
      {
        return "square";
      }
    }
  };
  src__engine._stringForStrokeJoin = function(strokeJoin) {
    if (!(strokeJoin != null)) dart.assertFailed();
    switch (strokeJoin) {
      case ui.StrokeJoin.round:
      {
        return "round";
      }
      case ui.StrokeJoin.bevel:
      {
        return "bevel";
      }
      case ui.StrokeJoin.miter:
      default:
      {
        return "miter";
      }
    }
  };
  src__engine._clipContent = function(clipStack, content, offset, currentTransform) {
    let root = null, curElement = null;
    let clipDefs = JSArrayOfElement().of([]);
    for (let clipIndex = 0, len = clipStack[$length]; clipIndex < dart.notNull(len); clipIndex++) {
      let entry = clipStack[$_get](clipIndex);
      let newElement = html.DivElement.new();
      if (root == null) {
        root = newElement;
      } else {
        src__engine.domRenderer.append(curElement, newElement);
      }
      curElement = newElement;
      let rect = entry.rect;
      let newClipTransform = entry.currentTransform;
      if (rect != null) {
        let clipOffsetX = rect.left;
        let clipOffsetY = rect.top;
        newClipTransform = newClipTransform.clone();
        newClipTransform.translate(clipOffsetX, clipOffsetY);
        curElement.style[$overflow] = "hidden";
        curElement.style[$transform] = src__engine.matrix4ToCssTransform(newClipTransform);
        curElement.style[$transformOrigin] = "0 0 0";
        curElement.style[$width] = dart.str(dart.notNull(rect.right) - dart.notNull(clipOffsetX)) + "px";
        curElement.style[$height] = dart.str(dart.notNull(rect.bottom) - dart.notNull(clipOffsetY)) + "px";
      } else if (entry.rrect != null) {
        let roundRect = entry.rrect;
        let borderRadius = dart.str(roundRect.tlRadiusX) + "px " + dart.str(roundRect.trRadiusX) + "px " + (dart.str(roundRect.brRadiusX) + "px " + dart.str(roundRect.blRadiusX) + "px");
        let clipOffsetX = roundRect.left;
        let clipOffsetY = roundRect.top;
        newClipTransform = newClipTransform.clone();
        newClipTransform.translate(clipOffsetX, clipOffsetY);
        curElement.style[$borderRadius] = borderRadius;
        curElement.style[$overflow] = "hidden";
        curElement.style[$transform] = src__engine.matrix4ToCssTransform(newClipTransform);
        curElement.style[$transformOrigin] = "0 0 0";
        curElement.style[$width] = dart.str(dart.notNull(roundRect.right) - dart.notNull(clipOffsetX)) + "px";
        curElement.style[$height] = dart.str(dart.notNull(roundRect.bottom) - dart.notNull(clipOffsetY)) + "px";
      } else if (entry.path != null) {
        curElement.style[$transform] = src__engine.matrix4ToCssTransform(newClipTransform);
        let svgClipPath = src__engine._pathToSvgClipPath(entry.path);
        let clipElement = html.Element.html(svgClipPath, {treeSanitizer: new src__engine._NullTreeSanitizer.new()});
        src__engine.domRenderer.setElementStyle(curElement, "clip-path", "url(#svgClipText" + dart.str(src__engine._clipTextCounter) + ")");
        src__engine.domRenderer.setElementStyle(curElement, "-webkit-clip-path", "url(#svgClipText" + dart.str(src__engine._clipTextCounter) + ")");
        clipDefs[$add](clipElement);
      }
      let reverseTransformDiv = html.DivElement.new();
      reverseTransformDiv.style[$transform] = src__engine._cssTransformAtOffset((() => {
        let _ = newClipTransform.clone();
        _.invert();
        return _;
      })(), 0, 0);
      reverseTransformDiv.style[$transformOrigin] = "0 0 0";
      curElement[$append](reverseTransformDiv);
      curElement = reverseTransformDiv;
    }
    root.style[$position] = "absolute";
    src__engine.domRenderer.append(curElement, content);
    content.style[$transform] = src__engine._cssTransformAtOffset(currentTransform, offset.dx, offset.dy);
    let _ = JSArrayOfElement().of([root]);
    _[$addAll](clipDefs);
    return _;
  };
  src__engine._cssTransformAtOffset = function(transform, offsetX, offsetY) {
    return src__engine.matrix4ToCssTransform(src__engine.transformWithOffset(transform, new ui.Offset.new(offsetX, offsetY)));
  };
  src__engine._NullTreeSanitizer = class _NullTreeSanitizer extends core.Object {
    sanitizeTree(node) {}
  };
  (src__engine._NullTreeSanitizer.new = function() {
  }).prototype = src__engine._NullTreeSanitizer.prototype;
  dart.addTypeTests(src__engine._NullTreeSanitizer);
  src__engine._NullTreeSanitizer[dart.implements] = () => [html.NodeTreeSanitizer];
  dart.setMethodSignature(src__engine._NullTreeSanitizer, () => ({
    __proto__: dart.getMethods(src__engine._NullTreeSanitizer.__proto__),
    sanitizeTree: dart.fnType(dart.void, [html.Node])
  }));
  dart.defineLazy(src__engine, {
    /*src__engine._clipTextCounter*/get _clipTextCounter() {
      return 0;
    },
    set _clipTextCounter(_) {}
  });
  src__engine._pathToSvgClipPath = function(path, opts) {
    let offsetX = opts && 'offsetX' in opts ? opts.offsetX : 0;
    let offsetY = opts && 'offsetY' in opts ? opts.offsetY : 0;
    let bounds = path.getBounds();
    let sb = new core.StringBuffer.new();
    sb.write("<svg width=\"" + dart.str(bounds.right) + "\" height=\"" + dart.str(bounds.bottom) + "\" " + "style=\"position:absolute\">");
    sb.write("<defs>");
    let clipId = "svgClipText" + dart.str(src__engine._clipTextCounter = dart.notNull(src__engine._clipTextCounter) + 1);
    sb.write("<clipPath id=" + clipId + ">");
    sb.write("<path fill=\"#FFFFFF\" d=\"");
    src__engine.pathToSvg(path, sb, {offsetX: offsetX, offsetY: offsetY});
    sb.write("\"></path></clipPath></defs></svg");
    return sb.toString();
  };
  src__engine.BrowserEngine = class BrowserEngine extends core.Object {
    toString() {
      return {
        0: "BrowserEngine.blink",
        1: "BrowserEngine.webkit",
        2: "BrowserEngine.unknown"
      }[this.index];
    }
  };
  (src__engine.BrowserEngine.new = function(x) {
    this.index = x;
  }).prototype = src__engine.BrowserEngine.prototype;
  dart.addTypeTests(src__engine.BrowserEngine);
  dart.setFieldSignature(src__engine.BrowserEngine, () => ({
    __proto__: dart.getFields(src__engine.BrowserEngine.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(src__engine.BrowserEngine, ['toString']);
  src__engine.BrowserEngine.blink = dart.const(new src__engine.BrowserEngine.new(0));
  src__engine.BrowserEngine.webkit = dart.const(new src__engine.BrowserEngine.new(1));
  src__engine.BrowserEngine.unknown = dart.const(new src__engine.BrowserEngine.new(2));
  src__engine.BrowserEngine.values = dart.constList([src__engine.BrowserEngine.blink, src__engine.BrowserEngine.webkit, src__engine.BrowserEngine.unknown], src__engine.BrowserEngine);
  dart.defineLazy(src__engine, {
    /*src__engine._browserEngine*/get _browserEngine() {
      return null;
    },
    set _browserEngine(_) {}
  });
  dart.copyProperties(src__engine, {
    get browserEngine() {
      if (src__engine._browserEngine == null) {
        src__engine._browserEngine = src__engine._detectBrowserEngine();
      }
      return src__engine._browserEngine;
    }
  });
  src__engine._detectBrowserEngine = function() {
    let vendor = html.window.navigator.vendor;
    if (vendor === "Google Inc.") {
      return src__engine.BrowserEngine.blink;
    } else if (vendor === "Apple Computer, Inc.") {
      return src__engine.BrowserEngine.webkit;
    }
    core.print("WARNING: failed to detect current browser engine.");
    return src__engine.BrowserEngine.unknown;
  };
  dart.defineLazy(src__engine, {
    /*src__engine.assetChannel*/get assetChannel() {
      return "flutter/assets";
    }
  });
  const _animator = dart.privateName(src__engine, "_animator");
  const _runtimeController = dart.privateName(src__engine, "_runtimeController");
  const _assetManager = dart.privateName(src__engine, "_assetManager");
  const _delegate = dart.privateName(src__engine, "_delegate");
  const _initialRoute = dart.privateName(src__engine, "_initialRoute");
  const _viewportMetrics = dart.privateName(src__engine, "_viewportMetrics");
  src__engine.RuntimeDelegate = class RuntimeDelegate extends core.Object {};
  (src__engine.RuntimeDelegate.new = function() {
  }).prototype = src__engine.RuntimeDelegate.prototype;
  dart.addTypeTests(src__engine.RuntimeDelegate);
  src__engine.Engine = class Engine extends src__engine.RuntimeDelegate {
    get defaultRouteName() {
      let l = this[_initialRoute];
      return l != null ? l : "/";
    }
    get haveSurface() {
      return true;
    }
    set viewportMetrics(metrics) {
      let dimensionsChanged = this[_viewportMetrics].physicalHeight != metrics.physicalHeight || this[_viewportMetrics].physicalWidth != metrics.physicalWidth;
      this[_viewportMetrics] = metrics;
      dart.dput(this[_runtimeController], 'viewportMetrics', this[_viewportMetrics]);
      if (this[_animator] != null) {
        if (dimensionsChanged) {
          this[_animator].setDimensionChangePending();
        }
        if (dart.test(this.haveSurface)) {
          this.scheduleFrame();
        }
      }
    }
    scheduleFrame(opts) {
      let regenerateLayerTree = opts && 'regenerateLayerTree' in opts ? opts.regenerateLayerTree : true;
      this[_animator].requestFrame(regenerateLayerTree);
    }
    render(layerTree) {
      if (layerTree == null) return;
      let frameSize = new ui.Size.new(this[_viewportMetrics].physicalWidth, this[_viewportMetrics].physicalHeight);
      if (dart.test(frameSize.isEmpty)) {
        return;
      }
      layerTree.frameSize = frameSize;
      this[_animator].render(layerTree);
    }
    handlePlatformMessage(message) {
      if (message.channel === "flutter/assets") {
        this.handleAssetPlatformMessage(message);
      } else {
        dart.dsend(this[_delegate], 'onEngineHandlePlatformMessage', [message]);
      }
    }
    handleAssetPlatformMessage(message) {
      let response = message.response;
      if (response == null) return;
      let asset = convert.utf8.decode(message.data[$buffer][$asUint8List]());
      if (this[_assetManager] != null) {
        FutureOfNull()._check(this[_assetManager].load(asset).then(core.Null, dart.fn(data => {
          if (data != null) {
            response.complete(data[$buffer][$asUint8List]());
          } else {
            response.completeEmpty();
          }
        }, ByteDataToNull())));
      } else {
        response.completeEmpty();
      }
    }
    getFontCollection() {
      return null;
    }
  };
  (src__engine.Engine.new = function(animator, runtimeController, assetManager, delegate) {
    this[_initialRoute] = null;
    this[_viewportMetrics] = null;
    this[_animator] = animator;
    this[_runtimeController] = runtimeController;
    this[_assetManager] = assetManager;
    this[_delegate] = delegate;
  }).prototype = src__engine.Engine.prototype;
  dart.addTypeTests(src__engine.Engine);
  dart.setMethodSignature(src__engine.Engine, () => ({
    __proto__: dart.getMethods(src__engine.Engine.__proto__),
    scheduleFrame: dart.fnType(dart.void, [], {regenerateLayerTree: core.bool}),
    render: dart.fnType(dart.void, [src__engine.LayerTree]),
    handlePlatformMessage: dart.fnType(dart.void, [src__engine.PlatformMessage]),
    handleAssetPlatformMessage: dart.fnType(dart.void, [src__engine.PlatformMessage]),
    getFontCollection: dart.fnType(src__engine.FontCollection, [])
  }));
  dart.setGetterSignature(src__engine.Engine, () => ({
    __proto__: dart.getGetters(src__engine.Engine.__proto__),
    defaultRouteName: core.String,
    haveSurface: core.bool
  }));
  dart.setSetterSignature(src__engine.Engine, () => ({
    __proto__: dart.getSetters(src__engine.Engine.__proto__),
    viewportMetrics: src__engine.ViewportMetrics
  }));
  dart.setFieldSignature(src__engine.Engine, () => ({
    __proto__: dart.getFields(src__engine.Engine.__proto__),
    [_animator]: dart.finalFieldType(src__engine.Animator),
    [_runtimeController]: dart.finalFieldType(dart.dynamic),
    [_assetManager]: dart.finalFieldType(src__engine.AssetManager),
    [_delegate]: dart.finalFieldType(dart.dynamic),
    [_initialRoute]: dart.fieldType(core.String),
    [_viewportMetrics]: dart.fieldType(src__engine.ViewportMetrics)
  }));
  src__engine.Animator = class Animator extends core.Object {
    setDimensionChangePending() {}
    render(layerTree) {}
    requestFrame(regenerateLayerTree) {}
  };
  (src__engine.Animator.new = function() {
  }).prototype = src__engine.Animator.prototype;
  dart.addTypeTests(src__engine.Animator);
  dart.setMethodSignature(src__engine.Animator, () => ({
    __proto__: dart.getMethods(src__engine.Animator.__proto__),
    setDimensionChangePending: dart.fnType(dart.void, []),
    render: dart.fnType(dart.void, [src__engine.LayerTree]),
    requestFrame: dart.fnType(dart.void, [core.bool])
  }));
  src__engine.Layer = class Layer extends core.Object {
    get parent() {
      return this[parent$];
    }
    set parent(value) {
      this[parent$] = value;
    }
    get paintBounds() {
      return this[paintBounds];
    }
    set paintBounds(value) {
      this[paintBounds] = value;
    }
    get needsPainting() {
      return !dart.test(this.paintBounds.isEmpty);
    }
  };
  (src__engine.Layer.new = function() {
    this[parent$] = null;
    this[paintBounds] = ui.Rect.zero;
  }).prototype = src__engine.Layer.prototype;
  dart.addTypeTests(src__engine.Layer);
  const parent$ = Symbol("Layer.parent");
  const paintBounds = Symbol("Layer.paintBounds");
  dart.setGetterSignature(src__engine.Layer, () => ({
    __proto__: dart.getGetters(src__engine.Layer.__proto__),
    needsPainting: core.bool
  }));
  dart.setFieldSignature(src__engine.Layer, () => ({
    __proto__: dart.getFields(src__engine.Layer.__proto__),
    parent: dart.fieldType(src__engine.ContainerLayer),
    paintBounds: dart.fieldType(ui.Rect)
  }));
  src__engine.PrerollContext = class PrerollContext extends core.Object {
    get rasterCache() {
      return this[rasterCache$];
    }
    set rasterCache(value) {
      super.rasterCache = value;
    }
  };
  (src__engine.PrerollContext.new = function(rasterCache) {
    this[rasterCache$] = rasterCache;
  }).prototype = src__engine.PrerollContext.prototype;
  dart.addTypeTests(src__engine.PrerollContext);
  const rasterCache$ = Symbol("PrerollContext.rasterCache");
  dart.setFieldSignature(src__engine.PrerollContext, () => ({
    __proto__: dart.getFields(src__engine.PrerollContext.__proto__),
    rasterCache: dart.finalFieldType(src__engine.RasterCache)
  }));
  src__engine.PaintContext = class PaintContext extends core.Object {
    get canvas() {
      return this[canvas$];
    }
    set canvas(value) {
      super.canvas = value;
    }
    get rasterCache() {
      return this[rasterCache$0];
    }
    set rasterCache(value) {
      super.rasterCache = value;
    }
  };
  (src__engine.PaintContext.new = function(canvas, rasterCache) {
    this[canvas$] = canvas;
    this[rasterCache$0] = rasterCache;
  }).prototype = src__engine.PaintContext.prototype;
  dart.addTypeTests(src__engine.PaintContext);
  const canvas$ = Symbol("PaintContext.canvas");
  const rasterCache$0 = Symbol("PaintContext.rasterCache");
  dart.setFieldSignature(src__engine.PaintContext, () => ({
    __proto__: dart.getFields(src__engine.PaintContext.__proto__),
    canvas: dart.finalFieldType(src__engine.BitmapCanvas),
    rasterCache: dart.finalFieldType(src__engine.RasterCache)
  }));
  const _layers = dart.privateName(src__engine, "_layers");
  src__engine.ContainerLayer = class ContainerLayer extends src__engine.Layer {
    add(child) {
      child.parent = this;
      this[_layers][$add](child);
    }
    preroll(context, matrix) {
      this.paintBounds = this.prerollChildren(context, matrix);
    }
    prerollChildren(context, childMatrix) {
      let childPaintBounds = ui.Rect.zero;
      for (let layer of this[_layers]) {
        layer.preroll(context, childMatrix);
        if (dart.test(childPaintBounds.isEmpty)) {
          childPaintBounds = layer.paintBounds;
        } else if (!dart.test(layer.paintBounds.isEmpty)) {
          childPaintBounds = childPaintBounds.expandToInclude(layer.paintBounds);
        }
      }
      return childPaintBounds;
    }
    paintChildren(context) {
      if (!dart.test(this.needsPainting)) dart.assertFailed();
      for (let layer of this[_layers]) {
        if (dart.test(layer.needsPainting)) {
          layer.paint(context);
        }
      }
    }
  };
  (src__engine.ContainerLayer.new = function() {
    this[_layers] = JSArrayOfLayer().of([]);
    src__engine.ContainerLayer.__proto__.new.call(this);
  }).prototype = src__engine.ContainerLayer.prototype;
  dart.addTypeTests(src__engine.ContainerLayer);
  dart.setMethodSignature(src__engine.ContainerLayer, () => ({
    __proto__: dart.getMethods(src__engine.ContainerLayer.__proto__),
    add: dart.fnType(dart.void, [src__engine.Layer]),
    preroll: dart.fnType(dart.void, [src__engine.PrerollContext, src__engine.Matrix4]),
    prerollChildren: dart.fnType(ui.Rect, [src__engine.PrerollContext, src__engine.Matrix4]),
    paintChildren: dart.fnType(dart.void, [src__engine.PaintContext])
  }));
  dart.setFieldSignature(src__engine.ContainerLayer, () => ({
    __proto__: dart.getFields(src__engine.ContainerLayer.__proto__),
    [_layers]: dart.finalFieldType(ListOfLayer())
  }));
  const _clipPath$ = dart.privateName(src__engine, "_clipPath");
  src__engine.ClipPathLayer = class ClipPathLayer extends src__engine.ContainerLayer {
    preroll(context, matrix) {
      let childPaintBounds = this.prerollChildren(context, matrix);
      let clipBounds = this[_clipPath$].getBounds();
      if (dart.test(childPaintBounds.overlaps(clipBounds))) {
        this.paintBounds = childPaintBounds.intersect(clipBounds);
      }
    }
    paint(context) {
      if (!dart.test(this.needsPainting)) dart.assertFailed();
      context.canvas.save();
      context.canvas.clipPath(this[_clipPath$]);
      this.paintChildren(context);
      context.canvas.restore();
    }
  };
  (src__engine.ClipPathLayer.new = function(clipPath) {
    this[_clipPath$] = clipPath;
    src__engine.ClipPathLayer.__proto__.new.call(this);
  }).prototype = src__engine.ClipPathLayer.prototype;
  dart.addTypeTests(src__engine.ClipPathLayer);
  dart.setMethodSignature(src__engine.ClipPathLayer, () => ({
    __proto__: dart.getMethods(src__engine.ClipPathLayer.__proto__),
    paint: dart.fnType(dart.void, [src__engine.PaintContext])
  }));
  dart.setFieldSignature(src__engine.ClipPathLayer, () => ({
    __proto__: dart.getFields(src__engine.ClipPathLayer.__proto__),
    [_clipPath$]: dart.finalFieldType(ui.Path)
  }));
  const _clipRect$ = dart.privateName(src__engine, "_clipRect");
  src__engine.ClipRectLayer = class ClipRectLayer extends src__engine.ContainerLayer {
    preroll(context, matrix) {
      let childPaintBounds = this.prerollChildren(context, matrix);
      if (dart.test(childPaintBounds.overlaps(this[_clipRect$]))) {
        this.paintBounds = childPaintBounds.intersect(this[_clipRect$]);
      }
    }
    paint(context) {
      if (!dart.test(this.needsPainting)) dart.assertFailed();
      context.canvas.save();
      context.canvas.clipRect(this[_clipRect$]);
      this.paintChildren(context);
      context.canvas.restore();
    }
  };
  (src__engine.ClipRectLayer.new = function(clipRect) {
    this[_clipRect$] = clipRect;
    src__engine.ClipRectLayer.__proto__.new.call(this);
  }).prototype = src__engine.ClipRectLayer.prototype;
  dart.addTypeTests(src__engine.ClipRectLayer);
  dart.setMethodSignature(src__engine.ClipRectLayer, () => ({
    __proto__: dart.getMethods(src__engine.ClipRectLayer.__proto__),
    paint: dart.fnType(dart.void, [src__engine.PaintContext])
  }));
  dart.setFieldSignature(src__engine.ClipRectLayer, () => ({
    __proto__: dart.getFields(src__engine.ClipRectLayer.__proto__),
    [_clipRect$]: dart.finalFieldType(ui.Rect)
  }));
  const _clipRRect$ = dart.privateName(src__engine, "_clipRRect");
  src__engine.ClipRRectLayer = class ClipRRectLayer extends src__engine.ContainerLayer {
    preroll(context, matrix) {
      let childPaintBounds = this.prerollChildren(context, matrix);
      if (dart.test(childPaintBounds.overlaps(this[_clipRRect$].outerRect))) {
        this.paintBounds = childPaintBounds.intersect(this[_clipRRect$].outerRect);
      }
    }
    paint(context) {
      if (!dart.test(this.needsPainting)) dart.assertFailed();
      context.canvas.save();
      context.canvas.clipRRect(this[_clipRRect$]);
      this.paintChildren(context);
      context.canvas.restore();
    }
  };
  (src__engine.ClipRRectLayer.new = function(clipRRect) {
    this[_clipRRect$] = clipRRect;
    src__engine.ClipRRectLayer.__proto__.new.call(this);
  }).prototype = src__engine.ClipRRectLayer.prototype;
  dart.addTypeTests(src__engine.ClipRRectLayer);
  dart.setMethodSignature(src__engine.ClipRRectLayer, () => ({
    __proto__: dart.getMethods(src__engine.ClipRRectLayer.__proto__),
    paint: dart.fnType(dart.void, [src__engine.PaintContext])
  }));
  dart.setFieldSignature(src__engine.ClipRRectLayer, () => ({
    __proto__: dart.getFields(src__engine.ClipRRectLayer.__proto__),
    [_clipRRect$]: dart.finalFieldType(ui.RRect)
  }));
  const _transform$ = dart.privateName(src__engine, "_transform");
  src__engine.TransformLayer = class TransformLayer extends src__engine.ContainerLayer {
    preroll(context, matrix) {
      let childMatrix = matrix['*'](this[_transform$]);
      let childPaintBounds = this.prerollChildren(context, src__engine.Matrix4._check(childMatrix));
      this.paintBounds = src__engine.TransformLayer._transformRect(this[_transform$], childPaintBounds);
    }
    static _transformPoint(transform, point) {
      let position3 = src__engine.Vector3.new(point.dx, point.dy, 0.0);
      let transformed3 = transform.perspectiveTransform(position3);
      return new ui.Offset.new(transformed3.x, transformed3.y);
    }
    static _transformRect(transform, rect) {
      let point1 = src__engine.TransformLayer._transformPoint(transform, rect.topLeft);
      let point2 = src__engine.TransformLayer._transformPoint(transform, rect.topRight);
      let point3 = src__engine.TransformLayer._transformPoint(transform, rect.bottomLeft);
      let point4 = src__engine.TransformLayer._transformPoint(transform, rect.bottomRight);
      return new ui.Rect.fromLTRB(src__engine.TransformLayer._min4(point1.dx, point2.dx, point3.dx, point4.dx), src__engine.TransformLayer._min4(point1.dy, point2.dy, point3.dy, point4.dy), src__engine.TransformLayer._max4(point1.dx, point2.dx, point3.dx, point4.dx), src__engine.TransformLayer._max4(point1.dy, point2.dy, point3.dy, point4.dy));
    }
    static _min4(a, b, c, d) {
      return math.min(core.double, a, math.min(core.double, b, math.min(core.double, c, d)));
    }
    static _max4(a, b, c, d) {
      return math.max(core.double, a, math.max(core.double, b, math.max(core.double, c, d)));
    }
    paint(context) {
      if (!dart.test(this.needsPainting)) dart.assertFailed();
      context.canvas.save();
      context.canvas.transform(this[_transform$].storage);
      this.paintChildren(context);
      context.canvas.restore();
    }
  };
  (src__engine.TransformLayer.new = function(transform) {
    this[_transform$] = transform;
    src__engine.TransformLayer.__proto__.new.call(this);
  }).prototype = src__engine.TransformLayer.prototype;
  dart.addTypeTests(src__engine.TransformLayer);
  dart.setMethodSignature(src__engine.TransformLayer, () => ({
    __proto__: dart.getMethods(src__engine.TransformLayer.__proto__),
    paint: dart.fnType(dart.void, [src__engine.PaintContext])
  }));
  dart.setFieldSignature(src__engine.TransformLayer, () => ({
    __proto__: dart.getFields(src__engine.TransformLayer.__proto__),
    [_transform$]: dart.finalFieldType(src__engine.Matrix4)
  }));
  src__engine.PictureLayer = class PictureLayer extends src__engine.Layer {
    get picture() {
      return this[picture$0];
    }
    set picture(value) {
      super.picture = value;
    }
    get offset() {
      return this[offset$2];
    }
    set offset(value) {
      super.offset = value;
    }
    get isComplex() {
      return this[isComplex$];
    }
    set isComplex(value) {
      super.isComplex = value;
    }
    get willChange() {
      return this[willChange$];
    }
    set willChange(value) {
      super.willChange = value;
    }
    preroll(context, matrix) {
      let cache = context.rasterCache;
      if (cache != null) {
        let translateMatrix = src__engine.Matrix4.identity();
        translateMatrix.setTranslationRaw(this.offset.dx, this.offset.dy, 0);
        let cacheMatrix = translateMatrix['*'](matrix);
        cache.prepare(this.picture, src__engine.Matrix4._check(cacheMatrix), this.isComplex, this.willChange);
      }
      this.paintBounds = this.picture.cullRect.shift(this.offset);
    }
    paint(context) {
      if (!(this.picture != null)) dart.assertFailed();
      if (!dart.test(this.needsPainting)) dart.assertFailed();
      context.canvas.save();
      context.canvas.translate(this.offset.dx, this.offset.dy);
      if (context.rasterCache != null) {
        let cacheMatrix = context.canvas.currentTransform;
        let result = context.rasterCache.get(this.picture, cacheMatrix);
        if (dart.test(result.isValid)) {
          result.draw(context.canvas);
          return;
        }
      }
      context.canvas.drawPicture(this.picture);
      context.canvas.restore();
    }
  };
  (src__engine.PictureLayer.new = function(picture, offset, isComplex, willChange) {
    this[picture$0] = picture;
    this[offset$2] = offset;
    this[isComplex$] = isComplex;
    this[willChange$] = willChange;
    src__engine.PictureLayer.__proto__.new.call(this);
  }).prototype = src__engine.PictureLayer.prototype;
  dart.addTypeTests(src__engine.PictureLayer);
  const picture$0 = Symbol("PictureLayer.picture");
  const offset$2 = Symbol("PictureLayer.offset");
  const isComplex$ = Symbol("PictureLayer.isComplex");
  const willChange$ = Symbol("PictureLayer.willChange");
  dart.setMethodSignature(src__engine.PictureLayer, () => ({
    __proto__: dart.getMethods(src__engine.PictureLayer.__proto__),
    preroll: dart.fnType(dart.void, [src__engine.PrerollContext, src__engine.Matrix4]),
    paint: dart.fnType(dart.void, [src__engine.PaintContext])
  }));
  dart.setFieldSignature(src__engine.PictureLayer, () => ({
    __proto__: dart.getFields(src__engine.PictureLayer.__proto__),
    picture: dart.finalFieldType(ui.Picture),
    offset: dart.finalFieldType(ui.Offset),
    isComplex: dart.finalFieldType(core.bool),
    willChange: dart.finalFieldType(core.bool)
  }));
  const _elevation = dart.privateName(src__engine, "_elevation");
  const _color$ = dart.privateName(src__engine, "_color");
  const _shadowColor = dart.privateName(src__engine, "_shadowColor");
  const _path = dart.privateName(src__engine, "_path");
  const _clipBehavior = dart.privateName(src__engine, "_clipBehavior");
  src__engine.PhysicalShapeLayer = class PhysicalShapeLayer extends src__engine.ContainerLayer {
    preroll(context, matrix) {
      this.prerollChildren(context, matrix);
      this.paintBounds = src__engine.ElevationShadow.computeShadowRect(this[_path].getBounds(), this[_elevation]);
    }
    paint(context) {
      if (!dart.test(this.needsPainting)) dart.assertFailed();
      if (this[_elevation] !== 0) {
        src__engine.PhysicalShapeLayer.drawShadow(context.canvas, this[_path], this[_shadowColor], this[_elevation], this[_color$].alpha !== 255);
      }
      let paint = (() => {
        let _ = new ui.Paint.new();
        _.color = this[_color$];
        return _;
      })().webOnlyPaintData;
      if (this[_clipBehavior] !== ui.Clip.antiAliasWithSaveLayer) {
        context.canvas.drawPath(this[_path], paint);
      }
      let saveCount = context.canvas.save();
      switch (this[_clipBehavior]) {
        case ui.Clip.hardEdge:
        {
          context.canvas.clipPath(this[_path]);
          break;
        }
        case ui.Clip.antiAlias:
        {
          context.canvas.clipPath(this[_path]);
          break;
        }
        case ui.Clip.antiAliasWithSaveLayer:
        {
          context.canvas.clipPath(this[_path]);
          context.canvas.saveLayer(this.paintBounds, null);
          break;
        }
        case ui.Clip.none:
        {
          break;
        }
      }
      if (this[_clipBehavior] === ui.Clip.antiAliasWithSaveLayer) {
        context.canvas.drawPaint(paint);
      }
      this.paintChildren(context);
      context.canvas.restoreToCount(saveCount);
    }
    static drawShadow(canvas, path, color, elevation, transparentOccluder) {
      canvas.drawShadow(path, color, elevation, transparentOccluder);
    }
  };
  (src__engine.PhysicalShapeLayer.new = function(elevation, color, shadowColor, path, clipBehavior) {
    this[_elevation] = elevation;
    this[_color$] = color;
    this[_shadowColor] = shadowColor;
    this[_path] = path;
    this[_clipBehavior] = clipBehavior;
    src__engine.PhysicalShapeLayer.__proto__.new.call(this);
  }).prototype = src__engine.PhysicalShapeLayer.prototype;
  dart.addTypeTests(src__engine.PhysicalShapeLayer);
  dart.setMethodSignature(src__engine.PhysicalShapeLayer, () => ({
    __proto__: dart.getMethods(src__engine.PhysicalShapeLayer.__proto__),
    paint: dart.fnType(dart.void, [src__engine.PaintContext])
  }));
  dart.setFieldSignature(src__engine.PhysicalShapeLayer, () => ({
    __proto__: dart.getFields(src__engine.PhysicalShapeLayer.__proto__),
    [_elevation]: dart.finalFieldType(core.double),
    [_color$]: dart.finalFieldType(ui.Color),
    [_shadowColor]: dart.finalFieldType(ui.Color),
    [_path]: dart.finalFieldType(ui.Path),
    [_clipBehavior]: dart.finalFieldType(ui.Clip)
  }));
  const _layer = dart.privateName(src__engine, "_layer");
  src__engine.EngineLayerImpl = class EngineLayerImpl extends ui.EngineLayer {};
  (src__engine.EngineLayerImpl.new = function(layer) {
    this[_layer] = layer;
  }).prototype = src__engine.EngineLayerImpl.prototype;
  dart.addTypeTests(src__engine.EngineLayerImpl);
  dart.setFieldSignature(src__engine.EngineLayerImpl, () => ({
    __proto__: dart.getFields(src__engine.EngineLayerImpl.__proto__),
    [_layer]: dart.finalFieldType(src__engine.ContainerLayer)
  }));
  src__engine.LayerScene = class LayerScene extends core.Object {
    get layerTree() {
      return this[layerTree];
    }
    set layerTree(value) {
      super.layerTree = value;
    }
    dispose() {}
    toImage(width, height) {
      return null;
    }
    get webOnlyRootElement() {
      return null;
    }
  };
  (src__engine.LayerScene.new = function(rootLayer) {
    this[layerTree] = new src__engine.LayerTree.new();
    this.layerTree.rootLayer = rootLayer;
  }).prototype = src__engine.LayerScene.prototype;
  dart.addTypeTests(src__engine.LayerScene);
  const layerTree = Symbol("LayerScene.layerTree");
  src__engine.LayerScene[dart.implements] = () => [ui.Scene];
  dart.setMethodSignature(src__engine.LayerScene, () => ({
    __proto__: dart.getMethods(src__engine.LayerScene.__proto__),
    dispose: dart.fnType(dart.void, []),
    toImage: dart.fnType(async.Future$(ui.Image), [core.int, core.int])
  }));
  dart.setGetterSignature(src__engine.LayerScene, () => ({
    __proto__: dart.getGetters(src__engine.LayerScene.__proto__),
    webOnlyRootElement: html.Element
  }));
  dart.setFieldSignature(src__engine.LayerScene, () => ({
    __proto__: dart.getFields(src__engine.LayerScene.__proto__),
    layerTree: dart.finalFieldType(src__engine.LayerTree)
  }));
  src__engine.LayerSceneBuilder = class LayerSceneBuilder extends core.Object {
    get rootLayer() {
      return this[rootLayer];
    }
    set rootLayer(value) {
      this[rootLayer] = value;
    }
    get currentLayer() {
      return this[currentLayer];
    }
    set currentLayer(value) {
      this[currentLayer] = value;
    }
    addChildScene(opts) {
      let offset = opts && 'offset' in opts ? opts.offset : ui.Offset.zero;
      let width = opts && 'width' in opts ? opts.width : 0.0;
      let height = opts && 'height' in opts ? opts.height : 0.0;
      let sceneHost = opts && 'sceneHost' in opts ? opts.sceneHost : null;
      let hitTestable = opts && 'hitTestable' in opts ? opts.hitTestable : true;
      dart.throw(new core.UnimplementedError.new());
    }
    addPerformanceOverlay(enabledOptions, bounds, opts) {
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      dart.throw(new core.UnimplementedError.new());
    }
    addPicture(offset, picture, opts) {
      let isComplexHint = opts && 'isComplexHint' in opts ? opts.isComplexHint : false;
      let willChangeHint = opts && 'willChangeHint' in opts ? opts.willChangeHint : false;
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      this.currentLayer.add(new src__engine.PictureLayer.new(picture, offset, isComplexHint, willChangeHint));
    }
    addRetained(retainedLayer) {
      if (this.currentLayer == null) return;
      this.currentLayer.add(src__engine.EngineLayerImpl.as(retainedLayer)[_layer]);
    }
    addTexture(textureId, opts) {
      let offset = opts && 'offset' in opts ? opts.offset : ui.Offset.zero;
      let width = opts && 'width' in opts ? opts.width : 0.0;
      let height = opts && 'height' in opts ? opts.height : 0.0;
      let freeze = opts && 'freeze' in opts ? opts.freeze : false;
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
    }
    addPlatformView(viewId, opts) {
      let offset = opts && 'offset' in opts ? opts.offset : ui.Offset.zero;
      let width = opts && 'width' in opts ? opts.width : 0.0;
      let height = opts && 'height' in opts ? opts.height : 0.0;
    }
    build() {
      return new src__engine.LayerScene.new(this.rootLayer);
    }
    pop() {
      if (this.currentLayer == null) return;
      this.currentLayer = this.currentLayer.parent;
    }
    pushBackdropFilter(filter, opts) {
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      dart.throw(new core.UnimplementedError.new());
    }
    pushClipPath(path, opts) {
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : ui.Clip.antiAlias;
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      this.pushLayer(new src__engine.ClipPathLayer.new(path));
      return null;
    }
    pushClipRRect(rrect, opts) {
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      this.pushLayer(new src__engine.ClipRRectLayer.new(rrect));
      return null;
    }
    pushClipRect(rect, opts) {
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : ui.Clip.antiAlias;
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      this.pushLayer(new src__engine.ClipRectLayer.new(rect));
      return null;
    }
    pushColorFilter(color, blendMode, opts) {
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      dart.throw(new core.UnimplementedError.new());
    }
    pushOffset(dx, dy, opts) {
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      let matrix = src__engine.Matrix4.translationValues(dx, dy, 0.0);
      let layer = new src__engine.TransformLayer.new(matrix);
      this.pushLayer(layer);
      return new src__engine.EngineLayerImpl.new(layer);
    }
    pushOpacity(alpha, opts) {
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      let offset = opts && 'offset' in opts ? opts.offset : ui.Offset.zero;
      this.pushOffset(0.0, 0.0);
      return null;
    }
    pushPhysicalShape(opts) {
      let path = opts && 'path' in opts ? opts.path : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : ui.Clip.none;
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      let layer = new src__engine.PhysicalShapeLayer.new(elevation, color, shadowColor, path, clipBehavior);
      this.pushLayer(layer);
      return new src__engine.EngineLayerImpl.new(layer);
    }
    pushShaderMask(shader, maskRect, blendMode, opts) {
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      dart.throw(new core.UnimplementedError.new());
    }
    pushTransform(matrix4, opts) {
      let webOnlyPaintedBy = opts && 'webOnlyPaintedBy' in opts ? opts.webOnlyPaintedBy : null;
      let matrix = src__engine.Matrix4.fromList(matrix4);
      this.pushLayer(new src__engine.TransformLayer.new(matrix));
      return null;
    }
    setCheckerboardOffscreenLayers(checkerboard) {}
    setCheckerboardRasterCacheImages(checkerboard) {}
    setRasterizerTracingThreshold(frameInterval) {}
    pushLayer(layer) {
      if (this.rootLayer == null) {
        this.rootLayer = this.currentLayer = layer;
        return;
      }
      if (this.currentLayer == null) return;
      this.currentLayer.add(layer);
      this.currentLayer = layer;
    }
  };
  (src__engine.LayerSceneBuilder.new = function() {
    this[rootLayer] = null;
    this[currentLayer] = null;
  }).prototype = src__engine.LayerSceneBuilder.prototype;
  dart.addTypeTests(src__engine.LayerSceneBuilder);
  const rootLayer = Symbol("LayerSceneBuilder.rootLayer");
  const currentLayer = Symbol("LayerSceneBuilder.currentLayer");
  src__engine.LayerSceneBuilder[dart.implements] = () => [ui.SceneBuilder];
  dart.setMethodSignature(src__engine.LayerSceneBuilder, () => ({
    __proto__: dart.getMethods(src__engine.LayerSceneBuilder.__proto__),
    addChildScene: dart.fnType(dart.void, [], {offset: ui.Offset, width: core.double, height: core.double, sceneHost: ui.SceneHost, hitTestable: core.bool}),
    addPerformanceOverlay: dart.fnType(dart.void, [core.int, ui.Rect], {webOnlyPaintedBy: core.Object}),
    addPicture: dart.fnType(dart.void, [ui.Offset, ui.Picture], {isComplexHint: core.bool, willChangeHint: core.bool, webOnlyPaintedBy: core.Object}),
    addRetained: dart.fnType(dart.void, [ui.EngineLayer]),
    addTexture: dart.fnType(dart.void, [core.int], {offset: ui.Offset, width: core.double, height: core.double, freeze: core.bool, webOnlyPaintedBy: core.Object}),
    addPlatformView: dart.fnType(dart.void, [core.int], {offset: ui.Offset, width: core.double, height: core.double}),
    build: dart.fnType(ui.Scene, []),
    pop: dart.fnType(dart.void, []),
    pushBackdropFilter: dart.fnType(ui.EngineLayer, [ui.ImageFilter], {webOnlyPaintedBy: core.Object}),
    pushClipPath: dart.fnType(ui.EngineLayer, [ui.Path], {clipBehavior: ui.Clip, webOnlyPaintedBy: core.Object}),
    pushClipRRect: dart.fnType(ui.EngineLayer, [ui.RRect], {clipBehavior: ui.Clip, webOnlyPaintedBy: core.Object}),
    pushClipRect: dart.fnType(ui.EngineLayer, [ui.Rect], {clipBehavior: ui.Clip, webOnlyPaintedBy: core.Object}),
    pushColorFilter: dart.fnType(ui.EngineLayer, [ui.Color, ui.BlendMode], {webOnlyPaintedBy: core.Object}),
    pushOffset: dart.fnType(ui.EngineLayer, [core.double, core.double], {webOnlyPaintedBy: core.Object}),
    pushOpacity: dart.fnType(ui.EngineLayer, [core.int], {webOnlyPaintedBy: core.Object, offset: ui.Offset}),
    pushPhysicalShape: dart.fnType(ui.EngineLayer, [], {path: ui.Path, elevation: core.double, color: ui.Color, shadowColor: ui.Color, clipBehavior: ui.Clip, webOnlyPaintedBy: core.Object}),
    pushShaderMask: dart.fnType(ui.EngineLayer, [ui.Shader, ui.Rect, ui.BlendMode], {webOnlyPaintedBy: core.Object}),
    pushTransform: dart.fnType(ui.EngineLayer, [typed_data.Float64List], {webOnlyPaintedBy: core.Object}),
    setCheckerboardOffscreenLayers: dart.fnType(dart.void, [core.bool]),
    setCheckerboardRasterCacheImages: dart.fnType(dart.void, [core.bool]),
    setRasterizerTracingThreshold: dart.fnType(dart.void, [core.int]),
    pushLayer: dart.fnType(dart.void, [src__engine.ContainerLayer])
  }));
  dart.setFieldSignature(src__engine.LayerSceneBuilder, () => ({
    __proto__: dart.getFields(src__engine.LayerSceneBuilder.__proto__),
    rootLayer: dart.fieldType(src__engine.Layer),
    currentLayer: dart.fieldType(src__engine.ContainerLayer)
  }));
  src__engine.LayerTree = class LayerTree extends core.Object {
    get rootLayer() {
      return this[rootLayer$];
    }
    set rootLayer(value) {
      this[rootLayer$] = value;
    }
    get frameSize() {
      return this[frameSize];
    }
    set frameSize(value) {
      this[frameSize] = value;
    }
    preroll(frame, opts) {
      let ignoreRasterCache = opts && 'ignoreRasterCache' in opts ? opts.ignoreRasterCache : false;
      let context = new src__engine.PrerollContext.new(dart.test(ignoreRasterCache) ? null : frame.rasterCache);
      this.rootLayer.preroll(context, src__engine.Matrix4.identity());
    }
    paint(frame, opts) {
      let ignoreRasterCache = opts && 'ignoreRasterCache' in opts ? opts.ignoreRasterCache : false;
      let context = new src__engine.PaintContext.new(frame.canvas, dart.test(ignoreRasterCache) ? null : frame.rasterCache);
      if (dart.test(this.rootLayer.needsPainting)) {
        this.rootLayer.paint(context);
      }
    }
  };
  (src__engine.LayerTree.new = function() {
    this[rootLayer$] = null;
    this[frameSize] = null;
  }).prototype = src__engine.LayerTree.prototype;
  dart.addTypeTests(src__engine.LayerTree);
  const rootLayer$ = Symbol("LayerTree.rootLayer");
  const frameSize = Symbol("LayerTree.frameSize");
  dart.setMethodSignature(src__engine.LayerTree, () => ({
    __proto__: dart.getMethods(src__engine.LayerTree.__proto__),
    preroll: dart.fnType(dart.void, [src__engine.Frame], {ignoreRasterCache: core.bool}),
    paint: dart.fnType(dart.void, [src__engine.Frame], {ignoreRasterCache: core.bool})
  }));
  dart.setFieldSignature(src__engine.LayerTree, () => ({
    __proto__: dart.getFields(src__engine.LayerTree.__proto__),
    rootLayer: dart.fieldType(src__engine.Layer),
    frameSize: dart.fieldType(ui.Size)
  }));
  src__engine.Frame = class Frame extends core.Object {
    get canvas() {
      return this[canvas$0];
    }
    set canvas(value) {
      super.canvas = value;
    }
    get rasterCache() {
      return this[rasterCache$1];
    }
    set rasterCache(value) {
      super.rasterCache = value;
    }
    raster(layerTree, opts) {
      let ignoreRasterCache = opts && 'ignoreRasterCache' in opts ? opts.ignoreRasterCache : false;
      layerTree.preroll(this, {ignoreRasterCache: ignoreRasterCache});
      layerTree.paint(this, {ignoreRasterCache: ignoreRasterCache});
      return true;
    }
  };
  (src__engine.Frame.new = function(canvas, rasterCache) {
    this[canvas$0] = canvas;
    this[rasterCache$1] = rasterCache;
  }).prototype = src__engine.Frame.prototype;
  dart.addTypeTests(src__engine.Frame);
  const canvas$0 = Symbol("Frame.canvas");
  const rasterCache$1 = Symbol("Frame.rasterCache");
  dart.setMethodSignature(src__engine.Frame, () => ({
    __proto__: dart.getMethods(src__engine.Frame.__proto__),
    raster: dart.fnType(core.bool, [src__engine.LayerTree], {ignoreRasterCache: core.bool})
  }));
  dart.setFieldSignature(src__engine.Frame, () => ({
    __proto__: dart.getFields(src__engine.Frame.__proto__),
    canvas: dart.finalFieldType(src__engine.BitmapCanvas),
    rasterCache: dart.finalFieldType(src__engine.RasterCache)
  }));
  src__engine.CompositorContext = class CompositorContext extends core.Object {
    get rasterCache() {
      return this[rasterCache];
    }
    set rasterCache(value) {
      this[rasterCache] = value;
    }
    acquireFrame(canvas) {
      return new src__engine.Frame.new(canvas, this.rasterCache);
    }
  };
  (src__engine.CompositorContext.new = function() {
    this[rasterCache] = null;
  }).prototype = src__engine.CompositorContext.prototype;
  dart.addTypeTests(src__engine.CompositorContext);
  const rasterCache = Symbol("CompositorContext.rasterCache");
  dart.setMethodSignature(src__engine.CompositorContext, () => ({
    __proto__: dart.getMethods(src__engine.CompositorContext.__proto__),
    acquireFrame: dart.fnType(src__engine.Frame, [src__engine.BitmapCanvas])
  }));
  dart.setFieldSignature(src__engine.CompositorContext, () => ({
    __proto__: dart.getFields(src__engine.CompositorContext.__proto__),
    rasterCache: dart.fieldType(src__engine.RasterCache)
  }));
  src__engine.RasterCache = class RasterCache extends core.Object {
    prepare(picture, matrix, isComplex, willChange) {}
    get(picture, matrix) {
      return new src__engine.RasterCacheResult.new();
    }
  };
  (src__engine.RasterCache.new = function() {
  }).prototype = src__engine.RasterCache.prototype;
  dart.addTypeTests(src__engine.RasterCache);
  dart.setMethodSignature(src__engine.RasterCache, () => ({
    __proto__: dart.getMethods(src__engine.RasterCache.__proto__),
    prepare: dart.fnType(dart.void, [ui.Picture, src__engine.Matrix4, core.bool, core.bool]),
    get: dart.fnType(src__engine.RasterCacheResult, [ui.Picture, src__engine.Matrix4])
  }));
  src__engine.RasterCacheResult = class RasterCacheResult extends core.Object {
    get isValid() {
      return false;
    }
    draw(canvas) {}
  };
  (src__engine.RasterCacheResult.new = function() {
  }).prototype = src__engine.RasterCacheResult.prototype;
  dart.addTypeTests(src__engine.RasterCacheResult);
  dart.setMethodSignature(src__engine.RasterCacheResult, () => ({
    __proto__: dart.getMethods(src__engine.RasterCacheResult.__proto__),
    draw: dart.fnType(dart.void, [src__engine.BitmapCanvas])
  }));
  dart.setGetterSignature(src__engine.RasterCacheResult, () => ({
    __proto__: dart.getGetters(src__engine.RasterCacheResult.__proto__),
    isValid: core.bool
  }));
  src__engine.Rasterizer = class Rasterizer extends core.Object {
    get surface() {
      return this[surface$];
    }
    set surface(value) {
      super.surface = value;
    }
    get context() {
      return this[context];
    }
    set context(value) {
      super.context = value;
    }
    draw(layerTree) {
      let frame = this.surface.acquireFrame(ui.window.physicalSize);
      let canvas = frame.canvas;
      let compositorFrame = this.context.acquireFrame(canvas);
      canvas.clear();
      compositorFrame.raster(layerTree, {ignoreRasterCache: true});
      frame.submit();
    }
  };
  (src__engine.Rasterizer.new = function(surface) {
    this[context] = new src__engine.CompositorContext.new();
    this[surface$] = surface;
  }).prototype = src__engine.Rasterizer.prototype;
  dart.addTypeTests(src__engine.Rasterizer);
  const surface$ = Symbol("Rasterizer.surface");
  const context = Symbol("Rasterizer.context");
  dart.setMethodSignature(src__engine.Rasterizer, () => ({
    __proto__: dart.getMethods(src__engine.Rasterizer.__proto__),
    draw: dart.fnType(dart.void, [src__engine.LayerTree])
  }));
  dart.setFieldSignature(src__engine.Rasterizer, () => ({
    __proto__: dart.getFields(src__engine.Rasterizer.__proto__),
    surface: dart.finalFieldType(src__engine.Surface),
    context: dart.finalFieldType(src__engine.CompositorContext)
  }));
  src__engine.SurfaceFrame = class SurfaceFrame extends core.Object {
    get submitFn() {
      return this[submitFn$];
    }
    set submitFn(value) {
      super.submitFn = value;
    }
    get canvas() {
      return this[canvas$1];
    }
    set canvas(value) {
      super.canvas = value;
    }
    submit() {
      this.submitFn(this.canvas);
    }
  };
  (src__engine.SurfaceFrame.new = function(submitFn, canvas) {
    this[submitFn$] = submitFn;
    this[canvas$1] = canvas;
  }).prototype = src__engine.SurfaceFrame.prototype;
  dart.addTypeTests(src__engine.SurfaceFrame);
  const submitFn$ = Symbol("SurfaceFrame.submitFn");
  const canvas$1 = Symbol("SurfaceFrame.canvas");
  dart.setMethodSignature(src__engine.SurfaceFrame, () => ({
    __proto__: dart.getMethods(src__engine.SurfaceFrame.__proto__),
    submit: dart.fnType(dart.void, [])
  }));
  dart.setFieldSignature(src__engine.SurfaceFrame, () => ({
    __proto__: dart.getFields(src__engine.SurfaceFrame.__proto__),
    submitFn: dart.finalFieldType(BitmapCanvasTovoid()),
    canvas: dart.finalFieldType(src__engine.BitmapCanvas)
  }));
  src__engine.Surface = class Surface extends core.Object {
    get canvasCache() {
      return this[canvasCache];
    }
    set canvasCache(value) {
      super.canvasCache = value;
    }
    get submitFunction() {
      return this[submitFunction$];
    }
    set submitFunction(value) {
      super.submitFunction = value;
    }
    acquireFrame(size) {
      let canvas = this.canvasCache.acquireCanvas(size);
      return new src__engine.SurfaceFrame.new(this.submitFunction, canvas);
    }
    get rootTransformation() {
      return null;
    }
  };
  (src__engine.Surface.new = function(submitFunction) {
    this[canvasCache] = new src__engine._CanvasCache.new();
    this[submitFunction$] = submitFunction;
  }).prototype = src__engine.Surface.prototype;
  dart.addTypeTests(src__engine.Surface);
  const canvasCache = Symbol("Surface.canvasCache");
  const submitFunction$ = Symbol("Surface.submitFunction");
  dart.setMethodSignature(src__engine.Surface, () => ({
    __proto__: dart.getMethods(src__engine.Surface.__proto__),
    acquireFrame: dart.fnType(src__engine.SurfaceFrame, [ui.Size])
  }));
  dart.setGetterSignature(src__engine.Surface, () => ({
    __proto__: dart.getGetters(src__engine.Surface.__proto__),
    rootTransformation: src__engine.Matrix4
  }));
  dart.setFieldSignature(src__engine.Surface, () => ({
    __proto__: dart.getFields(src__engine.Surface.__proto__),
    canvasCache: dart.finalFieldType(src__engine._CanvasCache),
    submitFunction: dart.finalFieldType(BitmapCanvasTovoid())
  }));
  src__engine._CanvasCache = class _CanvasCache extends core.Object {
    acquireCanvas(size) {
      if (!(size != null)) dart.assertFailed();
      if (dart.equals(size, (() => {
        let t = this[_canvas$];
        return t == null ? null : t.size;
      })())) return this[_canvas$];
      this[_canvas$] = new src__engine.BitmapCanvas.new(ui.Offset.zero['&'](size));
      return this[_canvas$];
    }
  };
  (src__engine._CanvasCache.new = function() {
    this[_canvas$] = null;
  }).prototype = src__engine._CanvasCache.prototype;
  dart.addTypeTests(src__engine._CanvasCache);
  dart.setMethodSignature(src__engine._CanvasCache, () => ({
    __proto__: dart.getMethods(src__engine._CanvasCache.__proto__),
    acquireCanvas: dart.fnType(src__engine.BitmapCanvas, [ui.Size])
  }));
  dart.setFieldSignature(src__engine._CanvasCache, () => ({
    __proto__: dart.getFields(src__engine._CanvasCache.__proto__),
    [_canvas$]: dart.fieldType(src__engine.BitmapCanvas)
  }));
  src__engine.ViewportMetrics = class ViewportMetrics extends core.Object {
    get devicePixelRatio() {
      return this[devicePixelRatio$];
    }
    set devicePixelRatio(value) {
      super.devicePixelRatio = value;
    }
    get physicalWidth() {
      return this[physicalWidth$];
    }
    set physicalWidth(value) {
      super.physicalWidth = value;
    }
    get physicalHeight() {
      return this[physicalHeight$];
    }
    set physicalHeight(value) {
      super.physicalHeight = value;
    }
  };
  (src__engine.ViewportMetrics.new = function(devicePixelRatio, physicalWidth, physicalHeight) {
    this[devicePixelRatio$] = devicePixelRatio;
    this[physicalWidth$] = physicalWidth;
    this[physicalHeight$] = physicalHeight;
  }).prototype = src__engine.ViewportMetrics.prototype;
  dart.addTypeTests(src__engine.ViewportMetrics);
  const devicePixelRatio$ = Symbol("ViewportMetrics.devicePixelRatio");
  const physicalWidth$ = Symbol("ViewportMetrics.physicalWidth");
  const physicalHeight$ = Symbol("ViewportMetrics.physicalHeight");
  dart.setFieldSignature(src__engine.ViewportMetrics, () => ({
    __proto__: dart.getFields(src__engine.ViewportMetrics.__proto__),
    devicePixelRatio: dart.finalFieldType(core.double),
    physicalWidth: dart.finalFieldType(core.double),
    physicalHeight: dart.finalFieldType(core.double)
  }));
  src__engine.PlatformMessage = class PlatformMessage extends core.Object {
    get channel() {
      return this[channel$];
    }
    set channel(value) {
      super.channel = value;
    }
    get data() {
      return this[data$0];
    }
    set data(value) {
      super.data = value;
    }
    get response() {
      return this[response$];
    }
    set response(value) {
      super.response = value;
    }
  };
  (src__engine.PlatformMessage.new = function(channel, data, response) {
    this[channel$] = channel;
    this[data$0] = data;
    this[response$] = response;
  }).prototype = src__engine.PlatformMessage.prototype;
  dart.addTypeTests(src__engine.PlatformMessage);
  const channel$ = Symbol("PlatformMessage.channel");
  const data$0 = Symbol("PlatformMessage.data");
  const response$ = Symbol("PlatformMessage.response");
  dart.setFieldSignature(src__engine.PlatformMessage, () => ({
    __proto__: dart.getFields(src__engine.PlatformMessage.__proto__),
    channel: dart.finalFieldType(core.String),
    data: dart.finalFieldType(typed_data.ByteData),
    response: dart.finalFieldType(src__engine.PlatformMessageResponse)
  }));
  src__engine.PlatformMessageResponse = class PlatformMessageResponse extends core.Object {
    complete(data) {}
    completeEmpty() {}
  };
  (src__engine.PlatformMessageResponse.new = function() {
  }).prototype = src__engine.PlatformMessageResponse.prototype;
  dart.addTypeTests(src__engine.PlatformMessageResponse);
  dart.setMethodSignature(src__engine.PlatformMessageResponse, () => ({
    __proto__: dart.getMethods(src__engine.PlatformMessageResponse.__proto__),
    complete: dart.fnType(dart.void, [typed_data.Uint8List]),
    completeEmpty: dart.fnType(dart.void, [])
  }));
  const _computeSubdivisionCount = dart.privateName(src__engine, "_computeSubdivisionCount");
  const _chop = dart.privateName(src__engine, "_chop");
  src__engine.Conic = class Conic extends core.Object {
    get p0x() {
      return this[p0x$];
    }
    set p0x(value) {
      this[p0x$] = value;
    }
    get p0y() {
      return this[p0y$];
    }
    set p0y(value) {
      this[p0y$] = value;
    }
    get p1x() {
      return this[p1x$];
    }
    set p1x(value) {
      this[p1x$] = value;
    }
    get p1y() {
      return this[p1y$];
    }
    set p1y(value) {
      this[p1y$] = value;
    }
    get p2x() {
      return this[p2x$];
    }
    set p2x(value) {
      this[p2x$] = value;
    }
    get p2y() {
      return this[p2y$];
    }
    set p2y(value) {
      this[p2y$] = value;
    }
    get fW() {
      return this[fW$];
    }
    set fW(value) {
      super.fW = value;
    }
    toQuads() {
      let pointList = JSArrayOfOffset().of([]);
      let conicTolerance = 1.0 / 4.0;
      let subdivideCount = this[_computeSubdivisionCount](conicTolerance);
      if (!(dart.notNull(subdivideCount) > 0)) dart.assertFailed();
      let quadCount = (1)[$leftShift](subdivideCount);
      let skipSubdivide = false;
      pointList[$add](new ui.Offset.new(this.p0x, this.p0y));
      if (subdivideCount === 5) {
        let dst = ListOfConic().new(2);
        this[_chop](dst);
        let conic0 = dst[$_get](0);
        let conic1 = dst[$_get](1);
        if (conic0.p1x == conic0.p2x && conic0.p1y == conic0.p2y && conic1.p0x == conic1.p1x && conic1.p0y == conic1.p1y) {
          let controlPointOffset = new ui.Offset.new(conic0.p1x, conic0.p1y);
          pointList[$add](controlPointOffset);
          pointList[$add](controlPointOffset);
          pointList[$add](controlPointOffset);
          pointList[$add](new ui.Offset.new(conic1.p2x, conic1.p2y));
          quadCount = 2;
          skipSubdivide = true;
        }
      }
      if (!skipSubdivide) {
        src__engine.Conic._subdivide(this, subdivideCount, pointList);
      }
      let pointCount = 2 * quadCount + 1;
      let hasNonFinitePoints = false;
      for (let p = 0; p < pointCount; ++p) {
        if (pointList[$_get](p).dx[$isNaN] || pointList[$_get](p).dy[$isNaN]) {
          hasNonFinitePoints = true;
          break;
        }
      }
      if (hasNonFinitePoints) {
        for (let p = 1; p < pointCount - 1; ++p) {
          pointList[$_set](p, new ui.Offset.new(this.p1x, this.p1y));
        }
      }
      return pointList;
    }
    static _between(a, b, c) {
      return (dart.notNull(a) - dart.notNull(b)) * (dart.notNull(c) - dart.notNull(b)) <= 0;
    }
    static _subdivide(src, level, pointList) {
      if (!(dart.notNull(level) >= 0)) dart.assertFailed();
      if (0 === level) {
        pointList[$add](new ui.Offset.new(src.p1x, src.p1y));
        pointList[$add](new ui.Offset.new(src.p2x, src.p2y));
        return;
      }
      let dst = ListOfConic().new(2);
      src[_chop](dst);
      let conic0 = dst[$_get](0);
      let conic1 = dst[$_get](1);
      let startY = src.p0y;
      let endY = src.p2y;
      let cpY = src.p1y;
      if (dart.test(src__engine.Conic._between(startY, cpY, endY))) {
        let midY = conic0.p2y;
        if (!dart.test(src__engine.Conic._between(startY, midY, endY))) {
          let closerY = (dart.notNull(midY) - dart.notNull(startY))[$abs]() < (dart.notNull(midY) - dart.notNull(endY))[$abs]() ? startY : endY;
          conic0.p2y = conic1.p0y = closerY;
        }
        if (!dart.test(src__engine.Conic._between(startY, conic0.p1y, conic0.p2y))) {
          conic0.p1y = startY;
        }
        if (!dart.test(src__engine.Conic._between(conic1.p0y, conic1.p1y, endY))) {
          conic1.p1y = endY;
        }
        if (!dart.test(src__engine.Conic._between(startY, conic0.p1y, conic0.p2y))) dart.assertFailed();
        if (!dart.test(src__engine.Conic._between(conic0.p1y, conic0.p2y, conic1.p1y))) dart.assertFailed();
        if (!dart.test(src__engine.Conic._between(conic0.p2y, conic1.p1y, endY))) dart.assertFailed();
      }
      level = dart.notNull(level) - 1;
      src__engine.Conic._subdivide(conic0, level, pointList);
      src__engine.Conic._subdivide(conic1, level, pointList);
    }
    static _subdivideWeightValue(w) {
      return math.sqrt(0.5 + dart.notNull(w) * 0.5);
    }
    [_chop](dst) {
      let scale = 1.0 / (1.0 + dart.notNull(this.fW));
      let newW = src__engine.Conic._subdivideWeightValue(this.fW);
      let wp1 = new ui.Offset.new(dart.notNull(this.fW) * dart.notNull(this.p1x), dart.notNull(this.fW) * dart.notNull(this.p1y));
      let m = new ui.Offset.new((dart.notNull(this.p0x) + 2 * dart.notNull(wp1.dx) + dart.notNull(this.p2x)) * scale * 0.5, (dart.notNull(this.p0y) + 2 * dart.notNull(wp1.dy) + dart.notNull(this.p2y)) * scale * 0.5);
      if (m.dx[$isNaN] || m.dy[$isNaN]) {
        let w2 = dart.notNull(this.fW) * 2;
        let scaleHalf = 1.0 / (1 + dart.notNull(this.fW)) * 0.5;
        m = new ui.Offset.new((dart.notNull(this.p0x) + w2 * dart.notNull(this.p1x) + dart.notNull(this.p2x)) * scaleHalf, (dart.notNull(this.p0y) + w2 * dart.notNull(this.p1y) + dart.notNull(this.p2y)) * scaleHalf);
      }
      dst[$_set](0, new src__engine.Conic.new(this.p0x, this.p0y, (dart.notNull(this.p0x) + dart.notNull(wp1.dx)) * scale, (dart.notNull(this.p0y) + dart.notNull(wp1.dy)) * scale, m.dx, m.dy, newW));
      dst[$_set](1, new src__engine.Conic.new(m.dx, m.dy, (dart.notNull(this.p2x) + dart.notNull(wp1.dx)) * scale, (dart.notNull(this.p2y) + dart.notNull(wp1.dy)) * scale, this.p2x, this.p2y, newW));
    }
    [_computeSubdivisionCount](tolerance) {
      if (!tolerance[$isFinite]) dart.assertFailed();
      if (!(this.p0x[$isFinite] && this.p1x[$isFinite] && this.p2x[$isFinite] && this.p0y[$isFinite] && this.p1y[$isFinite] && this.p2y[$isFinite])) dart.assertFailed();
      if (dart.notNull(tolerance) < 0) {
        return 0;
      }
      let a = dart.notNull(this.fW) - 1;
      let k = a / (4.0 * (2.0 + a));
      let x = k * (dart.notNull(this.p0x) - 2 * dart.notNull(this.p1x) + dart.notNull(this.p2x));
      let y = k * (dart.notNull(this.p0y) - 2 * dart.notNull(this.p1y) + dart.notNull(this.p2y));
      let error = math.sqrt(x * x + y * y);
      let pow2 = 0;
      for (; pow2 < 5; ++pow2) {
        if (error <= dart.notNull(tolerance)) {
          break;
        }
        error = error * 0.25;
      }
      return pow2;
    }
  };
  (src__engine.Conic.new = function(p0x, p0y, p1x, p1y, p2x, p2y, fW) {
    this[p0x$] = p0x;
    this[p0y$] = p0y;
    this[p1x$] = p1x;
    this[p1y$] = p1y;
    this[p2x$] = p2x;
    this[p2y$] = p2y;
    this[fW$] = fW;
  }).prototype = src__engine.Conic.prototype;
  dart.addTypeTests(src__engine.Conic);
  const p0x$ = Symbol("Conic.p0x");
  const p0y$ = Symbol("Conic.p0y");
  const p1x$ = Symbol("Conic.p1x");
  const p1y$ = Symbol("Conic.p1y");
  const p2x$ = Symbol("Conic.p2x");
  const p2y$ = Symbol("Conic.p2y");
  const fW$ = Symbol("Conic.fW");
  dart.setMethodSignature(src__engine.Conic, () => ({
    __proto__: dart.getMethods(src__engine.Conic.__proto__),
    toQuads: dart.fnType(core.List$(ui.Offset), []),
    [_chop]: dart.fnType(dart.void, [core.List$(src__engine.Conic)]),
    [_computeSubdivisionCount]: dart.fnType(core.int, [core.double])
  }));
  dart.setFieldSignature(src__engine.Conic, () => ({
    __proto__: dart.getFields(src__engine.Conic.__proto__),
    p0x: dart.fieldType(core.double),
    p0y: dart.fieldType(core.double),
    p1x: dart.fieldType(core.double),
    p1y: dart.fieldType(core.double),
    p2x: dart.fieldType(core.double),
    p2y: dart.fieldType(core.double),
    fW: dart.finalFieldType(core.double)
  }));
  dart.defineLazy(src__engine.Conic, {
    /*src__engine.Conic._maxSubdivisionCount*/get _maxSubdivisionCount() {
      return 5;
    }
  });
  const _elementStack = dart.privateName(src__engine, "_elementStack");
  src__engine.SaveElementStackTracking = class SaveElementStackTracking extends core.Object {};
  src__engine.SaveElementStackTracking[dart.mixinOn] = EngineCanvas => class SaveElementStackTracking extends EngineCanvas {
    get currentElement() {
      return dart.test(this[_elementStack][$isEmpty]) ? this.rootElement : this[_elementStack][$last];
    }
    pushElement(element) {
      this[_elementStack][$add](element);
    }
    clear() {
      this[_saveStack][$clear]();
      this[_elementStack][$clear]();
      this[_currentTransform] = src__engine.Matrix4.identity();
    }
    get currentTransform() {
      return this[_currentTransform];
    }
    save() {
      this[_saveStack][$add](new src__engine._SaveElementStackEntry.new({savedElement: this.currentElement, transform: this[_currentTransform].clone()}));
    }
    restore() {
      if (dart.test(this[_saveStack][$isEmpty])) {
        return;
      }
      let entry = this[_saveStack][$removeLast]();
      this[_currentTransform] = entry.transform;
      while (!dart.equals(this.currentElement, entry.savedElement)) {
        this[_elementStack][$removeLast]();
      }
    }
    translate(dx, dy) {
      this[_currentTransform].translate(dx, dy);
    }
    scale(sx, sy) {
      this[_currentTransform].scale(sx, sy);
    }
    rotate(radians) {
      this[_currentTransform].rotate(src__engine.SaveElementStackTracking._unitZ, radians);
    }
    skew(sx, sy) {
      let skewMatrix = src__engine.Matrix4.identity();
      let storage = skewMatrix.storage;
      storage[$_set](1, sy);
      storage[$_set](4, sx);
      this[_currentTransform].multiply(skewMatrix);
    }
    transform(matrix4) {
      this[_currentTransform].multiply(new src__engine.Matrix4.fromFloat64List(matrix4));
    }
  };
  (src__engine.SaveElementStackTracking.new = function() {
    this[_saveStack] = JSArrayOf_SaveElementStackEntry().of([]);
    this[_elementStack] = JSArrayOfElement().of([]);
    this[_currentTransform] = src__engine.Matrix4.identity();
  }).prototype = src__engine.SaveElementStackTracking.prototype;
  dart.addTypeTests(src__engine.SaveElementStackTracking);
  src__engine.SaveElementStackTracking[dart.implements] = () => [src__engine.EngineCanvas];
  dart.setMethodSignature(src__engine.SaveElementStackTracking, () => ({
    __proto__: dart.getMethods(src__engine.SaveElementStackTracking.__proto__),
    pushElement: dart.fnType(dart.void, [html.Element]),
    clear: dart.fnType(dart.void, []),
    save: dart.fnType(dart.void, []),
    restore: dart.fnType(dart.void, []),
    translate: dart.fnType(dart.void, [core.double, core.double]),
    scale: dart.fnType(dart.void, [core.double, core.double]),
    rotate: dart.fnType(dart.void, [core.double]),
    skew: dart.fnType(dart.void, [core.double, core.double]),
    transform: dart.fnType(dart.void, [typed_data.Float64List])
  }));
  dart.setGetterSignature(src__engine.SaveElementStackTracking, () => ({
    __proto__: dart.getGetters(src__engine.SaveElementStackTracking.__proto__),
    currentElement: html.Element,
    currentTransform: src__engine.Matrix4
  }));
  dart.setFieldSignature(src__engine.SaveElementStackTracking, () => ({
    __proto__: dart.getFields(src__engine.SaveElementStackTracking.__proto__),
    [_saveStack]: dart.finalFieldType(ListOf_SaveElementStackEntry()),
    [_elementStack]: dart.finalFieldType(ListOfElement()),
    [_currentTransform]: dart.fieldType(src__engine.Matrix4)
  }));
  dart.defineLazy(src__engine.SaveElementStackTracking, {
    /*src__engine.SaveElementStackTracking._unitZ*/get _unitZ() {
      return src__engine.Vector3.new(0.0, 0.0, 1.0);
    }
  });
  const EngineCanvas_SaveElementStackTracking$ = class EngineCanvas_SaveElementStackTracking extends src__engine.EngineCanvas {};
  (EngineCanvas_SaveElementStackTracking$.new = function() {
    src__engine.SaveElementStackTracking.new.call(this);
  }).prototype = EngineCanvas_SaveElementStackTracking$.prototype;
  dart.applyMixin(EngineCanvas_SaveElementStackTracking$, src__engine.SaveElementStackTracking);
  src__engine.DomCanvas = class DomCanvas extends EngineCanvas_SaveElementStackTracking$ {
    get rootElement() {
      return this[rootElement$0];
    }
    set rootElement(value) {
      super.rootElement = value;
    }
    clear() {
      super.clear();
      src__engine.domRenderer.clearDom(this.rootElement);
    }
    clipRect(rect) {
      dart.throw(new core.UnimplementedError.new());
    }
    clipRRect(rrect) {
      dart.throw(new core.UnimplementedError.new());
    }
    clipPath(path) {
      dart.throw(new core.UnimplementedError.new());
    }
    drawColor(color, blendMode) {
      let box = html.Element.tag("draw-color");
      box.style[$position] = "absolute";
      box.style[$top] = "0";
      box.style[$right] = "0";
      box.style[$bottom] = "0";
      box.style[$left] = "0";
      box.style[$backgroundColor] = color.toCssString();
      this.currentElement[$append](box);
    }
    drawLine(p1, p2, paint) {
      dart.throw(new core.UnimplementedError.new());
    }
    drawPaint(paint) {
      dart.throw(new core.UnimplementedError.new());
    }
    drawRect(rect, paint) {
      if (!(paint.shader == null)) dart.assertFailed();
      let rectangle = html.Element.tag("draw-rect");
      if (!dart.test(dart.fn(() => {
        rectangle[$setAttribute]("flt-rect", dart.str(rect));
        rectangle[$setAttribute]("flt-paint", dart.str(paint));
        return true;
      }, VoidTobool())())) dart.assertFailed();
      let effectiveTransform = null;
      let isStroke = paint.style === ui.PaintingStyle.stroke;
      let left = math.min(core.double, rect.left, rect.right);
      let right = math.max(core.double, rect.left, rect.right);
      let top = math.min(core.double, rect.top, rect.bottom);
      let bottom = math.max(core.double, rect.top, rect.bottom);
      if (dart.test(this.currentTransform.isIdentity())) {
        if (isStroke) {
          effectiveTransform = "translate(" + dart.str(left - dart.notNull(paint.strokeWidth) / 2.0) + "px, " + dart.str(top - dart.notNull(paint.strokeWidth) / 2.0) + "px)";
        } else {
          effectiveTransform = "translate(" + dart.str(left) + "px, " + dart.str(top) + "px)";
        }
      } else {
        let translated = this.currentTransform.clone();
        if (isStroke) {
          translated.translate(left - dart.notNull(paint.strokeWidth) / 2.0, top - dart.notNull(paint.strokeWidth) / 2.0);
        } else {
          translated.translate(left, top);
        }
        effectiveTransform = src__engine.matrix4ToCssTransform(translated);
      }
      let style = rectangle.style;
      style[$position] = "absolute";
      style[$transformOrigin] = "0 0 0";
      style[$transform] = effectiveTransform;
      let t = paint.color;
      let l = t == null ? null : t.toCssString();
      let cssColor = l != null ? l : "#000000";
      if (paint.maskFilter != null) {
        style[$filter] = "blur(" + dart.str(paint.maskFilter.webOnlySigma) + "px)";
      }
      if (isStroke) {
        style[$width] = dart.str(right - left - dart.notNull(paint.strokeWidth)) + "px";
        style[$height] = dart.str(bottom - top - dart.notNull(paint.strokeWidth)) + "px";
        style[$border] = dart.str(paint.strokeWidth) + "px solid " + cssColor;
      } else {
        style[$width] = dart.str(right - left) + "px";
        style[$height] = dart.str(bottom - top) + "px";
        style[$backgroundColor] = cssColor;
      }
      this.currentElement[$append](rectangle);
    }
    drawRRect(rrect, paint) {
      dart.throw(new core.UnimplementedError.new());
    }
    drawDRRect(outer, inner, paint) {
      dart.throw(new core.UnimplementedError.new());
    }
    drawOval(rect, paint) {
      dart.throw(new core.UnimplementedError.new());
    }
    drawCircle(c, radius, paint) {
      dart.throw(new core.UnimplementedError.new());
    }
    drawPath(path, paint) {
      dart.throw(new core.UnimplementedError.new());
    }
    drawShadow(path, color, elevation, transparentOccluder) {
      dart.throw(new core.UnimplementedError.new());
    }
    drawImage(image, p, paint) {
      dart.throw(new core.UnimplementedError.new());
    }
    drawImageRect(image, src, dst, paint) {
      dart.throw(new core.UnimplementedError.new());
    }
    drawParagraph(paragraph, offset) {
      if (!dart.test(paragraph.webOnlyIsLaidOut)) dart.assertFailed();
      let paragraphElement = html.Element._check(paragraph.webOnlyGetParagraphElement()[$clone](true));
      let cssTransform = src__engine.matrix4ToCssTransform(src__engine.transformWithOffset(this.currentTransform, offset));
      let paragraphStyle = paragraphElement.style;
      paragraphStyle[$position] = "absolute";
      paragraphStyle[$transformOrigin] = "0 0 0";
      paragraphStyle[$transform] = cssTransform;
      paragraphStyle[$whiteSpace] = "pre-wrap";
      paragraphStyle[$width] = dart.str(paragraph.width) + "px";
      let style = paragraph.webOnlyGetParagraphGeometricStyle();
      if (style.ellipsis != null && (style.maxLines == null || style.maxLines === 1)) {
        paragraphStyle[$height] = dart.str(paragraph.webOnlyMaxLinesHeight) + "px";
        paragraphStyle[$whiteSpace] = "pre";
        paragraphStyle[$overflow] = "hidden";
        paragraphStyle[$textOverflow] = "ellipsis";
      } else if (dart.test(paragraph.didExceedMaxLines)) {
        paragraphStyle[$height] = dart.str(paragraph.webOnlyMaxLinesHeight) + "px";
        paragraphStyle[$overflowY] = "hidden";
      } else {
        paragraphStyle[$height] = dart.str(paragraph.height) + "px";
      }
      this.currentElement[$append](paragraphElement);
    }
  };
  (src__engine.DomCanvas.new = function() {
    this[rootElement$0] = html.Element.tag("flt-dom-canvas");
    src__engine.DomCanvas.__proto__.new.call(this);
    this.rootElement.style[$position] = "absolute";
    this.rootElement.style[$top] = "0";
    this.rootElement.style[$right] = "0";
    this.rootElement.style[$bottom] = "0";
    this.rootElement.style[$left] = "0";
  }).prototype = src__engine.DomCanvas.prototype;
  dart.addTypeTests(src__engine.DomCanvas);
  const rootElement$0 = Symbol("DomCanvas.rootElement");
  dart.setMethodSignature(src__engine.DomCanvas, () => ({
    __proto__: dart.getMethods(src__engine.DomCanvas.__proto__),
    clipRect: dart.fnType(dart.void, [ui.Rect]),
    clipRRect: dart.fnType(dart.void, [ui.RRect]),
    clipPath: dart.fnType(dart.void, [ui.Path]),
    drawColor: dart.fnType(dart.void, [ui.Color, ui.BlendMode]),
    drawLine: dart.fnType(dart.void, [ui.Offset, ui.Offset, ui.PaintData]),
    drawPaint: dart.fnType(dart.void, [ui.PaintData]),
    drawRect: dart.fnType(dart.void, [ui.Rect, ui.PaintData]),
    drawRRect: dart.fnType(dart.void, [ui.RRect, ui.PaintData]),
    drawDRRect: dart.fnType(dart.void, [ui.RRect, ui.RRect, ui.PaintData]),
    drawOval: dart.fnType(dart.void, [ui.Rect, ui.PaintData]),
    drawCircle: dart.fnType(dart.void, [ui.Offset, core.double, ui.PaintData]),
    drawPath: dart.fnType(dart.void, [ui.Path, ui.PaintData]),
    drawShadow: dart.fnType(dart.void, [ui.Path, ui.Color, core.double, core.bool]),
    drawImage: dart.fnType(dart.void, [ui.Image, ui.Offset, ui.PaintData]),
    drawImageRect: dart.fnType(dart.void, [ui.Image, ui.Rect, ui.Rect, ui.PaintData]),
    drawParagraph: dart.fnType(dart.void, [ui.Paragraph, ui.Offset])
  }));
  dart.setFieldSignature(src__engine.DomCanvas, () => ({
    __proto__: dart.getFields(src__engine.DomCanvas.__proto__),
    rootElement: dart.finalFieldType(html.Element)
  }));
  const _resizeSubscription = dart.privateName(src__engine, "_resizeSubscription");
  const _styleElement = dart.privateName(src__engine, "_styleElement");
  const _viewportMeta = dart.privateName(src__engine, "_viewportMeta");
  const _sceneHostElement = dart.privateName(src__engine, "_sceneHostElement");
  const _sceneElement = dart.privateName(src__engine, "_sceneElement");
  const _staleHotRestartState = dart.privateName(src__engine, "_staleHotRestartState");
  const _glassPaneElement = dart.privateName(src__engine, "_glassPaneElement");
  const _debugIsInWidgetTest = dart.privateName(src__engine, "_debugIsInWidgetTest");
  const _debugFrameStatistics = dart.privateName(src__engine, "_debugFrameStatistics");
  const _setupHotRestart = dart.privateName(src__engine, "_setupHotRestart");
  const _clearOnHotRestart = dart.privateName(src__engine, "_clearOnHotRestart");
  let const$7;
  const _metricsDidChange = dart.privateName(src__engine, "_metricsDidChange");
  const _rootApplicationElement = dart.privateName(src__engine, "_rootApplicationElement");
  src__engine.DomRenderer = class DomRenderer extends core.Object {
    get sceneHostElement() {
      return this[_sceneHostElement];
    }
    get sceneElement() {
      return this[_sceneElement];
    }
    [_setupHotRestart]() {
      this[_staleHotRestartState] = ListOfElement()._check(js_util.getProperty(html.window, "__flutter_state"));
      if (this[_staleHotRestartState] == null) {
        this[_staleHotRestartState] = JSArrayOfElement().of([]);
        js_util.setProperty(html.window, "__flutter_state", this[_staleHotRestartState]);
      }
      src__engine.registerHotRestartListener(dart.fn(() => {
        let t = this[_resizeSubscription];
        t == null ? null : t.cancel();
        this[_staleHotRestartState][$addAll](JSArrayOfElement().of([this[_sceneHostElement], this[_glassPaneElement], this[_styleElement], this[_viewportMeta]]));
      }, VoidToNull()));
    }
    [_clearOnHotRestart]() {
      if (dart.test(this[_staleHotRestartState][$isNotEmpty])) {
        for (let element of this[_staleHotRestartState]) {
          element == null ? null : element[$remove]();
        }
        this[_staleHotRestartState][$clear]();
      }
    }
    renderScene(sceneElement) {
      if (!dart.equals(sceneElement, this[_sceneElement])) {
        let t = this[_sceneElement];
        t == null ? null : t[$remove]();
        this[_sceneElement] = sceneElement;
        this.append(this[_sceneHostElement], sceneElement);
      }
      if (!dart.test(dart.fn(() => {
        this[_clearOnHotRestart]();
        return true;
      }, VoidTobool())())) dart.assertFailed();
    }
    get glassPaneElement() {
      return this[_glassPaneElement];
    }
    get debugIsInWidgetTest() {
      return this[_debugIsInWidgetTest];
    }
    set debugIsInWidgetTest(value) {
      this[_debugIsInWidgetTest] = value;
      if (dart.test(this[_debugIsInWidgetTest])) {
        let logicalSize = new ui.Size.new(800.0, 600.0);
        ui.window.webOnlyDebugPhysicalSizeOverride = logicalSize['*'](ui.window.devicePixelRatio);
      }
    }
    get rootElement() {
      return this[rootElement$1];
    }
    set rootElement(value) {
      super.rootElement = value;
    }
    addElementClass(element, className) {
      element[$classes].add(className);
    }
    attachBeforeElement(parent, before, newElement) {
      if (!(parent != null)) dart.assertFailed();
      if (parent != null) {
        if (!dart.test(dart.fn(() => {
          if (before == null) {
            return true;
          }
          if (!dart.equals(before[$parent], parent)) {
            dart.throw(core.Exception.new("attachBeforeElement was called with `before` element that's " + "not a child of the `parent` element:\n" + ("  before: " + dart.str(before) + "\n") + ("  parent: " + dart.str(parent))));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed();
        parent.insertBefore(newElement, before);
      }
    }
    createElement(tagName, opts) {
      let parent = opts && 'parent' in opts ? opts.parent : null;
      let element = html.document[$createElement](tagName);
      parent == null ? null : parent[$append](element);
      return element;
    }
    append(parent, child) {
      parent[$append](child);
    }
    appendText(parent, text) {
      parent[$appendText](text);
    }
    detachElement(element) {
      element[$remove]();
    }
    removeElementClass(element, className) {
      element[$classes].remove(className);
    }
    setElementAttribute(element, name, value) {
      element[$setAttribute](name, value);
    }
    setElementProperty(element, name, value) {
      js_util.setProperty(element, name, value);
    }
    setElementStyle(element, name, value) {
      if (value == null) {
        element.style.removeProperty(name);
      } else {
        element.style[$setProperty](name, value);
      }
    }
    setText(element, text) {
      element[$text] = text;
    }
    removeAllChildren(element) {
      element[$children][$clear]();
    }
    getParent(element) {
      return element[$parent];
    }
    setTitle(title) {
      html.document[$title] = title;
    }
    setThemeColor(color) {
      let theme = html.MetaElement._check(html.document.querySelector("#flutterweb-theme"));
      if (theme == null) {
        theme = html.MetaElement.new();
        theme.id = "flutterweb-theme";
        theme.name = "theme-color";
        html.document[$head][$append](theme);
      }
      theme.content = color.toCssString();
    }
    reset() {
      let t = this[_styleElement];
      t == null ? null : t[$remove]();
      this[_styleElement] = html.StyleElement.new();
      html.document[$head][$append](this[_styleElement]);
      let sheet = html.CssStyleSheet._check(this[_styleElement].sheet);
      sheet.insertRule("flt-ruler-host p, flt-scene p {\n  margin: 0;\n}", sheet.cssRules[$length]);
      sheet.insertRule("flt-semantics input[type=range] {\n  appearance: none;\n  -webkit-appearance: none;\n  width: 100%;\n  position: absolute;\n  border: none;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}", sheet.cssRules[$length]);
      if (src__engine.browserEngine === src__engine.BrowserEngine.webkit) {
        sheet.insertRule("flt-semantics input[type=range]::-webkit-slider-thumb {" + "  -webkit-appearance: none;" + "}", sheet.cssRules[$length]);
        sheet.insertRule("flt-semantics ::selection {" + "  background-color: transparent;" + "}", sheet.cssRules[$length]);
      }
      sheet.insertRule("flt-semantics input,\nflt-semantics textarea,\nflt-semantics [contentEditable=\"true\"] {\n  caret-color: transparent;\n}\n", sheet.cssRules[$length]);
      if (src__engine.browserEngine === src__engine.BrowserEngine.webkit) {
        sheet.insertRule("flt-glass-pane * {\n  -webkit-tap-highlight-color: transparent;\n}\n", sheet.cssRules[$length]);
      }
      let bodyElement = html.document.body;
      this.setElementStyle(bodyElement, "position", "fixed");
      this.setElementStyle(bodyElement, "top", "0");
      this.setElementStyle(bodyElement, "right", "0");
      this.setElementStyle(bodyElement, "bottom", "0");
      this.setElementStyle(bodyElement, "left", "0");
      this.setElementStyle(bodyElement, "overflow", "hidden");
      this.setElementStyle(bodyElement, "padding", "0");
      this.setElementStyle(bodyElement, "margin", "0");
      this.setElementStyle(bodyElement, "user-select", "none");
      this.setElementStyle(bodyElement, "-webkit-user-select", "none");
      this.setElementStyle(bodyElement, "-ms-user-select", "none");
      this.setElementStyle(bodyElement, "-moz-user-select", "none");
      this.setElementStyle(bodyElement, "touch-action", "none");
      this.setElementStyle(bodyElement, "font", "normal normal 14px sans-serif");
      this.setElementStyle(bodyElement, "color", "red");
      for (let viewportMeta of html.document[$head][$querySelectorAll](html.Element, "meta[name=\"viewport\"]")) {
        if (dart.test(src__engine.assertionsEnabled)) {
          if (!dart.test(viewportMeta[$hasAttribute]("flt-viewport"))) {
            core.print("WARNING: found an existing <meta name=\"viewport\"> tag. Flutter " + "Web uses its own viewport configuration for better compatibility " + "with Flutter. This tag will be replaced.");
          }
        }
        viewportMeta[$remove]();
      }
      let t$ = this[_viewportMeta];
      t$ == null ? null : t$[$remove]();
      let _ = html.MetaElement.new();
      _[$setAttribute]("flt-viewport", "");
      _.name = "viewport";
      _.content = "width=device-width, initial-scale=1.0, " + "maximum-scale=1.0, user-scalable=no";
      this[_viewportMeta] = _;
      html.document[$head][$append](this[_viewportMeta]);
      let t$0 = this[_sceneHostElement];
      t$0 == null ? null : t$0[$remove]();
      this[_sceneHostElement] = this.createElement("flt-scene-host");
      bodyElement[$append](this[_sceneHostElement]);
      let t$1 = this[_glassPaneElement];
      t$1 == null ? null : t$1[$remove]();
      this[_glassPaneElement] = this.createElement("flt-glass-pane");
      this[_glassPaneElement].style[$position] = "absolute";
      this[_glassPaneElement].style[$top] = "0";
      this[_glassPaneElement].style[$right] = "0";
      this[_glassPaneElement].style[$bottom] = "0";
      this[_glassPaneElement].style[$left] = "0";
      bodyElement[$append](this[_glassPaneElement]);
      src__engine.EngineSemanticsOwner.instance.autoEnableOnTap(this);
      new src__engine.PointerBinding.new(this);
      this.setElementAttribute(this[_sceneHostElement], "aria-hidden", "true");
      ui.window.devicePixelRatio = 1.0;
      if (src__engine.browserEngine === src__engine.BrowserEngine.webkit) {
        let initialInnerWidth = html.window.innerWidth;
        let checkCount = 0;
        async.Timer.periodic(const$7 || (const$7 = dart.const(new core.Duration.new({milliseconds: 100}))), dart.fn(t => {
          checkCount = checkCount + 1;
          if (initialInnerWidth != html.window.innerWidth) {
            t.cancel();
            this[_metricsDidChange](null);
          } else if (checkCount > 5) {
            t.cancel();
          }
        }, TimerToNull()));
      }
      this[_resizeSubscription] = html.window[$onResize].listen(dart.bind(this, _metricsDidChange));
    }
    [_metricsDidChange](event) {
      if (ui.window.onMetricsChanged != null) {
        ui.window.onMetricsChanged();
      }
    }
    focus(element) {
      element.focus();
    }
    clearDom(node) {
      while (node.lastChild != null) {
        node.lastChild[$remove]();
      }
    }
    get [_rootApplicationElement]() {
      return html.DivElement.as(this.rootElement[$children][$last])[$children][$singleWhere](dart.fn(element => element.tagName === "FLT-SCENE", ElementTobool()), {orElse: dart.fn(() => null, VoidToNull())});
    }
    vibrate(durationMs) {
      let navigator = html.window.navigator;
      if (dart.dtest(js_util.hasProperty(navigator, "vibrate"))) {
        js_util.callMethod(navigator, "vibrate", JSArrayOfnum().of([durationMs]));
      }
      return null;
    }
    get currentHtml() {
      let t = this[_rootApplicationElement];
      let l = t == null ? null : t[$outerHtml];
      return l != null ? l : "";
    }
    debugFlushFrameStatistics() {
      if (!dart.test(src__engine.assertionsEnabled)) {
        dart.throw(core.Exception.new("This code should not be reachable in production."));
      }
      let current = this[_debugFrameStatistics];
      this[_debugFrameStatistics] = new src__engine.DebugDomRendererFrameStatistics.new();
      return current;
    }
    debugRulerCacheHit() {
      let o = this[_debugFrameStatistics], x = o.paragraphRulerCacheHits;
      o.paragraphRulerCacheHits = dart.notNull(x) + 1;
      return x;
    }
    debugRulerCacheMiss() {
      let o = this[_debugFrameStatistics], x = o.paragraphRulerCacheMisses;
      o.paragraphRulerCacheMisses = dart.notNull(x) + 1;
      return x;
    }
    debugRichTextLayout() {
      let o = this[_debugFrameStatistics], x = o.richTextLayouts;
      o.richTextLayouts = dart.notNull(x) + 1;
      return x;
    }
    debugPlainTextLayout() {
      let o = this[_debugFrameStatistics], x = o.plainTextLayouts;
      o.plainTextLayouts = dart.notNull(x) + 1;
      return x;
    }
  };
  (src__engine.DomRenderer.new = function() {
    this[_resizeSubscription] = null;
    this[_styleElement] = null;
    this[_viewportMeta] = null;
    this[_sceneHostElement] = null;
    this[_sceneElement] = null;
    this[_staleHotRestartState] = null;
    this[_glassPaneElement] = null;
    this[_debugIsInWidgetTest] = false;
    this[rootElement$1] = html.document.body;
    this[_debugFrameStatistics] = null;
    if (dart.test(src__engine.assertionsEnabled)) {
      this[_debugFrameStatistics] = new src__engine.DebugDomRendererFrameStatistics.new();
    }
    this.reset();
    src__engine.TextMeasurementService.initialize({rulerCacheCapacity: 10});
    if (!dart.test(dart.fn(() => {
      this[_setupHotRestart]();
      return true;
    }, VoidTobool())())) dart.assertFailed();
  }).prototype = src__engine.DomRenderer.prototype;
  dart.addTypeTests(src__engine.DomRenderer);
  const rootElement$1 = Symbol("DomRenderer.rootElement");
  dart.setMethodSignature(src__engine.DomRenderer, () => ({
    __proto__: dart.getMethods(src__engine.DomRenderer.__proto__),
    [_setupHotRestart]: dart.fnType(dart.void, []),
    [_clearOnHotRestart]: dart.fnType(dart.void, []),
    renderScene: dart.fnType(dart.void, [html.Element]),
    addElementClass: dart.fnType(dart.void, [html.Element, core.String]),
    attachBeforeElement: dart.fnType(dart.void, [html.Element, html.Element, html.Element]),
    createElement: dart.fnType(html.Element, [core.String], {parent: html.Element}),
    append: dart.fnType(dart.void, [html.Element, html.Element]),
    appendText: dart.fnType(dart.void, [html.Element, core.String]),
    detachElement: dart.fnType(dart.void, [html.Element]),
    removeElementClass: dart.fnType(dart.void, [html.Element, core.String]),
    setElementAttribute: dart.fnType(dart.void, [html.Element, core.String, core.String]),
    setElementProperty: dart.fnType(dart.void, [html.Element, core.String, core.Object]),
    setElementStyle: dart.fnType(dart.void, [html.Element, core.String, core.String]),
    setText: dart.fnType(dart.void, [html.Element, core.String]),
    removeAllChildren: dart.fnType(dart.void, [html.Element]),
    getParent: dart.fnType(html.Element, [html.Element]),
    setTitle: dart.fnType(dart.void, [core.String]),
    setThemeColor: dart.fnType(dart.void, [ui.Color]),
    reset: dart.fnType(dart.void, []),
    [_metricsDidChange]: dart.fnType(dart.void, [html.Event]),
    focus: dart.fnType(dart.void, [html.Element]),
    clearDom: dart.fnType(dart.void, [html.Node]),
    vibrate: dart.fnType(async.Future, [core.int]),
    debugFlushFrameStatistics: dart.fnType(src__engine.DebugDomRendererFrameStatistics, []),
    debugRulerCacheHit: dart.fnType(dart.void, []),
    debugRulerCacheMiss: dart.fnType(dart.void, []),
    debugRichTextLayout: dart.fnType(dart.void, []),
    debugPlainTextLayout: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(src__engine.DomRenderer, () => ({
    __proto__: dart.getGetters(src__engine.DomRenderer.__proto__),
    sceneHostElement: html.Element,
    sceneElement: html.Element,
    glassPaneElement: html.Element,
    debugIsInWidgetTest: core.bool,
    [_rootApplicationElement]: html.Element,
    currentHtml: core.String
  }));
  dart.setSetterSignature(src__engine.DomRenderer, () => ({
    __proto__: dart.getSetters(src__engine.DomRenderer.__proto__),
    debugIsInWidgetTest: core.bool
  }));
  dart.setFieldSignature(src__engine.DomRenderer, () => ({
    __proto__: dart.getFields(src__engine.DomRenderer.__proto__),
    [_resizeSubscription]: dart.fieldType(async.StreamSubscription),
    [_styleElement]: dart.fieldType(html.StyleElement),
    [_viewportMeta]: dart.fieldType(html.MetaElement),
    [_sceneHostElement]: dart.fieldType(html.Element),
    [_sceneElement]: dart.fieldType(html.Element),
    [_staleHotRestartState]: dart.fieldType(ListOfElement()),
    [_glassPaneElement]: dart.fieldType(html.Element),
    [_debugIsInWidgetTest]: dart.fieldType(core.bool),
    rootElement: dart.finalFieldType(html.Element),
    [_debugFrameStatistics]: dart.fieldType(src__engine.DebugDomRendererFrameStatistics)
  }));
  dart.defineLazy(src__engine.DomRenderer, {
    /*src__engine.DomRenderer.vibrateLongPress*/get vibrateLongPress() {
      return 50;
    },
    /*src__engine.DomRenderer.vibrateLightImpact*/get vibrateLightImpact() {
      return 10;
    },
    /*src__engine.DomRenderer.vibrateMediumImpact*/get vibrateMediumImpact() {
      return 20;
    },
    /*src__engine.DomRenderer.vibrateHeavyImpact*/get vibrateHeavyImpact() {
      return 30;
    },
    /*src__engine.DomRenderer.vibrateSelectionClick*/get vibrateSelectionClick() {
      return 10;
    },
    /*src__engine.DomRenderer._staleHotRestartStore*/get _staleHotRestartStore() {
      return "__flutter_state";
    },
    /*src__engine.DomRenderer.defaultFontStyle*/get defaultFontStyle() {
      return "normal";
    },
    /*src__engine.DomRenderer.defaultFontWeight*/get defaultFontWeight() {
      return "normal";
    },
    /*src__engine.DomRenderer.defaultFontSize*/get defaultFontSize() {
      return "14px";
    },
    /*src__engine.DomRenderer.defaultFontFamily*/get defaultFontFamily() {
      return "sans-serif";
    },
    /*src__engine.DomRenderer.defaultCssFont*/get defaultCssFont() {
      return "normal" + " " + "normal" + " " + "14px" + " " + "sans-serif";
    }
  });
  src__engine.DebugDomRendererFrameStatistics = class DebugDomRendererFrameStatistics extends core.Object {
    get paragraphRulerCacheHits() {
      return this[paragraphRulerCacheHits];
    }
    set paragraphRulerCacheHits(value) {
      this[paragraphRulerCacheHits] = value;
    }
    get paragraphRulerCacheMisses() {
      return this[paragraphRulerCacheMisses];
    }
    set paragraphRulerCacheMisses(value) {
      this[paragraphRulerCacheMisses] = value;
    }
    get totalParagraphRulerAccesses() {
      return dart.notNull(this.paragraphRulerCacheHits) + dart.notNull(this.paragraphRulerCacheMisses);
    }
    get richTextLayouts() {
      return this[richTextLayouts];
    }
    set richTextLayouts(value) {
      this[richTextLayouts] = value;
    }
    get plainTextLayouts() {
      return this[plainTextLayouts];
    }
    set plainTextLayouts(value) {
      this[plainTextLayouts] = value;
    }
    toString() {
      return ("Frame statistics:\n  Paragraph ruler cache hits: " + dart.str(this.paragraphRulerCacheHits) + "\n  Paragraph ruler cache misses: " + dart.str(this.paragraphRulerCacheMisses) + "\n  Paragraph ruler accesses: " + dart.str(this.totalParagraphRulerAccesses) + "\n  Rich text layouts: " + dart.str(this.richTextLayouts) + "\n  Plain text layouts: " + dart.str(this.plainTextLayouts) + "\n")[$trim]();
    }
  };
  (src__engine.DebugDomRendererFrameStatistics.new = function() {
    this[paragraphRulerCacheHits] = 0;
    this[paragraphRulerCacheMisses] = 0;
    this[richTextLayouts] = 0;
    this[plainTextLayouts] = 0;
  }).prototype = src__engine.DebugDomRendererFrameStatistics.prototype;
  dart.addTypeTests(src__engine.DebugDomRendererFrameStatistics);
  const paragraphRulerCacheHits = Symbol("DebugDomRendererFrameStatistics.paragraphRulerCacheHits");
  const paragraphRulerCacheMisses = Symbol("DebugDomRendererFrameStatistics.paragraphRulerCacheMisses");
  const richTextLayouts = Symbol("DebugDomRendererFrameStatistics.richTextLayouts");
  const plainTextLayouts = Symbol("DebugDomRendererFrameStatistics.plainTextLayouts");
  dart.setGetterSignature(src__engine.DebugDomRendererFrameStatistics, () => ({
    __proto__: dart.getGetters(src__engine.DebugDomRendererFrameStatistics.__proto__),
    totalParagraphRulerAccesses: core.int
  }));
  dart.setFieldSignature(src__engine.DebugDomRendererFrameStatistics, () => ({
    __proto__: dart.getFields(src__engine.DebugDomRendererFrameStatistics.__proto__),
    paragraphRulerCacheHits: dart.fieldType(core.int),
    paragraphRulerCacheMisses: dart.fieldType(core.int),
    richTextLayouts: dart.fieldType(core.int),
    plainTextLayouts: dart.fieldType(core.int)
  }));
  dart.defineExtensionMethods(src__engine.DebugDomRendererFrameStatistics, ['toString']);
  dart.defineLazy(src__engine, {
    /*src__engine.domRenderer*/get domRenderer() {
      return new src__engine.DomRenderer.new();
    }
  });
  src__engine.transformWithOffset = function(transform, offset) {
    if (dart.equals(offset, ui.Offset.zero)) {
      return transform;
    }
    let effectiveTransform = transform.clone();
    effectiveTransform.translate(offset.dx, offset.dy, 0.0);
    return effectiveTransform;
  };
  src__engine._SaveStackEntry = class _SaveStackEntry extends core.Object {};
  (src__engine._SaveStackEntry.new = function(opts) {
    let transform = opts && 'transform' in opts ? opts.transform : null;
    let clipStack = opts && 'clipStack' in opts ? opts.clipStack : null;
    this.transform = transform;
    this.clipStack = clipStack;
  }).prototype = src__engine._SaveStackEntry.prototype;
  dart.addTypeTests(src__engine._SaveStackEntry);
  dart.setFieldSignature(src__engine._SaveStackEntry, () => ({
    __proto__: dart.getFields(src__engine._SaveStackEntry.__proto__),
    transform: dart.finalFieldType(src__engine.Matrix4),
    clipStack: dart.finalFieldType(ListOf_SaveClipEntry())
  }));
  src__engine._SaveClipEntry = class _SaveClipEntry extends core.Object {};
  (src__engine._SaveClipEntry.rect = function(rect, currentTransform) {
    this.rect = rect;
    this.currentTransform = currentTransform;
    this.rrect = null;
    this.path = null;
  }).prototype = src__engine._SaveClipEntry.prototype;
  (src__engine._SaveClipEntry.rrect = function(rrect, currentTransform) {
    this.rrect = rrect;
    this.currentTransform = currentTransform;
    this.rect = null;
    this.path = null;
  }).prototype = src__engine._SaveClipEntry.prototype;
  (src__engine._SaveClipEntry.path = function(path, currentTransform) {
    this.path = path;
    this.currentTransform = currentTransform;
    this.rect = null;
    this.rrect = null;
  }).prototype = src__engine._SaveClipEntry.prototype;
  dart.addTypeTests(src__engine._SaveClipEntry);
  dart.setFieldSignature(src__engine._SaveClipEntry, () => ({
    __proto__: dart.getFields(src__engine._SaveClipEntry.__proto__),
    rect: dart.finalFieldType(ui.Rect),
    rrect: dart.finalFieldType(ui.RRect),
    path: dart.finalFieldType(ui.Path),
    currentTransform: dart.finalFieldType(src__engine.Matrix4)
  }));
  dart.defineLazy(src__engine, {
    /*src__engine._popRouteMethodCall*/get _popRouteMethodCall() {
      return new src__engine.MethodCall.new("popRoute");
    },
    set _popRouteMethodCall(_) {},
    /*src__engine._originState*/get _originState() {
      return new (IdentityMapOfString$bool()).from(["origin", true]);
    },
    set _originState(_) {},
    /*src__engine._flutterState*/get _flutterState() {
      return new (IdentityMapOfString$bool()).from(["flutter", true]);
    },
    set _flutterState(_) {}
  });
  src__engine._isOriginEntry = function(state) {
    return core.Map.is(state) && dart.equals(state[$_get]("origin"), true);
  };
  src__engine._isFlutterEntry = function(state) {
    return core.Map.is(state) && dart.equals(state[$_get]("flutter"), true);
  };
  const _locationStrategy = dart.privateName(src__engine, "_locationStrategy");
  const _unsubscribe = dart.privateName(src__engine, "_unsubscribe");
  const _userProvidedRouteName = dart.privateName(src__engine, "_userProvidedRouteName");
  const _tearoffStrategy = dart.privateName(src__engine, "_tearoffStrategy");
  const _setupStrategy = dart.privateName(src__engine, "_setupStrategy");
  const _setupFlutterEntry = dart.privateName(src__engine, "_setupFlutterEntry");
  let const$8;
  let const$9;
  const _popStateListener = dart.privateName(src__engine, "_popStateListener");
  const _setupOriginEntry = dart.privateName(src__engine, "_setupOriginEntry");
  src__engine.BrowserHistory = class BrowserHistory extends core.Object {
    set locationStrategy(strategy) {
      if (!dart.equals(strategy, this[_locationStrategy])) {
        this[_tearoffStrategy](this[_locationStrategy]);
        this[_locationStrategy] = strategy;
        this[_setupStrategy](this[_locationStrategy]);
      }
    }
    get currentPath() {
      let t = this[_locationStrategy];
      let l = t == null ? null : t.path;
      return l != null ? l : "/";
    }
    setRouteName(routeName) {
      if (this[_locationStrategy] != null) {
        this[_setupFlutterEntry](this[_locationStrategy], {replace: true, path: routeName});
      }
    }
    back() {
      if (this[_locationStrategy] != null) {
        return this[_locationStrategy].back();
      }
      return FutureOfvoid().value();
    }
    exit() {
      if (this[_locationStrategy] != null) {
        this[_tearoffStrategy](this[_locationStrategy]);
        let backFuture = this[_locationStrategy].back();
        this[_locationStrategy] = null;
        return backFuture;
      }
      return FutureOfvoid().value();
    }
    [_popStateListener](event) {
      html.PopStateEvent._check(event);
      if (dart.test(src__engine._isOriginEntry(event[$state]))) {
        this[_setupFlutterEntry](this[_locationStrategy]);
        ui.window.onPlatformMessage("flutter/navigation", (const$8 || (const$8 = dart.const(new src__engine.JSONMethodCodec.new()))).encodeMethodCall(src__engine._popRouteMethodCall), dart.fn(_ => {
        }, ByteDataToNull()));
      } else if (dart.test(src__engine._isFlutterEntry(event[$state]))) {
        if (!(this[_userProvidedRouteName] != null)) dart.assertFailed();
        let newRouteName = this[_userProvidedRouteName];
        this[_userProvidedRouteName] = null;
        ui.window.onPlatformMessage("flutter/navigation", (const$9 || (const$9 = dart.const(new src__engine.JSONMethodCodec.new()))).encodeMethodCall(new src__engine.MethodCall.new("pushRoute", newRouteName)), dart.fn(_ => {
        }, ByteDataToNull()));
      } else {
        this[_userProvidedRouteName] = this.currentPath;
        this[_locationStrategy].back();
      }
    }
    [_setupOriginEntry](strategy) {
      if (!(strategy != null)) dart.assertFailed();
      strategy.replaceState(src__engine._originState, "origin", "");
    }
    [_setupFlutterEntry](strategy, opts) {
      let replace = opts && 'replace' in opts ? opts.replace : false;
      let path = opts && 'path' in opts ? opts.path : null;
      if (!(strategy != null)) dart.assertFailed();
      let t = path;
      t == null ? path = this.currentPath : t;
      if (dart.test(replace)) {
        strategy.replaceState(src__engine._flutterState, "flutter", path);
      } else {
        strategy.pushState(src__engine._flutterState, "flutter", path);
      }
    }
    [_setupStrategy](strategy) {
      if (strategy == null) {
        return;
      }
      let path = this.currentPath;
      if (dart.test(src__engine._isFlutterEntry(html.window.history[$state]))) {
      } else {
        this[_setupOriginEntry](strategy);
        this[_setupFlutterEntry](strategy, {replace: false, path: path});
      }
      this[_unsubscribe] = strategy.onPopState(EventTodynamic()._check(dart.bind(this, _popStateListener)));
    }
    [_tearoffStrategy](strategy) {
      if (strategy == null) {
        return;
      }
      if (!(this[_unsubscribe] != null)) dart.assertFailed();
      this[_unsubscribe]();
      this[_unsubscribe] = null;
      strategy.back();
    }
  };
  (src__engine.BrowserHistory.new = function() {
    this[_locationStrategy] = null;
    this[_unsubscribe] = null;
    this[_userProvidedRouteName] = null;
  }).prototype = src__engine.BrowserHistory.prototype;
  dart.addTypeTests(src__engine.BrowserHistory);
  dart.setMethodSignature(src__engine.BrowserHistory, () => ({
    __proto__: dart.getMethods(src__engine.BrowserHistory.__proto__),
    setRouteName: dart.fnType(dart.void, [core.String]),
    back: dart.fnType(async.Future$(dart.void), []),
    exit: dart.fnType(async.Future$(dart.void), []),
    [_popStateListener]: dart.fnType(dart.void, [core.Object]),
    [_setupOriginEntry]: dart.fnType(dart.void, [ui.LocationStrategy]),
    [_setupFlutterEntry]: dart.fnType(dart.void, [ui.LocationStrategy], {replace: core.bool, path: core.String}),
    [_setupStrategy]: dart.fnType(dart.void, [ui.LocationStrategy]),
    [_tearoffStrategy]: dart.fnType(dart.void, [ui.LocationStrategy])
  }));
  dart.setGetterSignature(src__engine.BrowserHistory, () => ({
    __proto__: dart.getGetters(src__engine.BrowserHistory.__proto__),
    currentPath: core.String
  }));
  dart.setSetterSignature(src__engine.BrowserHistory, () => ({
    __proto__: dart.getSetters(src__engine.BrowserHistory.__proto__),
    locationStrategy: ui.LocationStrategy
  }));
  dart.setFieldSignature(src__engine.BrowserHistory, () => ({
    __proto__: dart.getFields(src__engine.BrowserHistory.__proto__),
    [_locationStrategy]: dart.fieldType(ui.LocationStrategy),
    [_unsubscribe]: dart.fieldType(VoidTovoid()),
    [_userProvidedRouteName]: dart.fieldType(core.String)
  }));
  const _serializedCommands = dart.privateName(src__engine, "_serializedCommands");
  const EngineCanvas_SaveElementStackTracking$$ = class EngineCanvas_SaveElementStackTracking extends src__engine.EngineCanvas {};
  (EngineCanvas_SaveElementStackTracking$$.new = function() {
    src__engine.SaveElementStackTracking.new.call(this);
  }).prototype = EngineCanvas_SaveElementStackTracking$$.prototype;
  dart.applyMixin(EngineCanvas_SaveElementStackTracking$$, src__engine.SaveElementStackTracking);
  src__engine.HoudiniCanvas = class HoudiniCanvas extends EngineCanvas_SaveElementStackTracking$$ {
    get rootElement() {
      return this[rootElement$2];
    }
    set rootElement(value) {
      super.rootElement = value;
    }
    get bounds() {
      return this[bounds$0];
    }
    set bounds(value) {
      super.bounds = value;
    }
    clear() {
      super.clear();
      this[_serializedCommands] = JSArrayOfList().of([]);
      src__engine.domRenderer.clearDom(this.rootElement);
    }
    apply(command) {
      if (!src__engine.PaintDrawParagraph.is(command) && !src__engine.PaintDrawImageRect.is(command) && !src__engine.PaintTransform.is(command)) {
        command.serializeToCssPaint(this[_serializedCommands]);
      }
      command.apply(this);
    }
    commit() {
      if (dart.test(this[_serializedCommands][$isNotEmpty])) {
        this.rootElement.style[$setProperty]("--flt", convert.json.encode(this[_serializedCommands]));
      } else {
        this.rootElement.style.removeProperty("--flt");
      }
    }
    clipRect(rect) {
      let clip = html.Element.tag("flt-clip-rect");
      let cssTransform = src__engine.matrix4ToCssTransform(src__engine.transformWithOffset(this.currentTransform, new ui.Offset.new(rect.left, rect.top)));
      clip.style[$overflow] = "hidden";
      clip.style[$position] = "absolute";
      clip.style[$transform] = cssTransform;
      clip.style[$width] = dart.str(rect.width) + "px";
      clip.style[$height] = dart.str(rect.height) + "px";
      super.translate(-dart.notNull(rect.left), -dart.notNull(rect.top));
      this.currentElement[$append](clip);
      this.pushElement(clip);
    }
    clipRRect(rrect) {
      let outer = rrect.outerRect;
      if (dart.test(rrect.isRect)) {
        this.clipRect(outer);
        return;
      }
      let clip = html.Element.tag("flt-clip-rrect");
      let style = clip.style;
      style[$overflow] = "hidden";
      style[$position] = "absolute";
      style[$transform] = "translate(" + dart.str(outer.left) + "px, " + dart.str(outer.right) + "px)";
      style[$width] = dart.str(outer.width) + "px";
      style[$height] = dart.str(outer.height) + "px";
      if (rrect.tlRadiusY == rrect.tlRadiusX) {
        style[$borderTopLeftRadius] = dart.str(rrect.tlRadiusX) + "px";
      } else {
        style[$borderTopLeftRadius] = dart.str(rrect.tlRadiusX) + "px " + dart.str(rrect.tlRadiusY) + "px";
      }
      if (rrect.trRadiusY == rrect.trRadiusX) {
        style[$borderTopRightRadius] = dart.str(rrect.trRadiusX) + "px";
      } else {
        style[$borderTopRightRadius] = dart.str(rrect.trRadiusX) + "px " + dart.str(rrect.trRadiusY) + "px";
      }
      if (rrect.brRadiusY == rrect.brRadiusX) {
        style[$borderBottomRightRadius] = dart.str(rrect.brRadiusX) + "px";
      } else {
        style[$borderBottomRightRadius] = dart.str(rrect.brRadiusX) + "px " + dart.str(rrect.brRadiusY) + "px";
      }
      if (rrect.blRadiusY == rrect.blRadiusX) {
        style[$borderBottomLeftRadius] = dart.str(rrect.blRadiusX) + "px";
      } else {
        style[$borderBottomLeftRadius] = dart.str(rrect.blRadiusX) + "px " + dart.str(rrect.blRadiusY) + "px";
      }
      super.translate(-dart.notNull(rrect.left), -dart.notNull(rrect.top));
      this.currentElement[$append](clip);
      this.pushElement(clip);
    }
    clipPath(path) {}
    drawColor(color, blendMode) {}
    drawLine(p1, p2, paint) {}
    drawPaint(paint) {}
    drawRect(rect, paint) {}
    drawRRect(rrect, paint) {}
    drawDRRect(outer, inner, paint) {}
    drawOval(rect, paint) {}
    drawCircle(c, radius, paint) {}
    drawPath(path, paint) {}
    drawShadow(path, color, elevation, transparentOccluder) {}
    drawImage(image, p, paint) {}
    drawImageRect(image, src, dst, paint) {
      let htmlImage = src__engine.HtmlImage.as(image);
      let imageBox = html.Element.tag("flt-img");
      let cssTransform = src__engine.matrix4ToCssTransform(src__engine.transformWithOffset(this.currentTransform, new ui.Offset.new(dst.left, dst.top)));
      imageBox.style[$position] = "absolute";
      imageBox.style[$transformOrigin] = "0 0 0";
      imageBox.style[$width] = dart.str(dst.width[$toInt]()) + "px";
      imageBox.style[$height] = dart.str(dst.height[$toInt]()) + "px";
      imageBox.style[$transform] = cssTransform;
      imageBox.style[$backgroundImage] = "url(" + dart.str(htmlImage.imgElement.src) + ")";
      imageBox.style[$backgroundRepeat] = "norepeat";
      imageBox.style[$backgroundSize] = dart.str(dst.width) + "px " + dart.str(dst.height) + "px";
      this.currentElement[$append](imageBox);
    }
    drawParagraph(paragraph, offset) {
      if (!dart.test(paragraph.webOnlyIsLaidOut)) dart.assertFailed();
      let paragraphElement = html.Element._check(paragraph.webOnlyGetParagraphElement()[$clone](true));
      let cssTransform = src__engine.matrix4ToCssTransform(src__engine.transformWithOffset(this.currentTransform, offset));
      paragraphElement.style[$position] = "absolute";
      paragraphElement.style[$transformOrigin] = "0 0 0";
      paragraphElement.style[$transform] = cssTransform;
      paragraphElement.style[$whiteSpace] = dart.test(paragraph.webOnlyDrawOnCanvas) ? "nowrap" : "pre-wrap";
      paragraphElement.style[$width] = dart.str(paragraph.width) + "px";
      paragraphElement.style[$height] = dart.str(paragraph.height) + "px";
      this.currentElement[$append](paragraphElement);
    }
  };
  (src__engine.HoudiniCanvas.new = function(bounds) {
    this[rootElement$2] = html.Element.tag("flt-houdini");
    this[_serializedCommands] = JSArrayOfList().of([]);
    this[bounds$0] = bounds;
    src__engine.HoudiniCanvas.__proto__.new.call(this);
    this.rootElement.style[$position] = "absolute";
    this.rootElement.style[$top] = "0";
    this.rootElement.style[$left] = "0";
    this.rootElement.style[$width] = dart.str(this.bounds.size.width) + "px";
    this.rootElement.style[$height] = dart.str(this.bounds.size.height) + "px";
    this.rootElement.style[$backgroundImage] = "paint(flt)";
  }).prototype = src__engine.HoudiniCanvas.prototype;
  dart.addTypeTests(src__engine.HoudiniCanvas);
  const rootElement$2 = Symbol("HoudiniCanvas.rootElement");
  const bounds$0 = Symbol("HoudiniCanvas.bounds");
  dart.setMethodSignature(src__engine.HoudiniCanvas, () => ({
    __proto__: dart.getMethods(src__engine.HoudiniCanvas.__proto__),
    apply: dart.fnType(dart.void, [src__engine.PaintCommand]),
    commit: dart.fnType(dart.void, []),
    clipRect: dart.fnType(dart.void, [ui.Rect]),
    clipRRect: dart.fnType(dart.void, [ui.RRect]),
    clipPath: dart.fnType(dart.void, [ui.Path]),
    drawColor: dart.fnType(dart.void, [ui.Color, ui.BlendMode]),
    drawLine: dart.fnType(dart.void, [ui.Offset, ui.Offset, ui.PaintData]),
    drawPaint: dart.fnType(dart.void, [ui.PaintData]),
    drawRect: dart.fnType(dart.void, [ui.Rect, ui.PaintData]),
    drawRRect: dart.fnType(dart.void, [ui.RRect, ui.PaintData]),
    drawDRRect: dart.fnType(dart.void, [ui.RRect, ui.RRect, ui.PaintData]),
    drawOval: dart.fnType(dart.void, [ui.Rect, ui.PaintData]),
    drawCircle: dart.fnType(dart.void, [ui.Offset, core.double, ui.PaintData]),
    drawPath: dart.fnType(dart.void, [ui.Path, ui.PaintData]),
    drawShadow: dart.fnType(dart.void, [ui.Path, ui.Color, core.double, core.bool]),
    drawImage: dart.fnType(dart.void, [ui.Image, ui.Offset, ui.PaintData]),
    drawImageRect: dart.fnType(dart.void, [ui.Image, ui.Rect, ui.Rect, ui.PaintData]),
    drawParagraph: dart.fnType(dart.void, [ui.Paragraph, ui.Offset])
  }));
  dart.setFieldSignature(src__engine.HoudiniCanvas, () => ({
    __proto__: dart.getFields(src__engine.HoudiniCanvas.__proto__),
    rootElement: dart.finalFieldType(html.Element),
    bounds: dart.finalFieldType(ui.Rect),
    [_serializedCommands]: dart.fieldType(ListOfList())
  }));
  src__engine._SaveElementStackEntry = class _SaveElementStackEntry extends core.Object {};
  (src__engine._SaveElementStackEntry.new = function(opts) {
    let savedElement = opts && 'savedElement' in opts ? opts.savedElement : null;
    let transform = opts && 'transform' in opts ? opts.transform : null;
    this.savedElement = savedElement;
    this.transform = transform;
  }).prototype = src__engine._SaveElementStackEntry.prototype;
  dart.addTypeTests(src__engine._SaveElementStackEntry);
  dart.setFieldSignature(src__engine._SaveElementStackEntry, () => ({
    __proto__: dart.getFields(src__engine._SaveElementStackEntry.__proto__),
    savedElement: dart.finalFieldType(html.Element),
    transform: dart.finalFieldType(src__engine.Matrix4)
  }));
  src__engine.HtmlCodec = class HtmlCodec extends core.Object {
    get src() {
      return this[src$];
    }
    set src(value) {
      super.src = value;
    }
    get frameCount() {
      return 1;
    }
    get repetitionCount() {
      return 0;
    }
    getNextFrame() {
      return async.async(ui.FrameInfo, (function* getNextFrame() {
        let subscription = null;
        let errorSubscription = null;
        let completer = CompleterOfFrameInfo().new();
        let imgElement = html.ImageElement.new();
        subscription = imgElement[$onLoad].listen(dart.fn(_ => {
          subscription.cancel();
          errorSubscription.cancel();
          let image = new src__engine.HtmlImage.new(imgElement, imgElement.naturalWidth, imgElement.naturalHeight);
          completer.complete(new src__engine.SingleFrameInfo.new(image));
        }, EventToNull()));
        errorSubscription = imgElement[$onError].listen(dart.fn(e => {
          subscription.cancel();
          errorSubscription.cancel();
          completer.completeError(e);
        }, EventToNull()));
        imgElement.src = this.src;
        return completer.future;
      }).bind(this));
    }
    dispose() {}
  };
  (src__engine.HtmlCodec.new = function(src) {
    this[src$] = src;
  }).prototype = src__engine.HtmlCodec.prototype;
  dart.addTypeTests(src__engine.HtmlCodec);
  const src$ = Symbol("HtmlCodec.src");
  src__engine.HtmlCodec[dart.implements] = () => [ui.Codec];
  dart.setMethodSignature(src__engine.HtmlCodec, () => ({
    __proto__: dart.getMethods(src__engine.HtmlCodec.__proto__),
    getNextFrame: dart.fnType(async.Future$(ui.FrameInfo), []),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(src__engine.HtmlCodec, () => ({
    __proto__: dart.getGetters(src__engine.HtmlCodec.__proto__),
    frameCount: core.int,
    repetitionCount: core.int
  }));
  dart.setFieldSignature(src__engine.HtmlCodec, () => ({
    __proto__: dart.getFields(src__engine.HtmlCodec.__proto__),
    src: dart.finalFieldType(core.String)
  }));
  src__engine.HtmlBlobCodec = class HtmlBlobCodec extends src__engine.HtmlCodec {
    get blob() {
      return this[blob$];
    }
    set blob(value) {
      super.blob = value;
    }
    dispose() {
      html.Url.revokeObjectUrl(this.src);
    }
  };
  (src__engine.HtmlBlobCodec.new = function(blob) {
    this[blob$] = blob;
    src__engine.HtmlBlobCodec.__proto__.new.call(this, html.Url.createObjectUrlFromBlob(blob));
  }).prototype = src__engine.HtmlBlobCodec.prototype;
  dart.addTypeTests(src__engine.HtmlBlobCodec);
  const blob$ = Symbol("HtmlBlobCodec.blob");
  dart.setFieldSignature(src__engine.HtmlBlobCodec, () => ({
    __proto__: dart.getFields(src__engine.HtmlBlobCodec.__proto__),
    blob: dart.finalFieldType(html.Blob)
  }));
  let const$10;
  src__engine.SingleFrameInfo = class SingleFrameInfo extends core.Object {
    get duration() {
      return const$10 || (const$10 = dart.const(new core.Duration.new({milliseconds: 0})));
    }
    get image() {
      return this[image$];
    }
    set image(value) {
      super.image = value;
    }
  };
  (src__engine.SingleFrameInfo.new = function(image) {
    this[image$] = image;
  }).prototype = src__engine.SingleFrameInfo.prototype;
  dart.addTypeTests(src__engine.SingleFrameInfo);
  const image$ = Symbol("SingleFrameInfo.image");
  src__engine.SingleFrameInfo[dart.implements] = () => [ui.FrameInfo];
  dart.setGetterSignature(src__engine.SingleFrameInfo, () => ({
    __proto__: dart.getGetters(src__engine.SingleFrameInfo.__proto__),
    duration: core.Duration
  }));
  dart.setFieldSignature(src__engine.SingleFrameInfo, () => ({
    __proto__: dart.getFields(src__engine.SingleFrameInfo.__proto__),
    image: dart.finalFieldType(ui.Image)
  }));
  const _toByteData = dart.privateName(src__engine, "_toByteData");
  src__engine.HtmlImage = class HtmlImage extends core.Object {
    get imgElement() {
      return this[imgElement$];
    }
    set imgElement(value) {
      super.imgElement = value;
    }
    dispose() {}
    get width() {
      return this[width$0];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$];
    }
    set height(value) {
      super.height = value;
    }
    toByteData(opts) {
      let format = opts && 'format' in opts ? opts.format : ui.ImageByteFormat.rawRgba;
      return src__engine.futurize(typed_data.ByteData, dart.fn(callback => this[_toByteData](format.index, dart.fn(encoded => {
        callback((() => {
          let t = encoded == null ? null : encoded[$buffer];
          return t == null ? null : t[$asByteData]();
        })());
      }, Uint8ListToNull())), FnToString$()));
    }
    [_toByteData](format, callback) {
      return null;
    }
  };
  (src__engine.HtmlImage.new = function(imgElement, width, height) {
    this[imgElement$] = imgElement;
    this[width$0] = width;
    this[height$] = height;
  }).prototype = src__engine.HtmlImage.prototype;
  dart.addTypeTests(src__engine.HtmlImage);
  const imgElement$ = Symbol("HtmlImage.imgElement");
  const width$0 = Symbol("HtmlImage.width");
  const height$ = Symbol("HtmlImage.height");
  src__engine.HtmlImage[dart.implements] = () => [ui.Image];
  dart.setMethodSignature(src__engine.HtmlImage, () => ({
    __proto__: dart.getMethods(src__engine.HtmlImage.__proto__),
    dispose: dart.fnType(dart.void, []),
    toByteData: dart.fnType(async.Future$(typed_data.ByteData), [], {format: ui.ImageByteFormat}),
    [_toByteData]: dart.fnType(core.String, [core.int, dart.fnType(dart.void, [typed_data.Uint8List])])
  }));
  dart.setFieldSignature(src__engine.HtmlImage, () => ({
    __proto__: dart.getFields(src__engine.HtmlImage.__proto__),
    imgElement: dart.finalFieldType(html.ImageElement),
    width: dart.finalFieldType(core.int),
    height: dart.finalFieldType(core.int)
  }));
  const _keydownListener = dart.privateName(src__engine, "_keydownListener");
  const _keyupListener = dart.privateName(src__engine, "_keyupListener");
  const _messageCodec = dart.privateName(src__engine, "_messageCodec");
  const _handleHtmlEvent = dart.privateName(src__engine, "_handleHtmlEvent");
  src__engine.Keyboard = class Keyboard extends core.Object {
    static initialize() {
      let t = src__engine.Keyboard._instance;
      t == null ? src__engine.Keyboard._instance = new src__engine.Keyboard.__() : t;
    }
    static get instance() {
      return src__engine.Keyboard._instance;
    }
    dispose() {
      html.window[$removeEventListener]("keydown", this[_keydownListener]);
      html.window[$removeEventListener]("keyup", this[_keyupListener]);
      this[_keydownListener] = null;
      this[_keyupListener] = null;
      src__engine.Keyboard._instance = null;
    }
    [_handleHtmlEvent](event) {
      let eventData = new _js_helper.LinkedMap.from(["type", event.type, "keymap", "android", "keyCode", event.keyCode]);
      if (event.key[$codeUnits][$length] === 1) {
        eventData[$_set]("codePoint", event.key[$codeUnits][$first]);
      }
      ui.window.onPlatformMessage("flutter/keyevent", this[_messageCodec].encodeMessage(eventData), dart.fn(src__engine._noopCallback, ByteDataTovoid()));
    }
  };
  (src__engine.Keyboard.__ = function() {
    this[_keydownListener] = null;
    this[_keyupListener] = null;
    this[_messageCodec] = new src__engine.JSONMessageCodec.new();
    this[_keydownListener] = dart.fn(event => {
      this[_handleHtmlEvent](html.KeyboardEvent._check(event));
    }, EventToNull());
    html.window[$addEventListener]("keydown", this[_keydownListener]);
    this[_keyupListener] = dart.fn(event => {
      this[_handleHtmlEvent](html.KeyboardEvent._check(event));
    }, EventToNull());
    html.window[$addEventListener]("keyup", this[_keyupListener]);
    src__engine.registerHotRestartListener(dart.fn(() => {
      this.dispose();
    }, VoidToNull()));
  }).prototype = src__engine.Keyboard.prototype;
  dart.addTypeTests(src__engine.Keyboard);
  dart.setMethodSignature(src__engine.Keyboard, () => ({
    __proto__: dart.getMethods(src__engine.Keyboard.__proto__),
    dispose: dart.fnType(dart.void, []),
    [_handleHtmlEvent]: dart.fnType(dart.void, [html.KeyboardEvent])
  }));
  dart.setFieldSignature(src__engine.Keyboard, () => ({
    __proto__: dart.getFields(src__engine.Keyboard.__proto__),
    [_keydownListener]: dart.fieldType(EventTodynamic()),
    [_keyupListener]: dart.fieldType(EventTodynamic()),
    [_messageCodec]: dart.finalFieldType(src__engine.JSONMessageCodec)
  }));
  dart.defineLazy(src__engine.Keyboard, {
    /*src__engine.Keyboard._instance*/get _instance() {
      return null;
    },
    set _instance(_) {}
  });
  src__engine._noopCallback = function(data) {
  };
  dart.defineLazy(src__engine, {
    /*src__engine._logElement*/get _logElement() {
      return null;
    },
    set _logElement(_) {},
    /*src__engine._logContainer*/get _logContainer() {
      return null;
    },
    set _logContainer(_) {},
    /*src__engine._logBuffer*/get _logBuffer() {
      return JSArrayOf_LogMessage().of([]);
    },
    set _logBuffer(_) {}
  });
  src__engine._LogMessage = class _LogMessage extends core.Object {
    toString() {
      if (this.duplicateCount === 1) {
        return this.message;
      }
      return dart.str(this.duplicateCount) + "x " + dart.str(this.message);
    }
  };
  (src__engine._LogMessage.new = function(message) {
    this.duplicateCount = 1;
    this.message = message;
  }).prototype = src__engine._LogMessage.prototype;
  dart.addTypeTests(src__engine._LogMessage);
  dart.setFieldSignature(src__engine._LogMessage, () => ({
    __proto__: dart.getFields(src__engine._LogMessage.__proto__),
    duplicateCount: dart.fieldType(core.int),
    message: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(src__engine._LogMessage, ['toString']);
  src__engine.printOnScreen = function(object) {
    if (src__engine._logElement == null) {
      src__engine._initialize();
    }
    let message = dart.str(object);
    if (dart.test(src__engine._logBuffer[$isNotEmpty]) && src__engine._logBuffer[$last].message === message) {
      let o = src__engine._logBuffer[$last];
      o.duplicateCount = dart.notNull(o.duplicateCount) + 1;
    } else {
      src__engine._logBuffer[$add](new src__engine._LogMessage.new(message));
    }
    if (dart.notNull(src__engine._logBuffer[$length]) > 80) {
      src__engine._logBuffer = src__engine._logBuffer[$sublist](dart.notNull(src__engine._logBuffer[$length]) - 50);
    }
    src__engine._logContainer[$text] = src__engine._logBuffer[$join]("\n");
    core.print(message);
  };
  src__engine._initialize = function() {
    src__engine._logElement = html.Element.tag("flt-onscreen-log");
    src__engine._logElement[$setAttribute]("aria-hidden", "true");
    src__engine._logElement.style[$position] = "fixed";
    src__engine._logElement.style[$left] = "0";
    src__engine._logElement.style[$right] = "0";
    src__engine._logElement.style[$bottom] = "0";
    src__engine._logElement.style[$height] = "25%";
    src__engine._logElement.style[$backgroundColor] = "rgba(0, 0, 0, 0.85)";
    src__engine._logElement.style[$color] = "white";
    src__engine._logElement.style[$fontSize] = "8px";
    src__engine._logElement.style[$whiteSpace] = "pre-wrap";
    src__engine._logElement.style[$overflow] = "hidden";
    src__engine._logElement.style[$zIndex] = "1000";
    src__engine._logContainer = html.Element.tag("flt-log-container");
    src__engine._logContainer[$setAttribute]("aria-hidden", "true");
    src__engine._logContainer.style[$position] = "absolute";
    src__engine._logContainer.style[$bottom] = "0";
    src__engine._logElement[$append](src__engine._logContainer);
    html.document.body[$append](src__engine._logElement);
  };
  src__engine.pathToSvg = function(path, sb, opts) {
    let offsetX = opts && 'offsetX' in opts ? opts.offsetX : 0;
    let offsetY = opts && 'offsetY' in opts ? opts.offsetY : 0;
    for (let subPath of path.subpaths) {
      for (let command of subPath.commands) {
        switch (command.type) {
          case src__engine.PathCommandTypes.moveTo:
          {
            let moveTo = src__engine.MoveTo._check(command);
            sb.write("M " + dart.str(dart.notNull(moveTo.x) + dart.notNull(offsetX)) + " " + dart.str(dart.notNull(moveTo.y) + dart.notNull(offsetY)));
            break;
          }
          case src__engine.PathCommandTypes.lineTo:
          {
            let lineTo = src__engine.LineTo._check(command);
            sb.write("L " + dart.str(dart.notNull(lineTo.x) + dart.notNull(offsetX)) + " " + dart.str(dart.notNull(lineTo.y) + dart.notNull(offsetY)));
            break;
          }
          case src__engine.PathCommandTypes.bezierCurveTo:
          {
            let curve = src__engine.BezierCurveTo._check(command);
            sb.write("C " + dart.str(dart.notNull(curve.x1) + dart.notNull(offsetX)) + " " + dart.str(dart.notNull(curve.y1) + dart.notNull(offsetY)) + " " + (dart.str(dart.notNull(curve.x2) + dart.notNull(offsetX)) + " " + dart.str(dart.notNull(curve.y2) + dart.notNull(offsetY)) + " " + dart.str(dart.notNull(curve.x3) + dart.notNull(offsetX)) + " " + dart.str(dart.notNull(curve.y3) + dart.notNull(offsetY))));
            break;
          }
          case src__engine.PathCommandTypes.quadraticCurveTo:
          {
            let quadraticCurveTo = src__engine.QuadraticCurveTo._check(command);
            sb.write("Q " + dart.str(dart.notNull(quadraticCurveTo.x1) + dart.notNull(offsetX)) + " " + dart.str(dart.notNull(quadraticCurveTo.y1) + dart.notNull(offsetY)) + " " + (dart.str(dart.notNull(quadraticCurveTo.x2) + dart.notNull(offsetX)) + " " + dart.str(dart.notNull(quadraticCurveTo.y2) + dart.notNull(offsetY))));
            break;
          }
          case src__engine.PathCommandTypes.close:
          {
            sb.write("Z");
            break;
          }
          case src__engine.PathCommandTypes.ellipse:
          {
            let ellipse = src__engine.Ellipse._check(command);
            if ((dart.notNull(ellipse.endAngle) - dart.notNull(ellipse.startAngle))[$modulo](2 * 3.141592653589793) === 0.0) {
              src__engine._writeEllipse(sb, dart.notNull(ellipse.x) + dart.notNull(offsetX), dart.notNull(ellipse.y) + dart.notNull(offsetY), ellipse.radiusX, ellipse.radiusY, ellipse.rotation, -3.141592653589793, 0, ellipse.anticlockwise, {moveToStartPoint: true});
              src__engine._writeEllipse(sb, dart.notNull(ellipse.x) + dart.notNull(offsetX), dart.notNull(ellipse.y) + dart.notNull(offsetY), ellipse.radiusX, ellipse.radiusY, ellipse.rotation, 0, 3.141592653589793, ellipse.anticlockwise);
            } else {
              src__engine._writeEllipse(sb, dart.notNull(ellipse.x) + dart.notNull(offsetX), dart.notNull(ellipse.y) + dart.notNull(offsetY), ellipse.radiusX, ellipse.radiusY, ellipse.rotation, ellipse.startAngle, ellipse.endAngle, ellipse.anticlockwise);
            }
            break;
          }
          case src__engine.PathCommandTypes.rRect:
          {
            let rrectCommand = src__engine.RRectCommand._check(command);
            let rrect = rrectCommand.rrect;
            let left = dart.notNull(rrect.left) + dart.notNull(offsetX);
            let right = dart.notNull(rrect.right) + dart.notNull(offsetX);
            let top = dart.notNull(rrect.top) + dart.notNull(offsetY);
            let bottom = dart.notNull(rrect.bottom) + dart.notNull(offsetY);
            if (left > right) {
              left = right;
              right = dart.notNull(rrect.left) + dart.notNull(offsetX);
            }
            if (top > bottom) {
              top = bottom;
              bottom = dart.notNull(rrect.top) + dart.notNull(offsetY);
            }
            let trRadiusX = rrect.trRadiusX[$abs]();
            let tlRadiusX = rrect.tlRadiusX[$abs]();
            let trRadiusY = rrect.trRadiusY[$abs]();
            let tlRadiusY = rrect.tlRadiusY[$abs]();
            let blRadiusX = rrect.blRadiusX[$abs]();
            let brRadiusX = rrect.brRadiusX[$abs]();
            let blRadiusY = rrect.blRadiusY[$abs]();
            let brRadiusY = rrect.brRadiusY[$abs]();
            sb.write("L " + dart.str(left + trRadiusX) + " " + dart.str(top) + " ");
            sb.write("M " + dart.str(right - trRadiusX) + " " + dart.str(top) + " ");
            src__engine._writeEllipse(sb, right - trRadiusX, top + trRadiusY, trRadiusX, trRadiusY, 0, 1.5 * 3.141592653589793, 2.0 * 3.141592653589793, false);
            sb.write("L " + dart.str(right) + " " + dart.str(bottom - brRadiusY) + " ");
            src__engine._writeEllipse(sb, right - brRadiusX, bottom - brRadiusY, brRadiusX, brRadiusY, 0, 0, 0.5 * 3.141592653589793, false);
            sb.write("L " + dart.str(left + blRadiusX) + " " + dart.str(bottom) + " ");
            src__engine._writeEllipse(sb, left + blRadiusX, bottom - blRadiusY, blRadiusX, blRadiusY, 0, 0.5 * 3.141592653589793, 3.141592653589793, false);
            sb.write("L " + dart.str(left) + " " + dart.str(top + tlRadiusY) + " ");
            src__engine._writeEllipse(sb, left + tlRadiusX, top + tlRadiusY, tlRadiusX, tlRadiusY, 0, 3.141592653589793, 1.5 * 3.141592653589793, false);
            break;
          }
          case src__engine.PathCommandTypes.rect:
          {
            let rectCommand = src__engine.RectCommand._check(command);
            let horizontalSwap = dart.notNull(rectCommand.width) < 0;
            let left = dart.notNull(offsetX) + dart.notNull(horizontalSwap ? dart.notNull(rectCommand.x) - dart.notNull(rectCommand.width) : rectCommand.x);
            let width = horizontalSwap ? -dart.notNull(rectCommand.width) : rectCommand.width;
            let verticalSwap = dart.notNull(rectCommand.height) < 0;
            let top = dart.notNull(offsetY) + dart.notNull(verticalSwap ? dart.notNull(rectCommand.y) - dart.notNull(rectCommand.height) : rectCommand.y);
            let height = verticalSwap ? -dart.notNull(rectCommand.height) : rectCommand.height;
            sb.write("M " + dart.str(left) + " " + dart.str(top) + " ");
            sb.write("L " + dart.str(left + dart.notNull(width)) + " " + dart.str(top) + " ");
            sb.write("L " + dart.str(left + dart.notNull(width)) + " " + dart.str(top + dart.notNull(height)) + " ");
            sb.write("L " + dart.str(left) + " " + dart.str(top + dart.notNull(height)) + " ");
            sb.write("L " + dart.str(left) + " " + dart.str(top) + " ");
            break;
          }
          default:
          {
            dart.throw(new core.UnimplementedError.new("Unknown path command " + dart.str(command)));
          }
        }
      }
    }
  };
  src__engine._writeEllipse = function(sb, cx, cy, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise, opts) {
    let moveToStartPoint = opts && 'moveToStartPoint' in opts ? opts.moveToStartPoint : false;
    let cosRotation = math.cos(rotation);
    let sinRotation = math.sin(rotation);
    let x = math.cos(startAngle) * dart.notNull(radiusX);
    let y = math.sin(startAngle) * dart.notNull(radiusY);
    let startPx = dart.notNull(cx) + (cosRotation * x - sinRotation * y);
    let startPy = dart.notNull(cy) + (sinRotation * x + cosRotation * y);
    let xe = math.cos(endAngle) * dart.notNull(radiusX);
    let ye = math.sin(endAngle) * dart.notNull(radiusY);
    let endPx = dart.notNull(cx) + (cosRotation * xe - sinRotation * ye);
    let endPy = dart.notNull(cy) + (sinRotation * xe + cosRotation * ye);
    let delta = dart.notNull(endAngle) - dart.notNull(startAngle);
    let largeArc = delta[$abs]() > 3.141592653589793;
    let rotationDeg = dart.notNull(rotation) / 3.141592653589793 * 180.0;
    if (dart.test(moveToStartPoint)) {
      sb.write("M " + dart.str(startPx) + " " + dart.str(startPy) + " ");
    }
    sb.write("A " + dart.str(radiusX) + " " + dart.str(radiusY) + " " + dart.str(rotationDeg) + " " + (dart.str(largeArc ? 1 : 0) + " " + dart.str(dart.test(antiClockwise) ? 0 : 1) + " " + dart.str(endPx) + " " + dart.str(endPy)));
  };
  dart.defineLazy(src__engine, {
    /*src__engine._debugLogPointerEvents*/get _debugLogPointerEvents() {
      return false;
    }
  });
  const _detector = dart.privateName(src__engine, "_detector");
  const _adapter = dart.privateName(src__engine, "_adapter");
  let const$11;
  const _createAdapter = dart.privateName(src__engine, "_createAdapter");
  let const$12;
  const _onPointerData = dart.privateName(src__engine, "_onPointerData");
  src__engine.PointerBinding = class PointerBinding extends core.Object {
    static get instance() {
      return src__engine.PointerBinding._instance;
    }
    get domRenderer() {
      return this[domRenderer$];
    }
    set domRenderer(value) {
      super.domRenderer = value;
    }
    debugOverrideDetector(newDetector) {
      if (newDetector == null) {
        newDetector = const$12 || (const$12 = dart.const(new src__engine.PointerSupportDetector.new()));
      }
      if (!dart.equals(newDetector, this[_detector])) {
        this[_detector] = newDetector;
        let t = this[_adapter];
        t == null ? null : t.clearListeners();
        this[_adapter] = this[_createAdapter]();
      }
    }
    [_createAdapter]() {
      if (dart.test(this[_detector].hasPointerEvents)) {
        return new src__engine.PointerAdapter.new(dart.bind(this, _onPointerData), this.domRenderer);
      }
      if (dart.test(this[_detector].hasTouchEvents)) {
        return new src__engine.TouchAdapter.new(dart.bind(this, _onPointerData), this.domRenderer);
      }
      if (dart.test(this[_detector].hasMouseEvents)) {
        return new src__engine.MouseAdapter.new(dart.bind(this, _onPointerData), this.domRenderer);
      }
      return null;
    }
    [_onPointerData](data) {
      let packet = new ui.PointerDataPacket.new({data: data});
      ui.window.onPointerDataPacket(packet);
    }
  };
  (src__engine.PointerBinding.new = function(domRenderer) {
    this[_detector] = null;
    this[_adapter] = null;
    this[domRenderer$] = domRenderer;
    if (src__engine.PointerBinding._instance == null) {
      src__engine.PointerBinding._instance = this;
      this[_detector] = const$11 || (const$11 = dart.const(new src__engine.PointerSupportDetector.new()));
      this[_adapter] = this[_createAdapter]();
    }
    if (!dart.test(dart.fn(() => {
      src__engine.registerHotRestartListener(dart.fn(() => {
        let t = this[_adapter];
        t == null ? null : t.clearListeners();
      }, VoidToNull()));
      return true;
    }, VoidTobool())())) dart.assertFailed();
  }).prototype = src__engine.PointerBinding.prototype;
  dart.addTypeTests(src__engine.PointerBinding);
  const domRenderer$ = Symbol("PointerBinding.domRenderer");
  dart.setMethodSignature(src__engine.PointerBinding, () => ({
    __proto__: dart.getMethods(src__engine.PointerBinding.__proto__),
    debugOverrideDetector: dart.fnType(dart.void, [src__engine.PointerSupportDetector]),
    [_createAdapter]: dart.fnType(src__engine.BaseAdapter, []),
    [_onPointerData]: dart.fnType(dart.void, [core.List$(ui.PointerData)])
  }));
  dart.setFieldSignature(src__engine.PointerBinding, () => ({
    __proto__: dart.getFields(src__engine.PointerBinding.__proto__),
    domRenderer: dart.finalFieldType(src__engine.DomRenderer),
    [_detector]: dart.fieldType(src__engine.PointerSupportDetector),
    [_adapter]: dart.fieldType(src__engine.BaseAdapter)
  }));
  dart.defineLazy(src__engine.PointerBinding, {
    /*src__engine.PointerBinding._instance*/get _instance() {
      return null;
    },
    set _instance(_) {}
  });
  src__engine.PointerSupportDetector = class PointerSupportDetector extends core.Object {
    get hasPointerEvents() {
      return core.bool._check(js_util.hasProperty(html.window, "PointerEvent"));
    }
    get hasTouchEvents() {
      return core.bool._check(js_util.hasProperty(html.window, "TouchEvent"));
    }
    get hasMouseEvents() {
      return core.bool._check(js_util.hasProperty(html.window, "MouseEvent"));
    }
    toString() {
      return "pointers:" + dart.str(this.hasPointerEvents) + ", touch:" + dart.str(this.hasTouchEvents) + ", mouse:" + dart.str(this.hasMouseEvents);
    }
  };
  (src__engine.PointerSupportDetector.new = function() {
  }).prototype = src__engine.PointerSupportDetector.prototype;
  dart.addTypeTests(src__engine.PointerSupportDetector);
  dart.setGetterSignature(src__engine.PointerSupportDetector, () => ({
    __proto__: dart.getGetters(src__engine.PointerSupportDetector.__proto__),
    hasPointerEvents: core.bool,
    hasTouchEvents: core.bool,
    hasMouseEvents: core.bool
  }));
  dart.defineExtensionMethods(src__engine.PointerSupportDetector, ['toString']);
  const _callback = dart.privateName(src__engine, "_callback");
  const _isDownMap = dart.privateName(src__engine, "_isDownMap");
  const _setup = dart.privateName(src__engine, "_setup");
  const _isButtonDown = dart.privateName(src__engine, "_isButtonDown");
  const _updateButtonDownState = dart.privateName(src__engine, "_updateButtonDownState");
  const _addEventListener = dart.privateName(src__engine, "_addEventListener");
  src__engine.BaseAdapter = class BaseAdapter extends core.Object {
    get domRenderer() {
      return this[domRenderer$0];
    }
    set domRenderer(value) {
      super.domRenderer = value;
    }
    [_isButtonDown](button) {
      return this[_isDownMap][$_get](button) === true;
    }
    [_updateButtonDownState](button, value) {
      this[_isDownMap][$_set](button, value);
    }
    clearListeners() {
      let glassPane = this.domRenderer.glassPaneElement;
      src__engine.BaseAdapter._listeners[$forEach](dart.fn((eventName, listener) => {
        glassPane[$removeEventListener](eventName, listener);
      }, StringAndFnToNull()));
      src__engine.BaseAdapter._listeners[$clear]();
    }
    [_addEventListener](eventName, handler) {
      let loggedHandler = event => {
        if (false) core.print(event.type);
        if (dart.test(src__engine.EngineSemanticsOwner.instance.receiveGlobalEvent(event))) {
          handler(event);
        }
      };
      dart.fn(loggedHandler, EventToNull());
      src__engine.BaseAdapter._listeners[$_set](eventName, loggedHandler);
      this.domRenderer.glassPaneElement[$addEventListener](eventName, loggedHandler, true);
    }
  };
  (src__engine.BaseAdapter.new = function(callback, domRenderer) {
    this[_isDownMap] = new (IdentityMapOfint$bool()).new();
    this[_callback] = callback;
    this[domRenderer$0] = domRenderer;
    this[_setup]();
  }).prototype = src__engine.BaseAdapter.prototype;
  dart.addTypeTests(src__engine.BaseAdapter);
  const domRenderer$0 = Symbol("BaseAdapter.domRenderer");
  dart.setMethodSignature(src__engine.BaseAdapter, () => ({
    __proto__: dart.getMethods(src__engine.BaseAdapter.__proto__),
    [_isButtonDown]: dart.fnType(core.bool, [core.int]),
    [_updateButtonDownState]: dart.fnType(dart.void, [core.int, core.bool]),
    clearListeners: dart.fnType(dart.void, []),
    [_addEventListener]: dart.fnType(dart.void, [core.String, dart.fnType(dart.dynamic, [html.Event])])
  }));
  dart.setFieldSignature(src__engine.BaseAdapter, () => ({
    __proto__: dart.getFields(src__engine.BaseAdapter.__proto__),
    domRenderer: dart.finalFieldType(src__engine.DomRenderer),
    [_callback]: dart.fieldType(ListOfPointerDataTovoid()),
    [_isDownMap]: dart.fieldType(MapOfint$bool())
  }));
  dart.defineLazy(src__engine.BaseAdapter, {
    /*src__engine.BaseAdapter._listeners*/get _listeners() {
      return new (IdentityMapOfString$EventTodynamic()).new();
    }
  });
  dart.defineLazy(src__engine, {
    /*src__engine._kPrimaryMouseButton*/get _kPrimaryMouseButton() {
      return 1;
    },
    /*src__engine._kSecondaryMouseButton*/get _kSecondaryMouseButton() {
      return 2;
    }
  });
  src__engine._pointerButtonFromHtmlEvent = function(event) {
    if (html.PointerEvent.is(event)) {
      let pointerEvent = event;
      return pointerEvent.button === 2 ? 2 : 1;
    } else if (html.MouseEvent.is(event)) {
      let mouseEvent = event;
      return mouseEvent.button === 2 ? 2 : 1;
    }
    return 1;
  };
  const _convertEventToPointerData = dart.privateName(src__engine, "_convertEventToPointerData");
  const _expandEvents = dart.privateName(src__engine, "_expandEvents");
  const _pointerTypeToDeviceKind = dart.privateName(src__engine, "_pointerTypeToDeviceKind");
  const _computeHighestTilt = dart.privateName(src__engine, "_computeHighestTilt");
  src__engine.PointerAdapter = class PointerAdapter extends src__engine.BaseAdapter {
    [_setup]() {
      this[_addEventListener]("pointerdown", dart.fn(event => {
        let pointerButton = src__engine._pointerButtonFromHtmlEvent(event);
        if (dart.test(this[_isButtonDown](pointerButton))) {
          this[_callback](this[_convertEventToPointerData](ui.PointerChange.up, html.PointerEvent._check(event)));
        }
        this[_updateButtonDownState](pointerButton, true);
        this[_callback](this[_convertEventToPointerData](ui.PointerChange.down, html.PointerEvent._check(event)));
      }, EventToNull()));
      this[_addEventListener]("pointermove", dart.fn(event => {
        if (!dart.test(this[_isButtonDown](src__engine._pointerButtonFromHtmlEvent(event)))) return;
        this[_callback](this[_convertEventToPointerData](ui.PointerChange.move, html.PointerEvent._check(event)));
      }, EventToNull()));
      this[_addEventListener]("pointerup", dart.fn(event => {
        let pointerButton = src__engine._pointerButtonFromHtmlEvent(event);
        if (!dart.test(this[_isButtonDown](pointerButton))) return;
        this[_updateButtonDownState](pointerButton, false);
        this[_callback](this[_convertEventToPointerData](ui.PointerChange.up, html.PointerEvent._check(event)));
      }, EventToNull()));
      this[_addEventListener]("pointercancel", dart.fn(event => {
        this[_callback](this[_convertEventToPointerData](ui.PointerChange.cancel, html.PointerEvent._check(event)));
      }, EventToNull()));
      src__engine._addWheelEventListener(dart.fn(event => {
        if (false) core.print(event.type);
        this[_callback](src__engine._convertWheelEventToPointerData(event));
        event.preventDefault();
      }, WheelEventToNull()));
    }
    [_convertEventToPointerData](change, evt) {
      let allEvents = this[_expandEvents](evt);
      let data = ListOfPointerData().new(allEvents[$length]);
      for (let i = 0; i < dart.notNull(allEvents[$length]); i++) {
        let event = allEvents[$_get](i);
        data[$_set](i, new ui.PointerData.new({change: change, timeStamp: src__engine._eventTimeStampToDuration(event.timeStamp), kind: this[_pointerTypeToDeviceKind](event.pointerType), device: src__engine._uniqueDeviceIdFromType(event.pointerType), physicalX: event[$client].x, physicalY: event[$client].y, buttons: event.buttons, pressure: event.pressure, pressureMin: 0.0, pressureMax: 1.0, tilt: this[_computeHighestTilt](event)}));
      }
      return data;
    }
    [_expandEvents](event) {
      if (dart.dtest(js_util.hasProperty(event, "getCoalescedEvents"))) {
        let coalescedEvents = event.getCoalescedEvents();
        if (dart.test(coalescedEvents[$isNotEmpty])) {
          return coalescedEvents;
        }
      }
      return JSArrayOfPointerEvent().of([event]);
    }
    [_pointerTypeToDeviceKind](pointerType) {
      switch (pointerType) {
        case "mouse":
        {
          return ui.PointerDeviceKind.mouse;
        }
        case "pen":
        {
          return ui.PointerDeviceKind.stylus;
        }
        case "touch":
        {
          return ui.PointerDeviceKind.touch;
        }
        default:
        {
          return ui.PointerDeviceKind.unknown;
        }
      }
    }
    [_computeHighestTilt](e) {
      return (e.tiltX[$abs]() > e.tiltY[$abs]() ? e.tiltX : e.tiltY)[$toDouble]() / 180.0 * 3.141592653589793;
    }
  };
  (src__engine.PointerAdapter.new = function(callback, domRenderer) {
    src__engine.PointerAdapter.__proto__.new.call(this, callback, domRenderer);
  }).prototype = src__engine.PointerAdapter.prototype;
  dart.addTypeTests(src__engine.PointerAdapter);
  dart.setMethodSignature(src__engine.PointerAdapter, () => ({
    __proto__: dart.getMethods(src__engine.PointerAdapter.__proto__),
    [_setup]: dart.fnType(dart.void, []),
    [_convertEventToPointerData]: dart.fnType(core.List$(ui.PointerData), [ui.PointerChange, html.PointerEvent]),
    [_expandEvents]: dart.fnType(core.List$(html.PointerEvent), [html.PointerEvent]),
    [_pointerTypeToDeviceKind]: dart.fnType(ui.PointerDeviceKind, [core.String]),
    [_computeHighestTilt]: dart.fnType(core.double, [html.PointerEvent])
  }));
  src__engine.TouchAdapter = class TouchAdapter extends src__engine.BaseAdapter {
    [_setup]() {
      this[_addEventListener]("touchstart", dart.fn(event => {
        this[_updateButtonDownState](1, true);
        this[_callback](this[_convertEventToPointerData](ui.PointerChange.down, html.TouchEvent._check(event)));
      }, EventToNull()));
      this[_addEventListener]("touchmove", dart.fn(event => {
        event.preventDefault();
        if (!dart.test(this[_isButtonDown](1))) return;
        this[_callback](this[_convertEventToPointerData](ui.PointerChange.move, html.TouchEvent._check(event)));
      }, EventToNull()));
      this[_addEventListener]("touchend", dart.fn(event => {
        this[_updateButtonDownState](1, false);
        this[_callback](this[_convertEventToPointerData](ui.PointerChange.up, html.TouchEvent._check(event)));
      }, EventToNull()));
      this[_addEventListener]("touchcancel", dart.fn(event => {
        this[_callback](this[_convertEventToPointerData](ui.PointerChange.cancel, html.TouchEvent._check(event)));
      }, EventToNull()));
    }
    [_convertEventToPointerData](change, event) {
      let touch = event.changedTouches[$first];
      return JSArrayOfPointerData().of([new ui.PointerData.new({change: change, timeStamp: src__engine._eventTimeStampToDuration(event.timeStamp), kind: ui.PointerDeviceKind.touch, signalKind: ui.PointerSignalKind.none, device: src__engine._uniqueDeviceIdFromType("touch"), physicalX: touch[$client].x, physicalY: touch[$client].y, pressure: 1.0, pressureMin: 0.0, pressureMax: 1.0})]);
    }
  };
  (src__engine.TouchAdapter.new = function(callback, domRenderer) {
    src__engine.TouchAdapter.__proto__.new.call(this, callback, domRenderer);
  }).prototype = src__engine.TouchAdapter.prototype;
  dart.addTypeTests(src__engine.TouchAdapter);
  dart.setMethodSignature(src__engine.TouchAdapter, () => ({
    __proto__: dart.getMethods(src__engine.TouchAdapter.__proto__),
    [_setup]: dart.fnType(dart.void, []),
    [_convertEventToPointerData]: dart.fnType(core.List$(ui.PointerData), [ui.PointerChange, html.TouchEvent])
  }));
  src__engine.MouseAdapter = class MouseAdapter extends src__engine.BaseAdapter {
    [_setup]() {
      this[_addEventListener]("mousedown", dart.fn(event => {
        let pointerButton = src__engine._pointerButtonFromHtmlEvent(event);
        if (dart.test(this[_isButtonDown](pointerButton))) {
          this[_callback](this[_convertEventToPointerData](ui.PointerChange.up, html.MouseEvent._check(event)));
        }
        this[_updateButtonDownState](pointerButton, true);
        this[_callback](this[_convertEventToPointerData](ui.PointerChange.down, html.MouseEvent._check(event)));
      }, EventToNull()));
      this[_addEventListener]("mousemove", dart.fn(event => {
        if (!dart.test(this[_isButtonDown](src__engine._pointerButtonFromHtmlEvent(event)))) return;
        this[_callback](this[_convertEventToPointerData](ui.PointerChange.move, html.MouseEvent._check(event)));
      }, EventToNull()));
      this[_addEventListener]("mouseup", dart.fn(event => {
        this[_updateButtonDownState](src__engine._pointerButtonFromHtmlEvent(event), false);
        this[_callback](this[_convertEventToPointerData](ui.PointerChange.up, html.MouseEvent._check(event)));
      }, EventToNull()));
      src__engine._addWheelEventListener(dart.fn(event => {
        if (false) core.print(event.type);
        this[_callback](src__engine._convertWheelEventToPointerData(event));
        event.preventDefault();
      }, WheelEventToNull()));
    }
    [_convertEventToPointerData](change, event) {
      return JSArrayOfPointerData().of([new ui.PointerData.new({change: change, timeStamp: src__engine._eventTimeStampToDuration(event.timeStamp), kind: ui.PointerDeviceKind.mouse, signalKind: ui.PointerSignalKind.none, device: src__engine._uniqueDeviceIdFromType("mouse"), physicalX: event[$client].x, physicalY: event[$client].y, buttons: event.buttons, pressure: 1.0, pressureMin: 0.0, pressureMax: 1.0})]);
    }
  };
  (src__engine.MouseAdapter.new = function(callback, domRenderer) {
    src__engine.MouseAdapter.__proto__.new.call(this, callback, domRenderer);
  }).prototype = src__engine.MouseAdapter.prototype;
  dart.addTypeTests(src__engine.MouseAdapter);
  dart.setMethodSignature(src__engine.MouseAdapter, () => ({
    __proto__: dart.getMethods(src__engine.MouseAdapter.__proto__),
    [_setup]: dart.fnType(dart.void, []),
    [_convertEventToPointerData]: dart.fnType(core.List$(ui.PointerData), [ui.PointerChange, html.MouseEvent])
  }));
  src__engine._eventTimeStampToDuration = function(milliseconds) {
    let ms = milliseconds[$toInt]();
    let micro = ((dart.notNull(milliseconds) - ms) * core.Duration.microsecondsPerMillisecond)[$toInt]();
    return new core.Duration.new({milliseconds: ms, microseconds: micro});
  };
  src__engine._convertWheelEventToPointerData = function(event) {
    let domDeltaPixel = 0;
    let domDeltaLine = 1;
    let domDeltaPage = 2;
    let deltaX = event[$deltaX];
    let deltaY = event[$deltaY];
    switch (event[$deltaMode]) {
      case domDeltaLine:
      {
        deltaX = dart.notNull(deltaX) * 32.0;
        deltaY = dart.notNull(deltaY) * 32.0;
        break;
      }
      case domDeltaPage:
      {
        deltaX = dart.notNull(deltaX) * dart.notNull(ui.window.physicalSize.width);
        deltaY = dart.notNull(deltaY) * dart.notNull(ui.window.physicalSize.height);
        break;
      }
      case domDeltaPixel:
      default:
      {
        break;
      }
    }
    return JSArrayOfPointerData().of([new ui.PointerData.new({change: ui.PointerChange.add, timeStamp: src__engine._eventTimeStampToDuration(event.timeStamp), kind: ui.PointerDeviceKind.mouse, signalKind: ui.PointerSignalKind.scroll, device: src__engine._uniqueDeviceIdFromType("mouse"), physicalX: event[$client].x, physicalY: event[$client].y, buttons: event.buttons, pressure: 1.0, pressureMin: 0.0, pressureMax: 1.0, scrollDeltaX: deltaX, scrollDeltaY: deltaY}), new ui.PointerData.new({change: ui.PointerChange.hover, timeStamp: src__engine._eventTimeStampToDuration(event.timeStamp), kind: ui.PointerDeviceKind.mouse, signalKind: ui.PointerSignalKind.scroll, device: src__engine._uniqueDeviceIdFromType("mouse"), physicalX: event[$client].x, physicalY: event[$client].y, buttons: event.buttons, pressure: 1.0, pressureMin: 0.0, pressureMax: 1.0, scrollDeltaX: deltaX, scrollDeltaY: deltaY})]);
  };
  src__engine._addWheelEventListener = function(listener) {
    let eventOptions = js_util.newObject();
    js_util.setProperty(eventOptions, "passive", false);
    js_util.callMethod(src__engine.PointerBinding.instance.domRenderer.glassPaneElement, "addEventListener", ["wheel", js.allowInterop(dynamicTovoid(), dart.fn(event => listener(html.WheelEvent._check(event)), dynamicTovoid())), eventOptions]);
  };
  dart.defineLazy(src__engine, {
    /*src__engine._devices*/get _devices() {
      return new (IdentityMapOfString$int()).new();
    }
  });
  src__engine._uniqueDeviceIdFromType = function(type) {
    let id = src__engine._devices[$_get](type);
    if (id == null) {
      id = src__engine._devices[$length];
      src__engine._devices[$_set](type, id);
    }
    return id;
  };
  dart.defineLazy(src__engine, {
    /*src__engine._debugDumpPaintCommands*/get _debugDumpPaintCommands() {
      return false;
    }
  });
  const _paintBounds = dart.privateName(src__engine, "_paintBounds");
  const _commands$ = dart.privateName(src__engine, "_commands");
  const _hasArbitraryPaint = dart.privateName(src__engine, "_hasArbitraryPaint");
  const _didDraw = dart.privateName(src__engine, "_didDraw");
  let const$13;
  let const$14;
  let const$15;
  let const$16;
  src__engine.RecordingCanvas = class RecordingCanvas extends core.Object {
    get hasArbitraryPaint() {
      return this[_hasArbitraryPaint];
    }
    debugEnforceArbitraryPaint() {
      this[_hasArbitraryPaint] = true;
    }
    get didDraw() {
      return this[_didDraw];
    }
    computePaintBounds() {
      return this[_paintBounds].computeBounds();
    }
    apply(engineCanvas) {
      if (false) {
        let debugBuf = new core.StringBuffer.new();
        debugBuf.writeln("--- Applying RecordingCanvas to " + dart.str(dart.runtimeType(engineCanvas)) + " " + ("with bounds " + dart.str(this[_paintBounds])));
        for (let i = 0; i < dart.notNull(this[_commands$][$length]); i++) {
          let command = this[_commands$][$_get](i);
          debugBuf.writeln("ctx." + dart.str(command) + ";");
          command.apply(engineCanvas);
        }
        debugBuf.writeln("--- End of command stream");
        core.print(debugBuf);
      } else {
        for (let i = 0; i < dart.notNull(this[_commands$][$length]); i++) {
          this[_commands$][$_get](i).apply(engineCanvas);
        }
      }
    }
    debugPrintCommands() {
      if (dart.test(src__engine.assertionsEnabled)) {
        let debugBuf = new core.StringBuffer.new();
        for (let i = 0; i < dart.notNull(this[_commands$][$length]); i++) {
          let command = this[_commands$][$_get](i);
          debugBuf.writeln("ctx." + dart.str(command) + ";");
        }
        return debugBuf.toString();
      }
      return null;
    }
    save() {
      this[_paintBounds].saveTransformsAndClip();
      this[_commands$][$add](const$13 || (const$13 = dart.const(new src__engine.PaintSave.new())));
      this.saveCount = dart.notNull(this.saveCount) + 1;
    }
    saveLayerWithoutBounds(paint) {
      this[_hasArbitraryPaint] = true;
      this[_commands$][$add](const$14 || (const$14 = dart.const(new src__engine.PaintSave.new())));
      this[_paintBounds].saveTransformsAndClip();
      this.saveCount = dart.notNull(this.saveCount) + 1;
    }
    saveLayer(bounds, paint) {
      this[_hasArbitraryPaint] = true;
      this[_commands$][$add](const$15 || (const$15 = dart.const(new src__engine.PaintSave.new())));
      this[_paintBounds].saveTransformsAndClip();
      this.saveCount = dart.notNull(this.saveCount) + 1;
    }
    restore() {
      this[_paintBounds].restoreTransformsAndClip();
      if (dart.test(this[_commands$][$isNotEmpty]) && src__engine.PaintSave.is(this[_commands$][$last])) {
        this[_commands$][$removeLast]();
      } else {
        this[_commands$][$add](const$16 || (const$16 = dart.const(new src__engine.PaintRestore.new())));
      }
      this.saveCount = dart.notNull(this.saveCount) - 1;
    }
    translate(dx, dy) {
      this[_paintBounds].translate(dx, dy);
      this[_commands$][$add](new src__engine.PaintTranslate.new(dx, dy));
    }
    scale(sx, sy) {
      this[_paintBounds].scale(sx, sy);
      this[_commands$][$add](new src__engine.PaintScale.new(sx, sy));
    }
    rotate(radians) {
      this[_paintBounds].rotateZ(radians);
      this[_commands$][$add](new src__engine.PaintRotate.new(radians));
    }
    transform(matrix4) {
      this[_paintBounds].transform(matrix4);
      this[_commands$][$add](new src__engine.PaintTransform.new(matrix4));
    }
    skew(sx, sy) {
      this[_hasArbitraryPaint] = true;
      this[_paintBounds].skew(sx, sy);
      this[_commands$][$add](new src__engine.PaintSkew.new(sx, sy));
    }
    clipRect(rect) {
      this[_paintBounds].clipRect(rect);
      this[_hasArbitraryPaint] = true;
      this[_commands$][$add](new src__engine.PaintClipRect.new(rect));
    }
    clipRRect(rrect) {
      this[_paintBounds].clipRect(rrect.outerRect);
      this[_hasArbitraryPaint] = true;
      this[_commands$][$add](new src__engine.PaintClipRRect.new(rrect));
    }
    clipPath(path) {
      this[_paintBounds].clipRect(path.getBounds());
      this[_hasArbitraryPaint] = true;
      this[_commands$][$add](new src__engine.PaintClipPath.new(path));
    }
    drawColor(color, blendMode) {
      this[_hasArbitraryPaint] = true;
      this[_didDraw] = true;
      this[_paintBounds].grow(this[_paintBounds].maxPaintBounds);
      this[_commands$][$add](new src__engine.PaintDrawColor.new(color, blendMode));
    }
    drawLine(p1, p2, paint) {
      let strokeWidth = math.max(core.double, paint.strokeWidth, 1.0);
      this[_paintBounds].growLTRB(math.min(core.double, p1.dx, p2.dx) - strokeWidth, math.min(core.double, p1.dy, p2.dy) - strokeWidth, math.max(core.double, p1.dx, p2.dx) + strokeWidth, math.max(core.double, p1.dy, p2.dy) + strokeWidth);
      this[_hasArbitraryPaint] = true;
      this[_didDraw] = true;
      this[_commands$][$add](new src__engine.PaintDrawLine.new(p1, p2, paint.webOnlyPaintData));
    }
    drawPaint(paint) {
      this[_hasArbitraryPaint] = true;
      this[_didDraw] = true;
      this[_paintBounds].grow(this[_paintBounds].maxPaintBounds);
      this[_commands$][$add](new src__engine.PaintDrawPaint.new(paint.webOnlyPaintData));
    }
    drawRect(rect, paint) {
      if (paint.shader != null) {
        this[_hasArbitraryPaint] = true;
      }
      this[_didDraw] = true;
      if (paint.strokeWidth != null && paint.strokeWidth !== 0) {
        this[_paintBounds].grow(rect.inflate(dart.notNull(paint.strokeWidth) / 2.0));
      } else {
        this[_paintBounds].grow(rect);
      }
      this[_commands$][$add](new src__engine.PaintDrawRect.new(rect, paint.webOnlyPaintData));
    }
    drawRRect(rrect, paint) {
      this[_hasArbitraryPaint] = true;
      this[_didDraw] = true;
      let strokeWidth = paint.strokeWidth == null ? 0 : paint.strokeWidth;
      let left = math.min(core.double, rrect.left, rrect.right) - dart.notNull(strokeWidth);
      let right = math.max(core.double, rrect.left, rrect.right) + dart.notNull(strokeWidth);
      let top = math.min(core.double, rrect.top, rrect.bottom) - dart.notNull(strokeWidth);
      let bottom = math.max(core.double, rrect.top, rrect.bottom) + dart.notNull(strokeWidth);
      this[_paintBounds].growLTRB(left, top, right, bottom);
      this[_commands$][$add](new src__engine.PaintDrawRRect.new(rrect, paint.webOnlyPaintData));
    }
    drawDRRect(outer, inner, paint) {
      if (!(dart.test(outer.contains(new ui.Offset.new(inner.left, inner.top))) && dart.test(outer.contains(new ui.Offset.new(inner.right, inner.bottom))))) {
        return;
      }
      this[_hasArbitraryPaint] = true;
      this[_didDraw] = true;
      let strokeWidth = paint.strokeWidth == null ? 0 : paint.strokeWidth;
      this[_paintBounds].growLTRB(dart.notNull(outer.left) - dart.notNull(strokeWidth), dart.notNull(outer.top) - dart.notNull(strokeWidth), dart.notNull(outer.right) + dart.notNull(strokeWidth), dart.notNull(outer.bottom) + dart.notNull(strokeWidth));
      this[_commands$][$add](new src__engine.PaintDrawDRRect.new(outer, inner, paint.webOnlyPaintData));
    }
    drawOval(rect, paint) {
      this[_hasArbitraryPaint] = true;
      this[_didDraw] = true;
      if (paint.strokeWidth != null) {
        this[_paintBounds].grow(rect.inflate(paint.strokeWidth));
      } else {
        this[_paintBounds].grow(rect);
      }
      this[_commands$][$add](new src__engine.PaintDrawOval.new(rect, paint.webOnlyPaintData));
    }
    drawCircle(c, radius, paint) {
      this[_hasArbitraryPaint] = true;
      this[_didDraw] = true;
      let strokeWidth = paint.strokeWidth == null ? 0 : paint.strokeWidth;
      this[_paintBounds].growLTRB(dart.notNull(c.dx) - dart.notNull(radius) - dart.notNull(strokeWidth), dart.notNull(c.dy) - dart.notNull(radius) - dart.notNull(strokeWidth), dart.notNull(c.dx) + dart.notNull(radius) + dart.notNull(strokeWidth), dart.notNull(c.dy) + dart.notNull(radius) + dart.notNull(strokeWidth));
      this[_commands$][$add](new src__engine.PaintDrawCircle.new(c, radius, paint.webOnlyPaintData));
    }
    drawPath(path, paint) {
      this[_hasArbitraryPaint] = true;
      this[_didDraw] = true;
      let pathBounds = path.getBounds();
      if (paint.strokeWidth != null) {
        pathBounds = pathBounds.inflate(paint.strokeWidth);
      }
      this[_paintBounds].grow(pathBounds);
      this[_commands$][$add](new src__engine.PaintDrawPath.new(path, paint.webOnlyPaintData));
    }
    drawImage(image, offset, paint) {
      this[_hasArbitraryPaint] = true;
      this[_didDraw] = true;
      let left = offset.dx;
      let top = offset.dy;
      this[_paintBounds].growLTRB(left, top, dart.notNull(left) + dart.notNull(image.width), dart.notNull(top) + dart.notNull(image.height));
      this[_commands$][$add](new src__engine.PaintDrawImage.new(image, offset, paint.webOnlyPaintData));
    }
    drawImageRect(image, src, dst, paint) {
      this[_hasArbitraryPaint] = true;
      this[_didDraw] = true;
      this[_paintBounds].grow(dst);
      this[_commands$][$add](new src__engine.PaintDrawImageRect.new(image, src, dst, paint.webOnlyPaintData));
    }
    drawParagraph(paragraph, offset) {
      this[_didDraw] = true;
      let left = offset.dx;
      let top = offset.dy;
      this[_paintBounds].growLTRB(left, top, dart.notNull(left) + dart.notNull(paragraph.width), dart.notNull(top) + dart.notNull(paragraph.height));
      this[_commands$][$add](new src__engine.PaintDrawParagraph.new(paragraph, offset));
    }
    drawShadow(path, color, elevation, transparentOccluder) {
      this[_hasArbitraryPaint] = true;
      this[_didDraw] = true;
      let shadowRect = src__engine.ElevationShadow.computeShadowRect(path.getBounds(), elevation);
      this[_paintBounds].grow(shadowRect);
      this[_commands$][$add](new src__engine.PaintDrawShadow.new(path, color, elevation, transparentOccluder));
    }
    get saveCount() {
      return this[saveCount];
    }
    set saveCount(value) {
      this[saveCount] = value;
    }
    debugDumpCommands() {
      core.print("/"[$times](40) + " CANVAS COMMANDS " + "/"[$times](40));
      for (let command of this[_commands$]) {
        core.print(command);
      }
      core.print("/"[$times](37) + " END OF CANVAS COMMANDS " + "/"[$times](36));
    }
  };
  (src__engine.RecordingCanvas.new = function(bounds) {
    this[_commands$] = JSArrayOfPaintCommand().of([]);
    this[_hasArbitraryPaint] = false;
    this[_didDraw] = false;
    this[saveCount] = 1;
    this[_paintBounds] = new src__engine._PaintBounds.new(bounds);
  }).prototype = src__engine.RecordingCanvas.prototype;
  dart.addTypeTests(src__engine.RecordingCanvas);
  const saveCount = Symbol("RecordingCanvas.saveCount");
  dart.setMethodSignature(src__engine.RecordingCanvas, () => ({
    __proto__: dart.getMethods(src__engine.RecordingCanvas.__proto__),
    debugEnforceArbitraryPaint: dart.fnType(dart.void, []),
    computePaintBounds: dart.fnType(ui.Rect, []),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    debugPrintCommands: dart.fnType(core.String, []),
    save: dart.fnType(dart.void, []),
    saveLayerWithoutBounds: dart.fnType(dart.void, [ui.Paint]),
    saveLayer: dart.fnType(dart.void, [ui.Rect, ui.Paint]),
    restore: dart.fnType(dart.void, []),
    translate: dart.fnType(dart.void, [core.double, core.double]),
    scale: dart.fnType(dart.void, [core.double, core.double]),
    rotate: dart.fnType(dart.void, [core.double]),
    transform: dart.fnType(dart.void, [typed_data.Float64List]),
    skew: dart.fnType(dart.void, [core.double, core.double]),
    clipRect: dart.fnType(dart.void, [ui.Rect]),
    clipRRect: dart.fnType(dart.void, [ui.RRect]),
    clipPath: dart.fnType(dart.void, [ui.Path]),
    drawColor: dart.fnType(dart.void, [ui.Color, ui.BlendMode]),
    drawLine: dart.fnType(dart.void, [ui.Offset, ui.Offset, ui.Paint]),
    drawPaint: dart.fnType(dart.void, [ui.Paint]),
    drawRect: dart.fnType(dart.void, [ui.Rect, ui.Paint]),
    drawRRect: dart.fnType(dart.void, [ui.RRect, ui.Paint]),
    drawDRRect: dart.fnType(dart.void, [ui.RRect, ui.RRect, ui.Paint]),
    drawOval: dart.fnType(dart.void, [ui.Rect, ui.Paint]),
    drawCircle: dart.fnType(dart.void, [ui.Offset, core.double, ui.Paint]),
    drawPath: dart.fnType(dart.void, [ui.Path, ui.Paint]),
    drawImage: dart.fnType(dart.void, [ui.Image, ui.Offset, ui.Paint]),
    drawImageRect: dart.fnType(dart.void, [ui.Image, ui.Rect, ui.Rect, ui.Paint]),
    drawParagraph: dart.fnType(dart.void, [ui.Paragraph, ui.Offset]),
    drawShadow: dart.fnType(dart.void, [ui.Path, ui.Color, core.double, core.bool]),
    debugDumpCommands: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(src__engine.RecordingCanvas, () => ({
    __proto__: dart.getGetters(src__engine.RecordingCanvas.__proto__),
    hasArbitraryPaint: core.bool,
    didDraw: core.bool
  }));
  dart.setFieldSignature(src__engine.RecordingCanvas, () => ({
    __proto__: dart.getFields(src__engine.RecordingCanvas.__proto__),
    [_paintBounds]: dart.finalFieldType(src__engine._PaintBounds),
    [_commands$]: dart.finalFieldType(ListOfPaintCommand()),
    [_hasArbitraryPaint]: dart.fieldType(core.bool),
    [_didDraw]: dart.fieldType(core.bool),
    saveCount: dart.fieldType(core.int)
  }));
  src__engine.PaintCommand = class PaintCommand extends core.Object {};
  (src__engine.PaintCommand.new = function() {
  }).prototype = src__engine.PaintCommand.prototype;
  dart.addTypeTests(src__engine.PaintCommand);
  let const$17;
  src__engine.PaintSave = class PaintSave extends src__engine.PaintCommand {
    apply(canvas) {
      canvas.save();
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "save()";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      serializedCommands[$add](const$17 || (const$17 = dart.constList([1], dart.dynamic)));
    }
  };
  (src__engine.PaintSave.new = function() {
    src__engine.PaintSave.__proto__.new.call(this);
  }).prototype = src__engine.PaintSave.prototype;
  dart.addTypeTests(src__engine.PaintSave);
  dart.setMethodSignature(src__engine.PaintSave, () => ({
    __proto__: dart.getMethods(src__engine.PaintSave.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.defineExtensionMethods(src__engine.PaintSave, ['toString']);
  let const$18;
  src__engine.PaintRestore = class PaintRestore extends src__engine.PaintCommand {
    apply(canvas) {
      canvas.restore();
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "restore()";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      serializedCommands[$add](const$18 || (const$18 = dart.constList([2], dart.dynamic)));
    }
  };
  (src__engine.PaintRestore.new = function() {
    src__engine.PaintRestore.__proto__.new.call(this);
  }).prototype = src__engine.PaintRestore.prototype;
  dart.addTypeTests(src__engine.PaintRestore);
  dart.setMethodSignature(src__engine.PaintRestore, () => ({
    __proto__: dart.getMethods(src__engine.PaintRestore.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.defineExtensionMethods(src__engine.PaintRestore, ['toString']);
  src__engine.PaintTranslate = class PaintTranslate extends src__engine.PaintCommand {
    get dx() {
      return this[dx$1];
    }
    set dx(value) {
      super.dx = value;
    }
    get dy() {
      return this[dy$1];
    }
    set dy(value) {
      super.dy = value;
    }
    apply(canvas) {
      canvas.translate(this.dx, this.dy);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "translate(" + dart.str(this.dx) + ", " + dart.str(this.dy) + ")";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      serializedCommands[$add]([3, this.dx, this.dy]);
    }
  };
  (src__engine.PaintTranslate.new = function(dx, dy) {
    this[dx$1] = dx;
    this[dy$1] = dy;
    src__engine.PaintTranslate.__proto__.new.call(this);
  }).prototype = src__engine.PaintTranslate.prototype;
  dart.addTypeTests(src__engine.PaintTranslate);
  const dx$1 = Symbol("PaintTranslate.dx");
  const dy$1 = Symbol("PaintTranslate.dy");
  dart.setMethodSignature(src__engine.PaintTranslate, () => ({
    __proto__: dart.getMethods(src__engine.PaintTranslate.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintTranslate, () => ({
    __proto__: dart.getFields(src__engine.PaintTranslate.__proto__),
    dx: dart.finalFieldType(core.double),
    dy: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(src__engine.PaintTranslate, ['toString']);
  src__engine.PaintScale = class PaintScale extends src__engine.PaintCommand {
    get sx() {
      return this[sx$];
    }
    set sx(value) {
      super.sx = value;
    }
    get sy() {
      return this[sy$];
    }
    set sy(value) {
      super.sy = value;
    }
    apply(canvas) {
      canvas.scale(this.sx, this.sy);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "scale(" + dart.str(this.sx) + ", " + dart.str(this.sy) + ")";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      serializedCommands[$add]([4, this.sx, this.sy]);
    }
  };
  (src__engine.PaintScale.new = function(sx, sy) {
    this[sx$] = sx;
    this[sy$] = sy;
    src__engine.PaintScale.__proto__.new.call(this);
  }).prototype = src__engine.PaintScale.prototype;
  dart.addTypeTests(src__engine.PaintScale);
  const sx$ = Symbol("PaintScale.sx");
  const sy$ = Symbol("PaintScale.sy");
  dart.setMethodSignature(src__engine.PaintScale, () => ({
    __proto__: dart.getMethods(src__engine.PaintScale.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintScale, () => ({
    __proto__: dart.getFields(src__engine.PaintScale.__proto__),
    sx: dart.finalFieldType(core.double),
    sy: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(src__engine.PaintScale, ['toString']);
  src__engine.PaintRotate = class PaintRotate extends src__engine.PaintCommand {
    get radians() {
      return this[radians$];
    }
    set radians(value) {
      super.radians = value;
    }
    apply(canvas) {
      canvas.rotate(this.radians);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "rotate(" + dart.str(this.radians) + ")";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      serializedCommands[$add]([5, this.radians]);
    }
  };
  (src__engine.PaintRotate.new = function(radians) {
    this[radians$] = radians;
    src__engine.PaintRotate.__proto__.new.call(this);
  }).prototype = src__engine.PaintRotate.prototype;
  dart.addTypeTests(src__engine.PaintRotate);
  const radians$ = Symbol("PaintRotate.radians");
  dart.setMethodSignature(src__engine.PaintRotate, () => ({
    __proto__: dart.getMethods(src__engine.PaintRotate.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintRotate, () => ({
    __proto__: dart.getFields(src__engine.PaintRotate.__proto__),
    radians: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(src__engine.PaintRotate, ['toString']);
  src__engine.PaintTransform = class PaintTransform extends src__engine.PaintCommand {
    get matrix4() {
      return this[matrix4$0];
    }
    set matrix4(value) {
      super.matrix4 = value;
    }
    apply(canvas) {
      canvas.transform(this.matrix4);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "transform(Matrix4.fromFloat64List(Float64List.fromList(<double>[" + dart.str(this.matrix4[$join](", ")) + "])))";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      serializedCommands[$add]((() => {
        let _ = [6];
        _[$addAll](this.matrix4);
        return _;
      })());
    }
  };
  (src__engine.PaintTransform.new = function(matrix4) {
    this[matrix4$0] = matrix4;
    src__engine.PaintTransform.__proto__.new.call(this);
  }).prototype = src__engine.PaintTransform.prototype;
  dart.addTypeTests(src__engine.PaintTransform);
  const matrix4$0 = Symbol("PaintTransform.matrix4");
  dart.setMethodSignature(src__engine.PaintTransform, () => ({
    __proto__: dart.getMethods(src__engine.PaintTransform.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintTransform, () => ({
    __proto__: dart.getFields(src__engine.PaintTransform.__proto__),
    matrix4: dart.finalFieldType(typed_data.Float64List)
  }));
  dart.defineExtensionMethods(src__engine.PaintTransform, ['toString']);
  src__engine.PaintSkew = class PaintSkew extends src__engine.PaintCommand {
    get sx() {
      return this[sx$0];
    }
    set sx(value) {
      super.sx = value;
    }
    get sy() {
      return this[sy$0];
    }
    set sy(value) {
      super.sy = value;
    }
    apply(canvas) {
      canvas.skew(this.sx, this.sy);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "skew(" + dart.str(this.sx) + ", " + dart.str(this.sy) + ")";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      serializedCommands[$add]([7, this.sx, this.sy]);
    }
  };
  (src__engine.PaintSkew.new = function(sx, sy) {
    this[sx$0] = sx;
    this[sy$0] = sy;
    src__engine.PaintSkew.__proto__.new.call(this);
  }).prototype = src__engine.PaintSkew.prototype;
  dart.addTypeTests(src__engine.PaintSkew);
  const sx$0 = Symbol("PaintSkew.sx");
  const sy$0 = Symbol("PaintSkew.sy");
  dart.setMethodSignature(src__engine.PaintSkew, () => ({
    __proto__: dart.getMethods(src__engine.PaintSkew.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintSkew, () => ({
    __proto__: dart.getFields(src__engine.PaintSkew.__proto__),
    sx: dart.finalFieldType(core.double),
    sy: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(src__engine.PaintSkew, ['toString']);
  src__engine.PaintClipRect = class PaintClipRect extends src__engine.PaintCommand {
    get rect() {
      return this[rect$0];
    }
    set rect(value) {
      super.rect = value;
    }
    apply(canvas) {
      canvas.clipRect(this.rect);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "clipRect(" + dart.str(this.rect) + ")";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      serializedCommands[$add]([8, src__engine._serializeRectToCssPaint(this.rect)]);
    }
  };
  (src__engine.PaintClipRect.new = function(rect) {
    this[rect$0] = rect;
    src__engine.PaintClipRect.__proto__.new.call(this);
  }).prototype = src__engine.PaintClipRect.prototype;
  dart.addTypeTests(src__engine.PaintClipRect);
  const rect$0 = Symbol("PaintClipRect.rect");
  dart.setMethodSignature(src__engine.PaintClipRect, () => ({
    __proto__: dart.getMethods(src__engine.PaintClipRect.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintClipRect, () => ({
    __proto__: dart.getFields(src__engine.PaintClipRect.__proto__),
    rect: dart.finalFieldType(ui.Rect)
  }));
  dart.defineExtensionMethods(src__engine.PaintClipRect, ['toString']);
  src__engine.PaintClipRRect = class PaintClipRRect extends src__engine.PaintCommand {
    get rrect() {
      return this[rrect$0];
    }
    set rrect(value) {
      super.rrect = value;
    }
    apply(canvas) {
      canvas.clipRRect(this.rrect);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "clipRRect(" + dart.str(this.rrect) + ")";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      serializedCommands[$add]([9, src__engine._serializeRRectToCssPaint(this.rrect)]);
    }
  };
  (src__engine.PaintClipRRect.new = function(rrect) {
    this[rrect$0] = rrect;
    src__engine.PaintClipRRect.__proto__.new.call(this);
  }).prototype = src__engine.PaintClipRRect.prototype;
  dart.addTypeTests(src__engine.PaintClipRRect);
  const rrect$0 = Symbol("PaintClipRRect.rrect");
  dart.setMethodSignature(src__engine.PaintClipRRect, () => ({
    __proto__: dart.getMethods(src__engine.PaintClipRRect.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintClipRRect, () => ({
    __proto__: dart.getFields(src__engine.PaintClipRRect.__proto__),
    rrect: dart.finalFieldType(ui.RRect)
  }));
  dart.defineExtensionMethods(src__engine.PaintClipRRect, ['toString']);
  src__engine.PaintClipPath = class PaintClipPath extends src__engine.PaintCommand {
    get path() {
      return this[path$1];
    }
    set path(value) {
      super.path = value;
    }
    apply(canvas) {
      canvas.clipPath(this.path);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "clipPath(" + dart.str(this.path) + ")";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      serializedCommands[$add]([10, this.path.webOnlySerializeToCssPaint()]);
    }
  };
  (src__engine.PaintClipPath.new = function(path) {
    this[path$1] = path;
    src__engine.PaintClipPath.__proto__.new.call(this);
  }).prototype = src__engine.PaintClipPath.prototype;
  dart.addTypeTests(src__engine.PaintClipPath);
  const path$1 = Symbol("PaintClipPath.path");
  dart.setMethodSignature(src__engine.PaintClipPath, () => ({
    __proto__: dart.getMethods(src__engine.PaintClipPath.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintClipPath, () => ({
    __proto__: dart.getFields(src__engine.PaintClipPath.__proto__),
    path: dart.finalFieldType(ui.Path)
  }));
  dart.defineExtensionMethods(src__engine.PaintClipPath, ['toString']);
  src__engine.PaintDrawColor = class PaintDrawColor extends src__engine.PaintCommand {
    get color() {
      return this[color$1];
    }
    set color(value) {
      super.color = value;
    }
    get blendMode() {
      return this[blendMode$];
    }
    set blendMode(value) {
      super.blendMode = value;
    }
    apply(canvas) {
      canvas.drawColor(this.color, this.blendMode);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "drawColor(" + dart.str(this.color) + ", " + dart.str(this.blendMode) + ")";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      serializedCommands[$add]([11, this.color.toCssString(), this.blendMode.index]);
    }
  };
  (src__engine.PaintDrawColor.new = function(color, blendMode) {
    this[color$1] = color;
    this[blendMode$] = blendMode;
    src__engine.PaintDrawColor.__proto__.new.call(this);
  }).prototype = src__engine.PaintDrawColor.prototype;
  dart.addTypeTests(src__engine.PaintDrawColor);
  const color$1 = Symbol("PaintDrawColor.color");
  const blendMode$ = Symbol("PaintDrawColor.blendMode");
  dart.setMethodSignature(src__engine.PaintDrawColor, () => ({
    __proto__: dart.getMethods(src__engine.PaintDrawColor.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintDrawColor, () => ({
    __proto__: dart.getFields(src__engine.PaintDrawColor.__proto__),
    color: dart.finalFieldType(ui.Color),
    blendMode: dart.finalFieldType(ui.BlendMode)
  }));
  dart.defineExtensionMethods(src__engine.PaintDrawColor, ['toString']);
  src__engine.PaintDrawLine = class PaintDrawLine extends src__engine.PaintCommand {
    get p1() {
      return this[p1$];
    }
    set p1(value) {
      super.p1 = value;
    }
    get p2() {
      return this[p2$];
    }
    set p2(value) {
      super.p2 = value;
    }
    get paint() {
      return this[paint$];
    }
    set paint(value) {
      super.paint = value;
    }
    apply(canvas) {
      canvas.drawLine(this.p1, this.p2, this.paint);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "drawLine(" + dart.str(this.p1) + ", " + dart.str(this.p2) + ", " + dart.str(this.paint) + ")";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      serializedCommands[$add]([12, this.p1.dx, this.p1.dy, this.p2.dx, this.p2.dy, src__engine._serializePaintToCssPaint(this.paint)]);
    }
  };
  (src__engine.PaintDrawLine.new = function(p1, p2, paint) {
    this[p1$] = p1;
    this[p2$] = p2;
    this[paint$] = paint;
    src__engine.PaintDrawLine.__proto__.new.call(this);
  }).prototype = src__engine.PaintDrawLine.prototype;
  dart.addTypeTests(src__engine.PaintDrawLine);
  const p1$ = Symbol("PaintDrawLine.p1");
  const p2$ = Symbol("PaintDrawLine.p2");
  const paint$ = Symbol("PaintDrawLine.paint");
  dart.setMethodSignature(src__engine.PaintDrawLine, () => ({
    __proto__: dart.getMethods(src__engine.PaintDrawLine.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintDrawLine, () => ({
    __proto__: dart.getFields(src__engine.PaintDrawLine.__proto__),
    p1: dart.finalFieldType(ui.Offset),
    p2: dart.finalFieldType(ui.Offset),
    paint: dart.finalFieldType(ui.PaintData)
  }));
  dart.defineExtensionMethods(src__engine.PaintDrawLine, ['toString']);
  src__engine.PaintDrawPaint = class PaintDrawPaint extends src__engine.PaintCommand {
    get paint() {
      return this[paint$0];
    }
    set paint(value) {
      super.paint = value;
    }
    apply(canvas) {
      canvas.drawPaint(this.paint);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "drawPaint(" + dart.str(this.paint) + ")";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      serializedCommands[$add]([13, src__engine._serializePaintToCssPaint(this.paint)]);
    }
  };
  (src__engine.PaintDrawPaint.new = function(paint) {
    this[paint$0] = paint;
    src__engine.PaintDrawPaint.__proto__.new.call(this);
  }).prototype = src__engine.PaintDrawPaint.prototype;
  dart.addTypeTests(src__engine.PaintDrawPaint);
  const paint$0 = Symbol("PaintDrawPaint.paint");
  dart.setMethodSignature(src__engine.PaintDrawPaint, () => ({
    __proto__: dart.getMethods(src__engine.PaintDrawPaint.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintDrawPaint, () => ({
    __proto__: dart.getFields(src__engine.PaintDrawPaint.__proto__),
    paint: dart.finalFieldType(ui.PaintData)
  }));
  dart.defineExtensionMethods(src__engine.PaintDrawPaint, ['toString']);
  src__engine.PaintDrawRect = class PaintDrawRect extends src__engine.PaintCommand {
    get rect() {
      return this[rect$1];
    }
    set rect(value) {
      super.rect = value;
    }
    get paint() {
      return this[paint$1];
    }
    set paint(value) {
      super.paint = value;
    }
    apply(canvas) {
      canvas.drawRect(this.rect, this.paint);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "drawRect(" + dart.str(this.rect) + ", " + dart.str(this.paint) + ")";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      serializedCommands[$add]([14, src__engine._serializeRectToCssPaint(this.rect), src__engine._serializePaintToCssPaint(this.paint)]);
    }
  };
  (src__engine.PaintDrawRect.new = function(rect, paint) {
    this[rect$1] = rect;
    this[paint$1] = paint;
    src__engine.PaintDrawRect.__proto__.new.call(this);
  }).prototype = src__engine.PaintDrawRect.prototype;
  dart.addTypeTests(src__engine.PaintDrawRect);
  const rect$1 = Symbol("PaintDrawRect.rect");
  const paint$1 = Symbol("PaintDrawRect.paint");
  dart.setMethodSignature(src__engine.PaintDrawRect, () => ({
    __proto__: dart.getMethods(src__engine.PaintDrawRect.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintDrawRect, () => ({
    __proto__: dart.getFields(src__engine.PaintDrawRect.__proto__),
    rect: dart.finalFieldType(ui.Rect),
    paint: dart.finalFieldType(ui.PaintData)
  }));
  dart.defineExtensionMethods(src__engine.PaintDrawRect, ['toString']);
  src__engine.PaintDrawRRect = class PaintDrawRRect extends src__engine.PaintCommand {
    get rrect() {
      return this[rrect$1];
    }
    set rrect(value) {
      super.rrect = value;
    }
    get paint() {
      return this[paint$2];
    }
    set paint(value) {
      super.paint = value;
    }
    apply(canvas) {
      canvas.drawRRect(this.rrect, this.paint);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "drawRRect(" + dart.str(this.rrect) + ", " + dart.str(this.paint) + ")";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      serializedCommands[$add]([15, src__engine._serializeRRectToCssPaint(this.rrect), src__engine._serializePaintToCssPaint(this.paint)]);
    }
  };
  (src__engine.PaintDrawRRect.new = function(rrect, paint) {
    this[rrect$1] = rrect;
    this[paint$2] = paint;
    src__engine.PaintDrawRRect.__proto__.new.call(this);
  }).prototype = src__engine.PaintDrawRRect.prototype;
  dart.addTypeTests(src__engine.PaintDrawRRect);
  const rrect$1 = Symbol("PaintDrawRRect.rrect");
  const paint$2 = Symbol("PaintDrawRRect.paint");
  dart.setMethodSignature(src__engine.PaintDrawRRect, () => ({
    __proto__: dart.getMethods(src__engine.PaintDrawRRect.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintDrawRRect, () => ({
    __proto__: dart.getFields(src__engine.PaintDrawRRect.__proto__),
    rrect: dart.finalFieldType(ui.RRect),
    paint: dart.finalFieldType(ui.PaintData)
  }));
  dart.defineExtensionMethods(src__engine.PaintDrawRRect, ['toString']);
  src__engine.PaintDrawDRRect = class PaintDrawDRRect extends src__engine.PaintCommand {
    get outer() {
      return this[outer$];
    }
    set outer(value) {
      super.outer = value;
    }
    get inner() {
      return this[inner$];
    }
    set inner(value) {
      super.inner = value;
    }
    get paint() {
      return this[paint$3];
    }
    set paint(value) {
      super.paint = value;
    }
    apply(canvas) {
      canvas.drawDRRect(this.outer, this.inner, this.paint);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "drawDRRect(" + dart.str(this.outer) + ", " + dart.str(this.inner) + ", " + dart.str(this.paint) + ")";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      serializedCommands[$add]([16, src__engine._serializeRRectToCssPaint(this.outer), src__engine._serializeRRectToCssPaint(this.inner), src__engine._serializePaintToCssPaint(this.paint)]);
    }
  };
  (src__engine.PaintDrawDRRect.new = function(outer, inner, paint) {
    this[outer$] = outer;
    this[inner$] = inner;
    this[paint$3] = paint;
    src__engine.PaintDrawDRRect.__proto__.new.call(this);
  }).prototype = src__engine.PaintDrawDRRect.prototype;
  dart.addTypeTests(src__engine.PaintDrawDRRect);
  const outer$ = Symbol("PaintDrawDRRect.outer");
  const inner$ = Symbol("PaintDrawDRRect.inner");
  const paint$3 = Symbol("PaintDrawDRRect.paint");
  dart.setMethodSignature(src__engine.PaintDrawDRRect, () => ({
    __proto__: dart.getMethods(src__engine.PaintDrawDRRect.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintDrawDRRect, () => ({
    __proto__: dart.getFields(src__engine.PaintDrawDRRect.__proto__),
    outer: dart.finalFieldType(ui.RRect),
    inner: dart.finalFieldType(ui.RRect),
    paint: dart.finalFieldType(ui.PaintData)
  }));
  dart.defineExtensionMethods(src__engine.PaintDrawDRRect, ['toString']);
  src__engine.PaintDrawOval = class PaintDrawOval extends src__engine.PaintCommand {
    get rect() {
      return this[rect$2];
    }
    set rect(value) {
      super.rect = value;
    }
    get paint() {
      return this[paint$4];
    }
    set paint(value) {
      super.paint = value;
    }
    apply(canvas) {
      canvas.drawOval(this.rect, this.paint);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "drawOval(" + dart.str(this.rect) + ", " + dart.str(this.paint) + ")";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      serializedCommands[$add]([17, src__engine._serializeRectToCssPaint(this.rect), src__engine._serializePaintToCssPaint(this.paint)]);
    }
  };
  (src__engine.PaintDrawOval.new = function(rect, paint) {
    this[rect$2] = rect;
    this[paint$4] = paint;
    src__engine.PaintDrawOval.__proto__.new.call(this);
  }).prototype = src__engine.PaintDrawOval.prototype;
  dart.addTypeTests(src__engine.PaintDrawOval);
  const rect$2 = Symbol("PaintDrawOval.rect");
  const paint$4 = Symbol("PaintDrawOval.paint");
  dart.setMethodSignature(src__engine.PaintDrawOval, () => ({
    __proto__: dart.getMethods(src__engine.PaintDrawOval.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintDrawOval, () => ({
    __proto__: dart.getFields(src__engine.PaintDrawOval.__proto__),
    rect: dart.finalFieldType(ui.Rect),
    paint: dart.finalFieldType(ui.PaintData)
  }));
  dart.defineExtensionMethods(src__engine.PaintDrawOval, ['toString']);
  src__engine.PaintDrawCircle = class PaintDrawCircle extends src__engine.PaintCommand {
    get c() {
      return this[c$];
    }
    set c(value) {
      super.c = value;
    }
    get radius() {
      return this[radius$];
    }
    set radius(value) {
      super.radius = value;
    }
    get paint() {
      return this[paint$5];
    }
    set paint(value) {
      super.paint = value;
    }
    apply(canvas) {
      canvas.drawCircle(this.c, this.radius, this.paint);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "drawCircle(" + dart.str(this.c) + ", " + dart.str(this.radius) + ", " + dart.str(this.paint) + ")";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      serializedCommands[$add]([18, this.c.dx, this.c.dy, this.radius, src__engine._serializePaintToCssPaint(this.paint)]);
    }
  };
  (src__engine.PaintDrawCircle.new = function(c, radius, paint) {
    this[c$] = c;
    this[radius$] = radius;
    this[paint$5] = paint;
    src__engine.PaintDrawCircle.__proto__.new.call(this);
  }).prototype = src__engine.PaintDrawCircle.prototype;
  dart.addTypeTests(src__engine.PaintDrawCircle);
  const c$ = Symbol("PaintDrawCircle.c");
  const radius$ = Symbol("PaintDrawCircle.radius");
  const paint$5 = Symbol("PaintDrawCircle.paint");
  dart.setMethodSignature(src__engine.PaintDrawCircle, () => ({
    __proto__: dart.getMethods(src__engine.PaintDrawCircle.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintDrawCircle, () => ({
    __proto__: dart.getFields(src__engine.PaintDrawCircle.__proto__),
    c: dart.finalFieldType(ui.Offset),
    radius: dart.finalFieldType(core.double),
    paint: dart.finalFieldType(ui.PaintData)
  }));
  dart.defineExtensionMethods(src__engine.PaintDrawCircle, ['toString']);
  src__engine.PaintDrawPath = class PaintDrawPath extends src__engine.PaintCommand {
    get path() {
      return this[path$2];
    }
    set path(value) {
      super.path = value;
    }
    get paint() {
      return this[paint$6];
    }
    set paint(value) {
      super.paint = value;
    }
    apply(canvas) {
      canvas.drawPath(this.path, this.paint);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "drawPath(" + dart.str(this.path) + ", " + dart.str(this.paint) + ")";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      serializedCommands[$add]([19, this.path.webOnlySerializeToCssPaint(), src__engine._serializePaintToCssPaint(this.paint)]);
    }
  };
  (src__engine.PaintDrawPath.new = function(path, paint) {
    this[path$2] = path;
    this[paint$6] = paint;
    src__engine.PaintDrawPath.__proto__.new.call(this);
  }).prototype = src__engine.PaintDrawPath.prototype;
  dart.addTypeTests(src__engine.PaintDrawPath);
  const path$2 = Symbol("PaintDrawPath.path");
  const paint$6 = Symbol("PaintDrawPath.paint");
  dart.setMethodSignature(src__engine.PaintDrawPath, () => ({
    __proto__: dart.getMethods(src__engine.PaintDrawPath.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintDrawPath, () => ({
    __proto__: dart.getFields(src__engine.PaintDrawPath.__proto__),
    path: dart.finalFieldType(ui.Path),
    paint: dart.finalFieldType(ui.PaintData)
  }));
  dart.defineExtensionMethods(src__engine.PaintDrawPath, ['toString']);
  src__engine.PaintDrawShadow = class PaintDrawShadow extends src__engine.PaintCommand {
    get path() {
      return this[path$3];
    }
    set path(value) {
      super.path = value;
    }
    get color() {
      return this[color$2];
    }
    set color(value) {
      super.color = value;
    }
    get elevation() {
      return this[elevation$0];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get transparentOccluder() {
      return this[transparentOccluder$];
    }
    set transparentOccluder(value) {
      super.transparentOccluder = value;
    }
    apply(canvas) {
      canvas.drawShadow(this.path, this.color, this.elevation, this.transparentOccluder);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "drawShadow(" + dart.str(this.path) + ", " + dart.str(this.color) + ", " + dart.str(this.elevation) + ", " + dart.str(this.transparentOccluder) + ")";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      serializedCommands[$add]([20, this.path.webOnlySerializeToCssPaint(), JSArrayOfint().of([this.color.alpha, this.color.red, this.color.green, this.color.blue]), this.elevation, this.transparentOccluder]);
    }
  };
  (src__engine.PaintDrawShadow.new = function(path, color, elevation, transparentOccluder) {
    this[path$3] = path;
    this[color$2] = color;
    this[elevation$0] = elevation;
    this[transparentOccluder$] = transparentOccluder;
    src__engine.PaintDrawShadow.__proto__.new.call(this);
  }).prototype = src__engine.PaintDrawShadow.prototype;
  dart.addTypeTests(src__engine.PaintDrawShadow);
  const path$3 = Symbol("PaintDrawShadow.path");
  const color$2 = Symbol("PaintDrawShadow.color");
  const elevation$0 = Symbol("PaintDrawShadow.elevation");
  const transparentOccluder$ = Symbol("PaintDrawShadow.transparentOccluder");
  dart.setMethodSignature(src__engine.PaintDrawShadow, () => ({
    __proto__: dart.getMethods(src__engine.PaintDrawShadow.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintDrawShadow, () => ({
    __proto__: dart.getFields(src__engine.PaintDrawShadow.__proto__),
    path: dart.finalFieldType(ui.Path),
    color: dart.finalFieldType(ui.Color),
    elevation: dart.finalFieldType(core.double),
    transparentOccluder: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(src__engine.PaintDrawShadow, ['toString']);
  src__engine.PaintDrawImage = class PaintDrawImage extends src__engine.PaintCommand {
    get image() {
      return this[image$0];
    }
    set image(value) {
      super.image = value;
    }
    get offset() {
      return this[offset$3];
    }
    set offset(value) {
      super.offset = value;
    }
    get paint() {
      return this[paint$7];
    }
    set paint(value) {
      super.paint = value;
    }
    apply(canvas) {
      canvas.drawImage(this.image, this.offset, this.paint);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "drawImage(" + dart.str(this.image) + ", " + dart.str(this.offset) + ", " + dart.str(this.paint) + ")";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      if (dart.test(src__engine.assertionsEnabled)) {
        dart.throw(new core.UnsupportedError.new("drawImage not serializable"));
      }
    }
  };
  (src__engine.PaintDrawImage.new = function(image, offset, paint) {
    this[image$0] = image;
    this[offset$3] = offset;
    this[paint$7] = paint;
    src__engine.PaintDrawImage.__proto__.new.call(this);
  }).prototype = src__engine.PaintDrawImage.prototype;
  dart.addTypeTests(src__engine.PaintDrawImage);
  const image$0 = Symbol("PaintDrawImage.image");
  const offset$3 = Symbol("PaintDrawImage.offset");
  const paint$7 = Symbol("PaintDrawImage.paint");
  dart.setMethodSignature(src__engine.PaintDrawImage, () => ({
    __proto__: dart.getMethods(src__engine.PaintDrawImage.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintDrawImage, () => ({
    __proto__: dart.getFields(src__engine.PaintDrawImage.__proto__),
    image: dart.finalFieldType(ui.Image),
    offset: dart.finalFieldType(ui.Offset),
    paint: dart.finalFieldType(ui.PaintData)
  }));
  dart.defineExtensionMethods(src__engine.PaintDrawImage, ['toString']);
  src__engine.PaintDrawImageRect = class PaintDrawImageRect extends src__engine.PaintCommand {
    get image() {
      return this[image$1];
    }
    set image(value) {
      super.image = value;
    }
    get src() {
      return this[src$0];
    }
    set src(value) {
      super.src = value;
    }
    get dst() {
      return this[dst$];
    }
    set dst(value) {
      super.dst = value;
    }
    get paint() {
      return this[paint$8];
    }
    set paint(value) {
      super.paint = value;
    }
    apply(canvas) {
      canvas.drawImageRect(this.image, this.src, this.dst, this.paint);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "drawImageRect(" + dart.str(this.image) + ", " + dart.str(this.src) + ", " + dart.str(this.dst) + ", " + dart.str(this.paint) + ")";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      if (dart.test(src__engine.assertionsEnabled)) {
        dart.throw(new core.UnsupportedError.new("drawImageRect not serializable"));
      }
    }
  };
  (src__engine.PaintDrawImageRect.new = function(image, src, dst, paint) {
    this[image$1] = image;
    this[src$0] = src;
    this[dst$] = dst;
    this[paint$8] = paint;
    src__engine.PaintDrawImageRect.__proto__.new.call(this);
  }).prototype = src__engine.PaintDrawImageRect.prototype;
  dart.addTypeTests(src__engine.PaintDrawImageRect);
  const image$1 = Symbol("PaintDrawImageRect.image");
  const src$0 = Symbol("PaintDrawImageRect.src");
  const dst$ = Symbol("PaintDrawImageRect.dst");
  const paint$8 = Symbol("PaintDrawImageRect.paint");
  dart.setMethodSignature(src__engine.PaintDrawImageRect, () => ({
    __proto__: dart.getMethods(src__engine.PaintDrawImageRect.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintDrawImageRect, () => ({
    __proto__: dart.getFields(src__engine.PaintDrawImageRect.__proto__),
    image: dart.finalFieldType(ui.Image),
    src: dart.finalFieldType(ui.Rect),
    dst: dart.finalFieldType(ui.Rect),
    paint: dart.finalFieldType(ui.PaintData)
  }));
  dart.defineExtensionMethods(src__engine.PaintDrawImageRect, ['toString']);
  src__engine.PaintDrawParagraph = class PaintDrawParagraph extends src__engine.PaintCommand {
    get paragraph() {
      return this[paragraph$];
    }
    set paragraph(value) {
      super.paragraph = value;
    }
    get offset() {
      return this[offset$4];
    }
    set offset(value) {
      super.offset = value;
    }
    apply(canvas) {
      if (!dart.test(this.paragraph.webOnlyIsLaidOut)) {
        return;
      }
      canvas.drawParagraph(this.paragraph, this.offset);
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "DrawParagraph(" + dart.str(this.paragraph.webOnlyGetPlainText()) + ", " + dart.str(this.offset) + ")";
      } else {
        return super.toString();
      }
    }
    serializeToCssPaint(serializedCommands) {
      if (dart.test(src__engine.assertionsEnabled)) {
        dart.throw(new core.UnsupportedError.new("drawParagraph not serializable"));
      }
    }
  };
  (src__engine.PaintDrawParagraph.new = function(paragraph, offset) {
    this[paragraph$] = paragraph;
    this[offset$4] = offset;
    src__engine.PaintDrawParagraph.__proto__.new.call(this);
  }).prototype = src__engine.PaintDrawParagraph.prototype;
  dart.addTypeTests(src__engine.PaintDrawParagraph);
  const paragraph$ = Symbol("PaintDrawParagraph.paragraph");
  const offset$4 = Symbol("PaintDrawParagraph.offset");
  dart.setMethodSignature(src__engine.PaintDrawParagraph, () => ({
    __proto__: dart.getMethods(src__engine.PaintDrawParagraph.__proto__),
    apply: dart.fnType(dart.void, [src__engine.EngineCanvas]),
    serializeToCssPaint: dart.fnType(dart.void, [core.List$(core.List)])
  }));
  dart.setFieldSignature(src__engine.PaintDrawParagraph, () => ({
    __proto__: dart.getFields(src__engine.PaintDrawParagraph.__proto__),
    paragraph: dart.finalFieldType(ui.Paragraph),
    offset: dart.finalFieldType(ui.Offset)
  }));
  dart.defineExtensionMethods(src__engine.PaintDrawParagraph, ['toString']);
  src__engine._serializePaintToCssPaint = function(paint) {
    return [(() => {
        let t = paint.blendMode;
        return t == null ? null : t.index;
      })(), (() => {
        let t = paint.style;
        return t == null ? null : t.index;
      })(), paint.strokeWidth, (() => {
        let t = paint.strokeCap;
        return t == null ? null : t.index;
      })(), paint.isAntiAlias, paint.color.toCssString(), (() => {
        let t = paint.shader;
        return t == null ? null : t.webOnlySerializeToCssPaint();
      })(), (() => {
        let t = paint.maskFilter;
        return t == null ? null : t.webOnlySerializeToCssPaint();
      })(), (() => {
        let t = paint.filterQuality;
        return t == null ? null : t.index;
      })(), (() => {
        let t = paint.colorFilter;
        return t == null ? null : t.webOnlySerializeToCssPaint();
      })()];
  };
  src__engine._serializeRectToCssPaint = function(rect) {
    return [rect.left, rect.top, rect.right, rect.bottom];
  };
  src__engine._serializeRRectToCssPaint = function(rrect) {
    return [rrect.left, rrect.top, rrect.right, rrect.bottom, rrect.tlRadiusX, rrect.tlRadiusY, rrect.trRadiusX, rrect.trRadiusY, rrect.brRadiusX, rrect.brRadiusY, rrect.blRadiusX, rrect.blRadiusY];
  };
  src__engine.Subpath = class Subpath extends core.Object {
    get startX() {
      return this[startX$];
    }
    set startX(value) {
      this[startX$] = value;
    }
    get startY() {
      return this[startY$];
    }
    set startY(value) {
      this[startY$] = value;
    }
    get currentX() {
      return this[currentX];
    }
    set currentX(value) {
      this[currentX] = value;
    }
    get currentY() {
      return this[currentY];
    }
    set currentY(value) {
      this[currentY] = value;
    }
    get commands() {
      return this[commands];
    }
    set commands(value) {
      super.commands = value;
    }
    shift(offset) {
      let result = new src__engine.Subpath.new(dart.notNull(this.startX) + dart.notNull(offset.dx), dart.notNull(this.startY) + dart.notNull(offset.dy));
      result.currentX = dart.notNull(this.currentX) + dart.notNull(offset.dx);
      result.currentY = dart.notNull(this.currentY) + dart.notNull(offset.dy);
      for (let command of this.commands) {
        result.commands[$add](command.shifted(offset));
      }
      return result;
    }
    serializeToCssPaint() {
      let serialization = [];
      for (let i = 0; i < dart.notNull(this.commands[$length]); i++) {
        serialization[$add](this.commands[$_get](i).serializeToCssPaint());
      }
      return serialization;
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "Subpath(" + dart.str(this.commands[$join](", ")) + ")";
      } else {
        return super.toString();
      }
    }
  };
  (src__engine.Subpath.new = function(startX, startY) {
    this[currentX] = 0.0;
    this[currentY] = 0.0;
    this[startX$] = startX;
    this[startY$] = startY;
    this[commands] = JSArrayOfPathCommand().of([]);
  }).prototype = src__engine.Subpath.prototype;
  dart.addTypeTests(src__engine.Subpath);
  const startX$ = Symbol("Subpath.startX");
  const startY$ = Symbol("Subpath.startY");
  const currentX = Symbol("Subpath.currentX");
  const currentY = Symbol("Subpath.currentY");
  const commands = Symbol("Subpath.commands");
  dart.setMethodSignature(src__engine.Subpath, () => ({
    __proto__: dart.getMethods(src__engine.Subpath.__proto__),
    shift: dart.fnType(src__engine.Subpath, [ui.Offset]),
    serializeToCssPaint: dart.fnType(core.List, [])
  }));
  dart.setFieldSignature(src__engine.Subpath, () => ({
    __proto__: dart.getFields(src__engine.Subpath.__proto__),
    startX: dart.fieldType(core.double),
    startY: dart.fieldType(core.double),
    currentX: dart.fieldType(core.double),
    currentY: dart.fieldType(core.double),
    commands: dart.finalFieldType(ListOfPathCommand())
  }));
  dart.defineExtensionMethods(src__engine.Subpath, ['toString']);
  src__engine.PathCommandTypes = class PathCommandTypes extends core.Object {};
  (src__engine.PathCommandTypes.new = function() {
  }).prototype = src__engine.PathCommandTypes.prototype;
  dart.addTypeTests(src__engine.PathCommandTypes);
  dart.defineLazy(src__engine.PathCommandTypes, {
    /*src__engine.PathCommandTypes.moveTo*/get moveTo() {
      return 0;
    },
    /*src__engine.PathCommandTypes.lineTo*/get lineTo() {
      return 1;
    },
    /*src__engine.PathCommandTypes.ellipse*/get ellipse() {
      return 2;
    },
    /*src__engine.PathCommandTypes.close*/get close() {
      return 3;
    },
    /*src__engine.PathCommandTypes.quadraticCurveTo*/get quadraticCurveTo() {
      return 4;
    },
    /*src__engine.PathCommandTypes.bezierCurveTo*/get bezierCurveTo() {
      return 5;
    },
    /*src__engine.PathCommandTypes.rect*/get rect() {
      return 6;
    },
    /*src__engine.PathCommandTypes.rRect*/get rRect() {
      return 7;
    }
  });
  src__engine.PathCommand = class PathCommand extends core.Object {
    get type() {
      return this[type$];
    }
    set type(value) {
      super.type = value;
    }
  };
  (src__engine.PathCommand.new = function(type) {
    this[type$] = type;
  }).prototype = src__engine.PathCommand.prototype;
  dart.addTypeTests(src__engine.PathCommand);
  const type$ = Symbol("PathCommand.type");
  dart.setFieldSignature(src__engine.PathCommand, () => ({
    __proto__: dart.getFields(src__engine.PathCommand.__proto__),
    type: dart.finalFieldType(core.int)
  }));
  src__engine.MoveTo = class MoveTo extends src__engine.PathCommand {
    get x() {
      return this[x$1];
    }
    set x(value) {
      super.x = value;
    }
    get y() {
      return this[y$1];
    }
    set y(value) {
      super.y = value;
    }
    shifted(offset) {
      return new src__engine.MoveTo.new(dart.notNull(this.x) + dart.notNull(offset.dx), dart.notNull(this.y) + dart.notNull(offset.dy));
    }
    serializeToCssPaint() {
      return [1, this.x, this.y];
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "MoveTo(" + dart.str(this.x) + ", " + dart.str(this.y) + ")";
      } else {
        return super.toString();
      }
    }
  };
  (src__engine.MoveTo.new = function(x, y) {
    this[x$1] = x;
    this[y$1] = y;
    src__engine.MoveTo.__proto__.new.call(this, src__engine.PathCommandTypes.moveTo);
  }).prototype = src__engine.MoveTo.prototype;
  dart.addTypeTests(src__engine.MoveTo);
  const x$1 = Symbol("MoveTo.x");
  const y$1 = Symbol("MoveTo.y");
  dart.setMethodSignature(src__engine.MoveTo, () => ({
    __proto__: dart.getMethods(src__engine.MoveTo.__proto__),
    shifted: dart.fnType(src__engine.MoveTo, [ui.Offset]),
    serializeToCssPaint: dart.fnType(core.List, [])
  }));
  dart.setFieldSignature(src__engine.MoveTo, () => ({
    __proto__: dart.getFields(src__engine.MoveTo.__proto__),
    x: dart.finalFieldType(core.double),
    y: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(src__engine.MoveTo, ['toString']);
  src__engine.LineTo = class LineTo extends src__engine.PathCommand {
    get x() {
      return this[x$2];
    }
    set x(value) {
      super.x = value;
    }
    get y() {
      return this[y$2];
    }
    set y(value) {
      super.y = value;
    }
    shifted(offset) {
      return new src__engine.LineTo.new(dart.notNull(this.x) + dart.notNull(offset.dx), dart.notNull(this.y) + dart.notNull(offset.dy));
    }
    serializeToCssPaint() {
      return [2, this.x, this.y];
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "LineTo(" + dart.str(this.x) + ", " + dart.str(this.y) + ")";
      } else {
        return super.toString();
      }
    }
  };
  (src__engine.LineTo.new = function(x, y) {
    this[x$2] = x;
    this[y$2] = y;
    src__engine.LineTo.__proto__.new.call(this, src__engine.PathCommandTypes.lineTo);
  }).prototype = src__engine.LineTo.prototype;
  dart.addTypeTests(src__engine.LineTo);
  const x$2 = Symbol("LineTo.x");
  const y$2 = Symbol("LineTo.y");
  dart.setMethodSignature(src__engine.LineTo, () => ({
    __proto__: dart.getMethods(src__engine.LineTo.__proto__),
    shifted: dart.fnType(src__engine.LineTo, [ui.Offset]),
    serializeToCssPaint: dart.fnType(core.List, [])
  }));
  dart.setFieldSignature(src__engine.LineTo, () => ({
    __proto__: dart.getFields(src__engine.LineTo.__proto__),
    x: dart.finalFieldType(core.double),
    y: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(src__engine.LineTo, ['toString']);
  src__engine.Ellipse = class Ellipse extends src__engine.PathCommand {
    get x() {
      return this[x$3];
    }
    set x(value) {
      super.x = value;
    }
    get y() {
      return this[y$3];
    }
    set y(value) {
      super.y = value;
    }
    get radiusX() {
      return this[radiusX$];
    }
    set radiusX(value) {
      super.radiusX = value;
    }
    get radiusY() {
      return this[radiusY$];
    }
    set radiusY(value) {
      super.radiusY = value;
    }
    get rotation() {
      return this[rotation$];
    }
    set rotation(value) {
      super.rotation = value;
    }
    get startAngle() {
      return this[startAngle$];
    }
    set startAngle(value) {
      super.startAngle = value;
    }
    get endAngle() {
      return this[endAngle$];
    }
    set endAngle(value) {
      super.endAngle = value;
    }
    get anticlockwise() {
      return this[anticlockwise$];
    }
    set anticlockwise(value) {
      super.anticlockwise = value;
    }
    shifted(offset) {
      return new src__engine.Ellipse.new(dart.notNull(this.x) + dart.notNull(offset.dx), dart.notNull(this.y) + dart.notNull(offset.dy), this.radiusX, this.radiusY, this.rotation, this.startAngle, this.endAngle, this.anticlockwise);
    }
    serializeToCssPaint() {
      return [3, this.x, this.y, this.radiusX, this.radiusY, this.rotation, this.startAngle, this.endAngle, this.anticlockwise];
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "Ellipse(" + dart.str(this.x) + ", " + dart.str(this.y) + ", " + dart.str(this.radiusX) + ", " + dart.str(this.radiusY) + ")";
      } else {
        return super.toString();
      }
    }
  };
  (src__engine.Ellipse.new = function(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise) {
    this[x$3] = x;
    this[y$3] = y;
    this[radiusX$] = radiusX;
    this[radiusY$] = radiusY;
    this[rotation$] = rotation;
    this[startAngle$] = startAngle;
    this[endAngle$] = endAngle;
    this[anticlockwise$] = anticlockwise;
    src__engine.Ellipse.__proto__.new.call(this, src__engine.PathCommandTypes.ellipse);
  }).prototype = src__engine.Ellipse.prototype;
  dart.addTypeTests(src__engine.Ellipse);
  const x$3 = Symbol("Ellipse.x");
  const y$3 = Symbol("Ellipse.y");
  const radiusX$ = Symbol("Ellipse.radiusX");
  const radiusY$ = Symbol("Ellipse.radiusY");
  const rotation$ = Symbol("Ellipse.rotation");
  const startAngle$ = Symbol("Ellipse.startAngle");
  const endAngle$ = Symbol("Ellipse.endAngle");
  const anticlockwise$ = Symbol("Ellipse.anticlockwise");
  dart.setMethodSignature(src__engine.Ellipse, () => ({
    __proto__: dart.getMethods(src__engine.Ellipse.__proto__),
    shifted: dart.fnType(src__engine.Ellipse, [ui.Offset]),
    serializeToCssPaint: dart.fnType(core.List, [])
  }));
  dart.setFieldSignature(src__engine.Ellipse, () => ({
    __proto__: dart.getFields(src__engine.Ellipse.__proto__),
    x: dart.finalFieldType(core.double),
    y: dart.finalFieldType(core.double),
    radiusX: dart.finalFieldType(core.double),
    radiusY: dart.finalFieldType(core.double),
    rotation: dart.finalFieldType(core.double),
    startAngle: dart.finalFieldType(core.double),
    endAngle: dart.finalFieldType(core.double),
    anticlockwise: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(src__engine.Ellipse, ['toString']);
  src__engine.QuadraticCurveTo = class QuadraticCurveTo extends src__engine.PathCommand {
    get x1() {
      return this[x1$];
    }
    set x1(value) {
      super.x1 = value;
    }
    get y1() {
      return this[y1$];
    }
    set y1(value) {
      super.y1 = value;
    }
    get x2() {
      return this[x2$];
    }
    set x2(value) {
      super.x2 = value;
    }
    get y2() {
      return this[y2$];
    }
    set y2(value) {
      super.y2 = value;
    }
    shifted(offset) {
      return new src__engine.QuadraticCurveTo.new(dart.notNull(this.x1) + dart.notNull(offset.dx), dart.notNull(this.y1) + dart.notNull(offset.dy), dart.notNull(this.x2) + dart.notNull(offset.dx), dart.notNull(this.y2) + dart.notNull(offset.dy));
    }
    serializeToCssPaint() {
      return [4, this.x1, this.y1, this.x2, this.y2];
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "QuadraticCurveTo(" + dart.str(this.x1) + ", " + dart.str(this.y1) + ", " + dart.str(this.x2) + ", " + dart.str(this.y2) + ")";
      } else {
        return super.toString();
      }
    }
  };
  (src__engine.QuadraticCurveTo.new = function(x1, y1, x2, y2) {
    this[x1$] = x1;
    this[y1$] = y1;
    this[x2$] = x2;
    this[y2$] = y2;
    src__engine.QuadraticCurveTo.__proto__.new.call(this, src__engine.PathCommandTypes.quadraticCurveTo);
  }).prototype = src__engine.QuadraticCurveTo.prototype;
  dart.addTypeTests(src__engine.QuadraticCurveTo);
  const x1$ = Symbol("QuadraticCurveTo.x1");
  const y1$ = Symbol("QuadraticCurveTo.y1");
  const x2$ = Symbol("QuadraticCurveTo.x2");
  const y2$ = Symbol("QuadraticCurveTo.y2");
  dart.setMethodSignature(src__engine.QuadraticCurveTo, () => ({
    __proto__: dart.getMethods(src__engine.QuadraticCurveTo.__proto__),
    shifted: dart.fnType(src__engine.QuadraticCurveTo, [ui.Offset]),
    serializeToCssPaint: dart.fnType(core.List, [])
  }));
  dart.setFieldSignature(src__engine.QuadraticCurveTo, () => ({
    __proto__: dart.getFields(src__engine.QuadraticCurveTo.__proto__),
    x1: dart.finalFieldType(core.double),
    y1: dart.finalFieldType(core.double),
    x2: dart.finalFieldType(core.double),
    y2: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(src__engine.QuadraticCurveTo, ['toString']);
  src__engine.BezierCurveTo = class BezierCurveTo extends src__engine.PathCommand {
    get x1() {
      return this[x1$0];
    }
    set x1(value) {
      super.x1 = value;
    }
    get y1() {
      return this[y1$0];
    }
    set y1(value) {
      super.y1 = value;
    }
    get x2() {
      return this[x2$0];
    }
    set x2(value) {
      super.x2 = value;
    }
    get y2() {
      return this[y2$0];
    }
    set y2(value) {
      super.y2 = value;
    }
    get x3() {
      return this[x3$];
    }
    set x3(value) {
      super.x3 = value;
    }
    get y3() {
      return this[y3$];
    }
    set y3(value) {
      super.y3 = value;
    }
    shifted(offset) {
      return new src__engine.BezierCurveTo.new(dart.notNull(this.x1) + dart.notNull(offset.dx), dart.notNull(this.y1) + dart.notNull(offset.dy), dart.notNull(this.x2) + dart.notNull(offset.dx), dart.notNull(this.y2) + dart.notNull(offset.dy), dart.notNull(this.x3) + dart.notNull(offset.dx), dart.notNull(this.y3) + dart.notNull(offset.dy));
    }
    serializeToCssPaint() {
      return [5, this.x1, this.y1, this.x2, this.y2, this.x3, this.y3];
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "BezierCurveTo(" + dart.str(this.x1) + ", " + dart.str(this.y1) + ", " + dart.str(this.x2) + ", " + dart.str(this.y2) + ", " + dart.str(this.x3) + ", " + dart.str(this.y3) + ")";
      } else {
        return super.toString();
      }
    }
  };
  (src__engine.BezierCurveTo.new = function(x1, y1, x2, y2, x3, y3) {
    this[x1$0] = x1;
    this[y1$0] = y1;
    this[x2$0] = x2;
    this[y2$0] = y2;
    this[x3$] = x3;
    this[y3$] = y3;
    src__engine.BezierCurveTo.__proto__.new.call(this, src__engine.PathCommandTypes.bezierCurveTo);
  }).prototype = src__engine.BezierCurveTo.prototype;
  dart.addTypeTests(src__engine.BezierCurveTo);
  const x1$0 = Symbol("BezierCurveTo.x1");
  const y1$0 = Symbol("BezierCurveTo.y1");
  const x2$0 = Symbol("BezierCurveTo.x2");
  const y2$0 = Symbol("BezierCurveTo.y2");
  const x3$ = Symbol("BezierCurveTo.x3");
  const y3$ = Symbol("BezierCurveTo.y3");
  dart.setMethodSignature(src__engine.BezierCurveTo, () => ({
    __proto__: dart.getMethods(src__engine.BezierCurveTo.__proto__),
    shifted: dart.fnType(src__engine.BezierCurveTo, [ui.Offset]),
    serializeToCssPaint: dart.fnType(core.List, [])
  }));
  dart.setFieldSignature(src__engine.BezierCurveTo, () => ({
    __proto__: dart.getFields(src__engine.BezierCurveTo.__proto__),
    x1: dart.finalFieldType(core.double),
    y1: dart.finalFieldType(core.double),
    x2: dart.finalFieldType(core.double),
    y2: dart.finalFieldType(core.double),
    x3: dart.finalFieldType(core.double),
    y3: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(src__engine.BezierCurveTo, ['toString']);
  src__engine.RectCommand = class RectCommand extends src__engine.PathCommand {
    get x() {
      return this[x$4];
    }
    set x(value) {
      super.x = value;
    }
    get y() {
      return this[y$4];
    }
    set y(value) {
      super.y = value;
    }
    get width() {
      return this[width$1];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$0];
    }
    set height(value) {
      super.height = value;
    }
    shifted(offset) {
      return new src__engine.RectCommand.new(dart.notNull(this.x) + dart.notNull(offset.dx), dart.notNull(this.y) + dart.notNull(offset.dy), this.width, this.height);
    }
    serializeToCssPaint() {
      return [6, this.x, this.y, this.width, this.height];
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "Rect(" + dart.str(this.x) + ", " + dart.str(this.y) + ", " + dart.str(this.width) + ", " + dart.str(this.height) + ")";
      } else {
        return super.toString();
      }
    }
  };
  (src__engine.RectCommand.new = function(x, y, width, height) {
    this[x$4] = x;
    this[y$4] = y;
    this[width$1] = width;
    this[height$0] = height;
    src__engine.RectCommand.__proto__.new.call(this, src__engine.PathCommandTypes.rect);
  }).prototype = src__engine.RectCommand.prototype;
  dart.addTypeTests(src__engine.RectCommand);
  const x$4 = Symbol("RectCommand.x");
  const y$4 = Symbol("RectCommand.y");
  const width$1 = Symbol("RectCommand.width");
  const height$0 = Symbol("RectCommand.height");
  dart.setMethodSignature(src__engine.RectCommand, () => ({
    __proto__: dart.getMethods(src__engine.RectCommand.__proto__),
    shifted: dart.fnType(src__engine.RectCommand, [ui.Offset]),
    serializeToCssPaint: dart.fnType(core.List, [])
  }));
  dart.setFieldSignature(src__engine.RectCommand, () => ({
    __proto__: dart.getFields(src__engine.RectCommand.__proto__),
    x: dart.finalFieldType(core.double),
    y: dart.finalFieldType(core.double),
    width: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(src__engine.RectCommand, ['toString']);
  src__engine.RRectCommand = class RRectCommand extends src__engine.PathCommand {
    get rrect() {
      return this[rrect$2];
    }
    set rrect(value) {
      super.rrect = value;
    }
    shifted(offset) {
      return new src__engine.RRectCommand.new(this.rrect.shift(offset));
    }
    serializeToCssPaint() {
      return [7, src__engine._serializeRRectToCssPaint(this.rrect)];
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return dart.str(this.rrect);
      } else {
        return super.toString();
      }
    }
  };
  (src__engine.RRectCommand.new = function(rrect) {
    this[rrect$2] = rrect;
    src__engine.RRectCommand.__proto__.new.call(this, src__engine.PathCommandTypes.rRect);
  }).prototype = src__engine.RRectCommand.prototype;
  dart.addTypeTests(src__engine.RRectCommand);
  const rrect$2 = Symbol("RRectCommand.rrect");
  dart.setMethodSignature(src__engine.RRectCommand, () => ({
    __proto__: dart.getMethods(src__engine.RRectCommand.__proto__),
    shifted: dart.fnType(src__engine.RRectCommand, [ui.Offset]),
    serializeToCssPaint: dart.fnType(core.List, [])
  }));
  dart.setFieldSignature(src__engine.RRectCommand, () => ({
    __proto__: dart.getFields(src__engine.RRectCommand.__proto__),
    rrect: dart.finalFieldType(ui.RRect)
  }));
  dart.defineExtensionMethods(src__engine.RRectCommand, ['toString']);
  src__engine.CloseCommand = class CloseCommand extends src__engine.PathCommand {
    shifted(offset) {
      return this;
    }
    serializeToCssPaint() {
      return [8];
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return "Close()";
      } else {
        return super.toString();
      }
    }
  };
  (src__engine.CloseCommand.new = function() {
    src__engine.CloseCommand.__proto__.new.call(this, src__engine.PathCommandTypes.close);
  }).prototype = src__engine.CloseCommand.prototype;
  dart.addTypeTests(src__engine.CloseCommand);
  dart.setMethodSignature(src__engine.CloseCommand, () => ({
    __proto__: dart.getMethods(src__engine.CloseCommand.__proto__),
    shifted: dart.fnType(src__engine.CloseCommand, [ui.Offset]),
    serializeToCssPaint: dart.fnType(core.List, [])
  }));
  dart.defineExtensionMethods(src__engine.CloseCommand, ['toString']);
  const _didPaintInsideClipArea = dart.privateName(src__engine, "_didPaintInsideClipArea");
  const _left = dart.privateName(src__engine, "_left");
  const _top = dart.privateName(src__engine, "_top");
  const _right = dart.privateName(src__engine, "_right");
  const _bottom = dart.privateName(src__engine, "_bottom");
  const _transforms = dart.privateName(src__engine, "_transforms");
  const _currentMatrixIsIdentity = dart.privateName(src__engine, "_currentMatrixIsIdentity");
  const _currentMatrix = dart.privateName(src__engine, "_currentMatrix");
  const _clipRectInitialized = dart.privateName(src__engine, "_clipRectInitialized");
  const _currentClipLeft = dart.privateName(src__engine, "_currentClipLeft");
  const _currentClipTop = dart.privateName(src__engine, "_currentClipTop");
  const _currentClipRight = dart.privateName(src__engine, "_currentClipRight");
  const _currentClipBottom = dart.privateName(src__engine, "_currentClipBottom");
  src__engine._PaintBounds = class _PaintBounds extends core.Object {
    translate(dx, dy) {
      if (dx !== 0.0 || dy !== 0.0) this[_currentMatrixIsIdentity] = false;
      this[_currentMatrix].translate(dx, dy);
    }
    scale(sx, sy) {
      if (sx !== 1.0 || sy !== 1.0) this[_currentMatrixIsIdentity] = false;
      this[_currentMatrix].scale(sx, sy);
    }
    rotateZ(radians) {
      if (radians !== 0.0) this[_currentMatrixIsIdentity] = false;
      this[_currentMatrix].rotateZ(radians);
    }
    transform(matrix4) {
      let m4 = new src__engine.Matrix4.fromFloat64List(matrix4);
      this[_currentMatrix].multiply(m4);
      this[_currentMatrixIsIdentity] = this[_currentMatrix].isIdentity();
    }
    skew(sx, sy) {
      this[_currentMatrixIsIdentity] = false;
      let skewMatrix = src__engine.Matrix4.identity();
      let storage = skewMatrix.storage;
      storage[$_set](1, sy);
      storage[$_set](4, sx);
      this[_currentMatrix].multiply(skewMatrix);
    }
    clipRect(rect) {
      if (!dart.test(this[_currentMatrixIsIdentity])) {
        let leftTop = this[_currentMatrix].transform3(src__engine.Vector3.new(rect.left, rect.top, 0.0));
        let rightTop = this[_currentMatrix].transform3(src__engine.Vector3.new(rect.right, rect.top, 0.0));
        let leftBottom = this[_currentMatrix].transform3(src__engine.Vector3.new(rect.left, rect.bottom, 0.0));
        let rightBottom = this[_currentMatrix].transform3(src__engine.Vector3.new(rect.right, rect.bottom, 0.0));
        rect = new ui.Rect.fromLTRB(math.min(core.double, math.min(core.double, math.min(core.double, leftTop.x, rightTop.x), leftBottom.x), rightBottom.x), math.min(core.double, math.min(core.double, math.min(core.double, leftTop.y, rightTop.y), leftBottom.y), rightBottom.y), math.max(core.double, math.max(core.double, math.max(core.double, leftTop.x, rightTop.x), leftBottom.x), rightBottom.x), math.max(core.double, math.max(core.double, math.max(core.double, leftTop.y, rightTop.y), leftBottom.y), rightBottom.y));
      }
      if (!dart.test(this[_clipRectInitialized])) {
        this[_currentClipLeft] = rect.left;
        this[_currentClipTop] = rect.top;
        this[_currentClipRight] = rect.right;
        this[_currentClipBottom] = rect.bottom;
        this[_clipRectInitialized] = true;
      } else {
        if (dart.notNull(rect.left) > dart.notNull(this[_currentClipLeft])) this[_currentClipLeft] = rect.left;
        if (dart.notNull(rect.top) > dart.notNull(this[_currentClipTop])) this[_currentClipTop] = rect.top;
        if (dart.notNull(rect.right) < dart.notNull(this[_currentClipRight])) {
          this[_currentClipRight] = rect.right;
        }
        if (dart.notNull(rect.bottom) < dart.notNull(this[_currentClipBottom])) this[_currentClipBottom] = rect.bottom;
      }
    }
    grow(r) {
      this.growLTRB(r.left, r.top, r.right, r.bottom);
    }
    growLTRB(left, top, right, bottom) {
      if (left == right || top == bottom) return;
      let transformedPointLeft = left;
      let transformedPointTop = top;
      let transformedPointRight = right;
      let transformedPointBottom = bottom;
      if (!dart.test(this[_currentMatrixIsIdentity])) {
        let transformedRect = src__engine.localClipToGlobalClip({localLeft: left, localTop: top, localRight: right, localBottom: bottom, transform: this[_currentMatrix]});
        transformedPointLeft = transformedRect.left;
        transformedPointTop = transformedRect.top;
        transformedPointRight = transformedRect.right;
        transformedPointBottom = transformedRect.bottom;
      }
      if (dart.test(this[_clipRectInitialized])) {
        if (dart.notNull(transformedPointLeft) > dart.notNull(this[_currentClipRight])) return;
        if (dart.notNull(transformedPointRight) < dart.notNull(this[_currentClipLeft])) return;
        if (dart.notNull(transformedPointTop) > dart.notNull(this[_currentClipBottom])) return;
        if (dart.notNull(transformedPointBottom) < dart.notNull(this[_currentClipTop])) return;
        if (dart.notNull(transformedPointLeft) < dart.notNull(this[_currentClipLeft])) {
          transformedPointLeft = this[_currentClipLeft];
        }
        if (dart.notNull(transformedPointRight) > dart.notNull(this[_currentClipRight])) {
          transformedPointRight = this[_currentClipRight];
        }
        if (dart.notNull(transformedPointTop) < dart.notNull(this[_currentClipTop])) {
          transformedPointTop = this[_currentClipTop];
        }
        if (dart.notNull(transformedPointBottom) > dart.notNull(this[_currentClipBottom])) {
          transformedPointBottom = this[_currentClipBottom];
        }
      }
      if (dart.test(this[_didPaintInsideClipArea])) {
        this[_left] = math.min(core.double, math.min(core.double, this[_left], transformedPointLeft), transformedPointRight);
        this[_right] = math.max(core.double, math.max(core.double, this[_right], transformedPointLeft), transformedPointRight);
        this[_top] = math.min(core.double, math.min(core.double, this[_top], transformedPointTop), transformedPointBottom);
        this[_bottom] = math.max(core.double, math.max(core.double, this[_bottom], transformedPointTop), transformedPointBottom);
      } else {
        this[_left] = math.min(core.double, transformedPointLeft, transformedPointRight);
        this[_right] = math.max(core.double, transformedPointLeft, transformedPointRight);
        this[_top] = math.min(core.double, transformedPointTop, transformedPointBottom);
        this[_bottom] = math.max(core.double, transformedPointTop, transformedPointBottom);
      }
      this[_didPaintInsideClipArea] = true;
    }
    saveTransformsAndClip() {
      let t = this[_clipStack];
      t == null ? this[_clipStack] = JSArrayOfRect().of([]) : t;
      let t$ = this[_transforms];
      t$ == null ? this[_transforms] = JSArrayOfMatrix4().of([]) : t$;
      this[_transforms][$add]((() => {
        let t = this[_currentMatrix];
        return t == null ? null : t.clone();
      })());
      this[_clipStack][$add](dart.test(this[_clipRectInitialized]) ? new ui.Rect.fromLTRB(this[_currentClipLeft], this[_currentClipTop], this[_currentClipRight], this[_currentClipBottom]) : null);
    }
    restoreTransformsAndClip() {
      this[_currentMatrix] = this[_transforms][$removeLast]();
      let clipRect = this[_clipStack][$removeLast]();
      if (clipRect != null) {
        this[_currentClipLeft] = clipRect.left;
        this[_currentClipTop] = clipRect.top;
        this[_currentClipRight] = clipRect.right;
        this[_currentClipBottom] = clipRect.bottom;
        this[_clipRectInitialized] = true;
      } else if (dart.test(this[_clipRectInitialized])) {
        this[_clipRectInitialized] = false;
      }
    }
    computeBounds() {
      if (!dart.test(this[_didPaintInsideClipArea])) return ui.Rect.zero;
      let maxLeft = this.maxPaintBounds.left[$isNaN] ? core.double.negativeInfinity : this.maxPaintBounds.left;
      let maxRight = this.maxPaintBounds.right[$isNaN] ? core.double.infinity : this.maxPaintBounds.right;
      let maxTop = this.maxPaintBounds.top[$isNaN] ? core.double.negativeInfinity : this.maxPaintBounds.top;
      let maxBottom = this.maxPaintBounds.bottom[$isNaN] ? core.double.infinity : this.maxPaintBounds.bottom;
      let left = math.min(core.double, this[_left], this[_right]);
      let right = math.max(core.double, this[_left], this[_right]);
      let top = math.min(core.double, this[_top], this[_bottom]);
      let bottom = math.max(core.double, this[_top], this[_bottom]);
      if (right < dart.notNull(maxLeft) || bottom < dart.notNull(maxTop)) {
        return ui.Rect.zero;
      }
      return new ui.Rect.fromLTRB(math.max(core.double, left, maxLeft), math.max(core.double, top, maxTop), math.min(core.double, right, maxRight), math.min(core.double, bottom, maxBottom));
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        let bounds = this.computeBounds();
        return "_PaintBounds(" + dart.str(bounds) + " of size " + dart.str(bounds.size) + ")";
      } else {
        return super.toString();
      }
    }
  };
  (src__engine._PaintBounds.new = function(maxPaintBounds) {
    this[_didPaintInsideClipArea] = false;
    this[_left] = null;
    this[_top] = null;
    this[_right] = null;
    this[_bottom] = null;
    this[_transforms] = null;
    this[_clipStack] = null;
    this[_currentMatrixIsIdentity] = true;
    this[_currentMatrix] = src__engine.Matrix4.identity();
    this[_clipRectInitialized] = false;
    this[_currentClipLeft] = 0.0;
    this[_currentClipTop] = 0.0;
    this[_currentClipRight] = 0.0;
    this[_currentClipBottom] = 0.0;
    this.maxPaintBounds = maxPaintBounds;
  }).prototype = src__engine._PaintBounds.prototype;
  dart.addTypeTests(src__engine._PaintBounds);
  dart.setMethodSignature(src__engine._PaintBounds, () => ({
    __proto__: dart.getMethods(src__engine._PaintBounds.__proto__),
    translate: dart.fnType(dart.void, [core.double, core.double]),
    scale: dart.fnType(dart.void, [core.double, core.double]),
    rotateZ: dart.fnType(dart.void, [core.double]),
    transform: dart.fnType(dart.void, [typed_data.Float64List]),
    skew: dart.fnType(dart.void, [core.double, core.double]),
    clipRect: dart.fnType(dart.void, [ui.Rect]),
    grow: dart.fnType(dart.void, [ui.Rect]),
    growLTRB: dart.fnType(dart.void, [core.double, core.double, core.double, core.double]),
    saveTransformsAndClip: dart.fnType(dart.void, []),
    restoreTransformsAndClip: dart.fnType(dart.void, []),
    computeBounds: dart.fnType(ui.Rect, [])
  }));
  dart.setFieldSignature(src__engine._PaintBounds, () => ({
    __proto__: dart.getFields(src__engine._PaintBounds.__proto__),
    maxPaintBounds: dart.finalFieldType(ui.Rect),
    [_didPaintInsideClipArea]: dart.fieldType(core.bool),
    [_left]: dart.fieldType(core.double),
    [_top]: dart.fieldType(core.double),
    [_right]: dart.fieldType(core.double),
    [_bottom]: dart.fieldType(core.double),
    [_transforms]: dart.fieldType(ListOfMatrix4()),
    [_clipStack]: dart.fieldType(ListOfRect()),
    [_currentMatrixIsIdentity]: dart.fieldType(core.bool),
    [_currentMatrix]: dart.fieldType(src__engine.Matrix4),
    [_clipRectInitialized]: dart.fieldType(core.bool),
    [_currentClipLeft]: dart.fieldType(core.double),
    [_currentClipTop]: dart.fieldType(core.double),
    [_currentClipRight]: dart.fieldType(core.double),
    [_currentClipBottom]: dart.fieldType(core.double)
  }));
  dart.defineExtensionMethods(src__engine._PaintBounds, ['toString']);
  src__engine._CheckableKind = class _CheckableKind extends core.Object {
    toString() {
      return {
        0: "_CheckableKind.checkbox",
        1: "_CheckableKind.radio"
      }[this.index];
    }
  };
  (src__engine._CheckableKind.new = function(x) {
    this.index = x;
  }).prototype = src__engine._CheckableKind.prototype;
  dart.addTypeTests(src__engine._CheckableKind);
  dart.setFieldSignature(src__engine._CheckableKind, () => ({
    __proto__: dart.getFields(src__engine._CheckableKind.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(src__engine._CheckableKind, ['toString']);
  src__engine._CheckableKind.checkbox = dart.const(new src__engine._CheckableKind.new(0));
  src__engine._CheckableKind.radio = dart.const(new src__engine._CheckableKind.new(1));
  src__engine._CheckableKind.values = dart.constList([src__engine._CheckableKind.checkbox, src__engine._CheckableKind.radio], src__engine._CheckableKind);
  const _kind = dart.privateName(src__engine, "_kind");
  src__engine.RoleManager = class RoleManager extends core.Object {
    get role() {
      return this[role$];
    }
    set role(value) {
      super.role = value;
    }
    get semanticsObject() {
      return this[semanticsObject$];
    }
    set semanticsObject(value) {
      super.semanticsObject = value;
    }
  };
  (src__engine.RoleManager.new = function(role, semanticsObject) {
    this[role$] = role;
    this[semanticsObject$] = semanticsObject;
    if (!(semanticsObject != null)) dart.assertFailed();
  }).prototype = src__engine.RoleManager.prototype;
  dart.addTypeTests(src__engine.RoleManager);
  const role$ = Symbol("RoleManager.role");
  const semanticsObject$ = Symbol("RoleManager.semanticsObject");
  dart.setFieldSignature(src__engine.RoleManager, () => ({
    __proto__: dart.getFields(src__engine.RoleManager.__proto__),
    role: dart.finalFieldType(src__engine.Role),
    semanticsObject: dart.finalFieldType(src__engine.SemanticsObject)
  }));
  src__engine.Checkable = class Checkable extends src__engine.RoleManager {
    update() {
      if (dart.test(this.semanticsObject.isFlagsDirty)) {
        switch (this[_kind]) {
          case src__engine._CheckableKind.checkbox:
          {
            this.semanticsObject.setAriaRole("checkbox", true);
            break;
          }
          case src__engine._CheckableKind.radio:
          {
            this.semanticsObject.setAriaRole("radio", true);
            break;
          }
        }
        this.semanticsObject.element[$setAttribute]("aria-checked", dart.test(this.semanticsObject.hasFlag(ui.SemanticsFlag.isChecked)) ? "true" : "false");
      }
    }
    dispose() {
      switch (this[_kind]) {
        case src__engine._CheckableKind.checkbox:
        {
          this.semanticsObject.setAriaRole("checkbox", false);
          break;
        }
        case src__engine._CheckableKind.radio:
        {
          this.semanticsObject.setAriaRole("radio", false);
          break;
        }
      }
    }
  };
  (src__engine.Checkable.new = function(semanticsObject) {
    this[_kind] = null;
    src__engine.Checkable.__proto__.new.call(this, src__engine.Role.checkable, semanticsObject);
    if (dart.test(semanticsObject.hasFlag(ui.SemanticsFlag.isInMutuallyExclusiveGroup))) {
      this[_kind] = src__engine._CheckableKind.radio;
    } else {
      this[_kind] = src__engine._CheckableKind.checkbox;
    }
  }).prototype = src__engine.Checkable.prototype;
  dart.addTypeTests(src__engine.Checkable);
  dart.setMethodSignature(src__engine.Checkable, () => ({
    __proto__: dart.getMethods(src__engine.Checkable.__proto__),
    update: dart.fnType(dart.void, []),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setFieldSignature(src__engine.Checkable, () => ({
    __proto__: dart.getFields(src__engine.Checkable.__proto__),
    [_kind]: dart.fieldType(src__engine._CheckableKind)
  }));
  const _element = dart.privateName(src__engine, "_element");
  const _currentSurrogateValue = dart.privateName(src__engine, "_currentSurrogateValue");
  const _gestureModeListener = dart.privateName(src__engine, "_gestureModeListener");
  const _pendingResync = dart.privateName(src__engine, "_pendingResync");
  const _enableBrowserGestureHandling = dart.privateName(src__engine, "_enableBrowserGestureHandling");
  const _updateInputValues = dart.privateName(src__engine, "_updateInputValues");
  const _disableBrowserGestureHandling = dart.privateName(src__engine, "_disableBrowserGestureHandling");
  src__engine.Incrementable = class Incrementable extends src__engine.RoleManager {
    update() {
      switch (this.semanticsObject.owner.gestureMode) {
        case src__engine.GestureMode.browserGestures:
        {
          this[_enableBrowserGestureHandling]();
          this[_updateInputValues]();
          break;
        }
        case src__engine.GestureMode.pointerEvents:
        {
          this[_disableBrowserGestureHandling]();
          break;
        }
      }
    }
    [_enableBrowserGestureHandling]() {
      if (!(this.semanticsObject.owner.gestureMode === src__engine.GestureMode.browserGestures)) dart.assertFailed();
      if (!dart.test(this[_element].disabled)) {
        return;
      }
      this[_element].disabled = false;
    }
    [_updateInputValues]() {
      if (!(this.semanticsObject.owner.gestureMode === src__engine.GestureMode.browserGestures)) dart.assertFailed();
      let updateNeeded = dart.test(this[_pendingResync]) || dart.test(this.semanticsObject.isValueDirty) || dart.test(this.semanticsObject.isIncreasedValueDirty) || dart.test(this.semanticsObject.isDecreasedValueDirty);
      if (!updateNeeded) {
        return;
      }
      this[_pendingResync] = false;
      let surrogateTextValue = dart.str(this[_currentSurrogateValue]);
      this[_element].value = surrogateTextValue;
      this[_element][$setAttribute]("aria-valuenow", surrogateTextValue);
      this[_element][$setAttribute]("aria-valuetext", this.semanticsObject.value);
      let canIncrease = this.semanticsObject.increasedValue != null;
      let surrogateMaxTextValue = canIncrease ? dart.str(dart.notNull(this[_currentSurrogateValue]) + 1) : surrogateTextValue;
      this[_element].max = surrogateMaxTextValue;
      this[_element][$setAttribute]("aria-valuemax", surrogateMaxTextValue);
      let canDecrease = this.semanticsObject.decreasedValue != null;
      let surrogateMinTextValue = canDecrease ? dart.str(dart.notNull(this[_currentSurrogateValue]) - 1) : surrogateTextValue;
      this[_element].min = surrogateMinTextValue;
      this[_element][$setAttribute]("aria-valuemin", surrogateMinTextValue);
    }
    [_disableBrowserGestureHandling]() {
      if (dart.test(this[_element].disabled)) {
        return;
      }
      this[_element].disabled = true;
    }
    dispose() {
      if (!(this[_gestureModeListener] != null)) dart.assertFailed();
      this.semanticsObject.owner.removeGestureModeListener(this[_gestureModeListener]);
      this[_gestureModeListener] = null;
      this[_disableBrowserGestureHandling]();
      this[_element][$remove]();
    }
  };
  (src__engine.Incrementable.new = function(semanticsObject) {
    this[_element] = html.InputElement.new();
    this[_currentSurrogateValue] = 1;
    this[_gestureModeListener] = null;
    this[_pendingResync] = false;
    src__engine.Incrementable.__proto__.new.call(this, src__engine.Role.incrementable, semanticsObject);
    semanticsObject.element[$append](this[_element]);
    this[_element].type = "range";
    this[_element][$setAttribute]("role", "slider");
    this[_element][$addEventListener]("change", dart.fn(_ => {
      if (dart.test(this[_element].disabled)) {
        return;
      }
      this[_pendingResync] = true;
      let newInputValue = core.int.parse(this[_element].value);
      if (dart.notNull(newInputValue) > dart.notNull(this[_currentSurrogateValue])) {
        this[_currentSurrogateValue] = dart.notNull(this[_currentSurrogateValue]) + 1;
        ui.window.onSemanticsAction(semanticsObject.id, ui.SemanticsAction.increase, null);
      } else if (dart.notNull(newInputValue) < dart.notNull(this[_currentSurrogateValue])) {
        this[_currentSurrogateValue] = dart.notNull(this[_currentSurrogateValue]) - 1;
        ui.window.onSemanticsAction(semanticsObject.id, ui.SemanticsAction.decrease, null);
      }
    }, EventToNull()));
    this[_gestureModeListener] = dart.fn(mode => {
      this.update();
    }, GestureModeToNull());
    semanticsObject.owner.addGestureModeListener(this[_gestureModeListener]);
  }).prototype = src__engine.Incrementable.prototype;
  dart.addTypeTests(src__engine.Incrementable);
  dart.setMethodSignature(src__engine.Incrementable, () => ({
    __proto__: dart.getMethods(src__engine.Incrementable.__proto__),
    update: dart.fnType(dart.void, []),
    [_enableBrowserGestureHandling]: dart.fnType(dart.void, []),
    [_updateInputValues]: dart.fnType(dart.void, []),
    [_disableBrowserGestureHandling]: dart.fnType(dart.void, []),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setFieldSignature(src__engine.Incrementable, () => ({
    __proto__: dart.getFields(src__engine.Incrementable.__proto__),
    [_element]: dart.finalFieldType(html.InputElement),
    [_currentSurrogateValue]: dart.fieldType(core.int),
    [_gestureModeListener]: dart.fieldType(GestureModeTovoid()),
    [_pendingResync]: dart.fieldType(core.bool)
  }));
  const _auxiliaryValueElement = dart.privateName(src__engine, "_auxiliaryValueElement");
  const _cleanUpDom = dart.privateName(src__engine, "_cleanUpDom");
  src__engine.LabelAndValue = class LabelAndValue extends src__engine.RoleManager {
    update() {
      let hasValue = this.semanticsObject.hasValue;
      let hasLabel = this.semanticsObject.hasLabel;
      let shouldDisplayValue = dart.test(hasValue) && !dart.test(this.semanticsObject.isIncrementable) && !dart.test(this.semanticsObject.isTextField);
      if (!dart.test(hasLabel) && !shouldDisplayValue) {
        this[_cleanUpDom]();
        return;
      }
      let combinedValue = new core.StringBuffer.new();
      if (dart.test(hasLabel)) {
        combinedValue.write(this.semanticsObject.label);
        if (shouldDisplayValue) {
          combinedValue.write(" ");
        }
      }
      if (shouldDisplayValue) {
        combinedValue.write(this.semanticsObject.value);
      }
      this.semanticsObject.element[$setAttribute]("aria-label", combinedValue.toString());
      if (this[_auxiliaryValueElement] == null) {
        this[_auxiliaryValueElement] = html.Element.tag("flt-semantics-value");
        if (dart.test(this.semanticsObject.hasChildren)) {
          this[_auxiliaryValueElement].style[$position] = "absolute";
          this[_auxiliaryValueElement].style[$top] = "0";
          this[_auxiliaryValueElement].style[$left] = "0";
          this[_auxiliaryValueElement].style[$width] = dart.str(this.semanticsObject.rect.width) + "px";
          this[_auxiliaryValueElement].style[$height] = dart.str(this.semanticsObject.rect.height) + "px";
        }
        this[_auxiliaryValueElement].style[$fontSize] = "6px";
        this.semanticsObject.element[$append](this[_auxiliaryValueElement]);
      }
      this[_auxiliaryValueElement][$text] = combinedValue.toString();
    }
    [_cleanUpDom]() {
      if (this[_auxiliaryValueElement] != null) {
        this[_auxiliaryValueElement][$remove]();
        this[_auxiliaryValueElement] = null;
      }
      this.semanticsObject.element[$attributes][$remove]("aria-label");
    }
    dispose() {
      this[_cleanUpDom]();
    }
  };
  (src__engine.LabelAndValue.new = function(semanticsObject) {
    this[_auxiliaryValueElement] = null;
    src__engine.LabelAndValue.__proto__.new.call(this, src__engine.Role.labelAndValue, semanticsObject);
  }).prototype = src__engine.LabelAndValue.prototype;
  dart.addTypeTests(src__engine.LabelAndValue);
  dart.setMethodSignature(src__engine.LabelAndValue, () => ({
    __proto__: dart.getMethods(src__engine.LabelAndValue.__proto__),
    update: dart.fnType(dart.void, []),
    [_cleanUpDom]: dart.fnType(dart.void, []),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setFieldSignature(src__engine.LabelAndValue, () => ({
    __proto__: dart.getFields(src__engine.LabelAndValue.__proto__),
    [_auxiliaryValueElement]: dart.fieldType(html.Element)
  }));
  const _scrollListener = dart.privateName(src__engine, "_scrollListener");
  const _effectiveNeutralScrollPosition = dart.privateName(src__engine, "_effectiveNeutralScrollPosition");
  const _domScrollPosition = dart.privateName(src__engine, "_domScrollPosition");
  const _neutralizeDomScrollPosition = dart.privateName(src__engine, "_neutralizeDomScrollPosition");
  const _recomputeScrollPosition = dart.privateName(src__engine, "_recomputeScrollPosition");
  const _gestureModeDidChange = dart.privateName(src__engine, "_gestureModeDidChange");
  src__engine.Scrollable = class Scrollable extends src__engine.RoleManager {
    [_recomputeScrollPosition]() {
      if (this[_domScrollPosition] != this[_effectiveNeutralScrollPosition]) {
        if (!dart.test(this.semanticsObject.owner.shouldAcceptBrowserGesture("scroll"))) {
          return;
        }
        let doScrollForward = dart.notNull(this[_domScrollPosition]) > dart.notNull(this[_effectiveNeutralScrollPosition]);
        this[_neutralizeDomScrollPosition]();
        this.semanticsObject.recomputePositionAndSize();
        let semanticsId = this.semanticsObject.id;
        if (doScrollForward) {
          if (dart.test(this.semanticsObject.isVerticalScrollContainer)) {
            ui.window.onSemanticsAction(semanticsId, ui.SemanticsAction.scrollUp, null);
          } else {
            if (!dart.test(this.semanticsObject.isHorizontalScrollContainer)) dart.assertFailed();
            ui.window.onSemanticsAction(semanticsId, ui.SemanticsAction.scrollLeft, null);
          }
        } else {
          if (dart.test(this.semanticsObject.isVerticalScrollContainer)) {
            ui.window.onSemanticsAction(semanticsId, ui.SemanticsAction.scrollDown, null);
          } else {
            if (!dart.test(this.semanticsObject.isHorizontalScrollContainer)) dart.assertFailed();
            ui.window.onSemanticsAction(semanticsId, ui.SemanticsAction.scrollRight, null);
          }
        }
      }
    }
    update() {
      if (this[_scrollListener] == null) {
        this.semanticsObject.element.style[$touchAction] = "none";
        this[_gestureModeDidChange]();
        this.semanticsObject.owner.addOneTimePostUpdateCallback(dart.fn(() => {
          this[_neutralizeDomScrollPosition]();
        }, VoidToNull()));
        this[_gestureModeListener] = dart.fn(_ => {
          this[_gestureModeDidChange]();
        }, GestureModeToNull());
        this.semanticsObject.owner.addGestureModeListener(this[_gestureModeListener]);
        this[_scrollListener] = dart.fn(_ => {
          this[_recomputeScrollPosition]();
        }, EventToNull());
        this.semanticsObject.element[$addEventListener]("scroll", this[_scrollListener]);
      }
    }
    get [_domScrollPosition]() {
      if (dart.test(this.semanticsObject.isVerticalScrollContainer)) {
        return this.semanticsObject.element[$scrollTop];
      } else {
        if (!dart.test(this.semanticsObject.isHorizontalScrollContainer)) dart.assertFailed();
        return this.semanticsObject.element[$scrollLeft];
      }
    }
    [_neutralizeDomScrollPosition]() {
      let _canonicalNeutralScrollPosition = 10;
      let element = this.semanticsObject.element;
      if (dart.test(this.semanticsObject.isVerticalScrollContainer)) {
        element[$scrollTop] = _canonicalNeutralScrollPosition;
        this[_effectiveNeutralScrollPosition] = element[$scrollTop];
        this.semanticsObject.verticalContainerAdjustment = this[_effectiveNeutralScrollPosition][$toDouble]();
        this.semanticsObject.horizontalContainerAdjustment = 0.0;
      } else {
        element[$scrollLeft] = _canonicalNeutralScrollPosition;
        this[_effectiveNeutralScrollPosition] = element[$scrollLeft];
        this.semanticsObject.verticalContainerAdjustment = 0.0;
        this.semanticsObject.horizontalContainerAdjustment = this[_effectiveNeutralScrollPosition][$toDouble]();
      }
    }
    [_gestureModeDidChange]() {
      let element = this.semanticsObject.element;
      switch (this.semanticsObject.owner.gestureMode) {
        case src__engine.GestureMode.browserGestures:
        {
          if (dart.test(this.semanticsObject.isVerticalScrollContainer)) {
            element.style[$overflowY] = "scroll";
          } else {
            if (!dart.test(this.semanticsObject.isHorizontalScrollContainer)) dart.assertFailed();
            element.style[$overflowX] = "scroll";
          }
          break;
        }
        case src__engine.GestureMode.pointerEvents:
        {
          if (dart.test(this.semanticsObject.isVerticalScrollContainer)) {
            element.style[$overflowY] = "hidden";
          } else {
            if (!dart.test(this.semanticsObject.isHorizontalScrollContainer)) dart.assertFailed();
            element.style[$overflowX] = "hidden";
          }
          break;
        }
      }
    }
    dispose() {
      let style = this.semanticsObject.element.style;
      if (!(this[_gestureModeListener] != null)) dart.assertFailed();
      style.removeProperty("overflowY");
      style.removeProperty("overflowX");
      style.removeProperty("touch-action");
      if (this[_scrollListener] != null) {
        this.semanticsObject.element[$removeEventListener]("scroll", this[_scrollListener]);
      }
      this.semanticsObject.owner.removeGestureModeListener(this[_gestureModeListener]);
      this[_gestureModeListener] = null;
    }
  };
  (src__engine.Scrollable.new = function(semanticsObject) {
    this[_gestureModeListener] = null;
    this[_scrollListener] = null;
    this[_effectiveNeutralScrollPosition] = 0;
    src__engine.Scrollable.__proto__.new.call(this, src__engine.Role.scrollable, semanticsObject);
  }).prototype = src__engine.Scrollable.prototype;
  dart.addTypeTests(src__engine.Scrollable);
  dart.setMethodSignature(src__engine.Scrollable, () => ({
    __proto__: dart.getMethods(src__engine.Scrollable.__proto__),
    [_recomputeScrollPosition]: dart.fnType(dart.void, []),
    update: dart.fnType(dart.void, []),
    [_neutralizeDomScrollPosition]: dart.fnType(dart.void, []),
    [_gestureModeDidChange]: dart.fnType(dart.void, []),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(src__engine.Scrollable, () => ({
    __proto__: dart.getGetters(src__engine.Scrollable.__proto__),
    [_domScrollPosition]: core.int
  }));
  dart.setFieldSignature(src__engine.Scrollable, () => ({
    __proto__: dart.getFields(src__engine.Scrollable.__proto__),
    [_gestureModeListener]: dart.fieldType(GestureModeTovoid()),
    [_scrollListener]: dart.fieldType(EventTodynamic()),
    [_effectiveNeutralScrollPosition]: dart.fieldType(core.int)
  }));
  dart.defineLazy(src__engine, {
    /*src__engine._debugShowSemanticsNodes*/get _debugShowSemanticsNodes() {
      return false;
    }
  });
  const _nodeUpdates$ = dart.privateName(src__engine, "_nodeUpdates");
  src__engine.SemanticsUpdate = class SemanticsUpdate extends core.Object {
    dispose() {}
  };
  (src__engine.SemanticsUpdate.new = function(opts) {
    let nodeUpdates = opts && 'nodeUpdates' in opts ? opts.nodeUpdates : null;
    this[_nodeUpdates$] = nodeUpdates;
  }).prototype = src__engine.SemanticsUpdate.prototype;
  dart.addTypeTests(src__engine.SemanticsUpdate);
  src__engine.SemanticsUpdate[dart.implements] = () => [ui.SemanticsUpdate];
  dart.setMethodSignature(src__engine.SemanticsUpdate, () => ({
    __proto__: dart.getMethods(src__engine.SemanticsUpdate.__proto__),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setFieldSignature(src__engine.SemanticsUpdate, () => ({
    __proto__: dart.getFields(src__engine.SemanticsUpdate.__proto__),
    [_nodeUpdates$]: dart.finalFieldType(ListOfSemanticsNodeUpdate())
  }));
  src__engine.SemanticsNodeUpdate = class SemanticsNodeUpdate extends core.Object {
    get id() {
      return this[id$];
    }
    set id(value) {
      super.id = value;
    }
    get flags() {
      return this[flags$];
    }
    set flags(value) {
      super.flags = value;
    }
    get actions() {
      return this[actions$];
    }
    set actions(value) {
      super.actions = value;
    }
    get textSelectionBase() {
      return this[textSelectionBase$];
    }
    set textSelectionBase(value) {
      super.textSelectionBase = value;
    }
    get textSelectionExtent() {
      return this[textSelectionExtent$];
    }
    set textSelectionExtent(value) {
      super.textSelectionExtent = value;
    }
    get platformViewId() {
      return this[platformViewId$];
    }
    set platformViewId(value) {
      super.platformViewId = value;
    }
    get scrollChildren() {
      return this[scrollChildren$];
    }
    set scrollChildren(value) {
      super.scrollChildren = value;
    }
    get scrollIndex() {
      return this[scrollIndex$];
    }
    set scrollIndex(value) {
      super.scrollIndex = value;
    }
    get scrollPosition() {
      return this[scrollPosition$];
    }
    set scrollPosition(value) {
      super.scrollPosition = value;
    }
    get scrollExtentMax() {
      return this[scrollExtentMax$];
    }
    set scrollExtentMax(value) {
      super.scrollExtentMax = value;
    }
    get scrollExtentMin() {
      return this[scrollExtentMin$];
    }
    set scrollExtentMin(value) {
      super.scrollExtentMin = value;
    }
    get rect() {
      return this[rect$3];
    }
    set rect(value) {
      super.rect = value;
    }
    get label() {
      return this[label$];
    }
    set label(value) {
      super.label = value;
    }
    get hint() {
      return this[hint$];
    }
    set hint(value) {
      super.hint = value;
    }
    get value() {
      return this[value$];
    }
    set value(value) {
      super.value = value;
    }
    get increasedValue() {
      return this[increasedValue$];
    }
    set increasedValue(value) {
      super.increasedValue = value;
    }
    get decreasedValue() {
      return this[decreasedValue$];
    }
    set decreasedValue(value) {
      super.decreasedValue = value;
    }
    get textDirection() {
      return this[textDirection$];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get transform() {
      return this[transform$];
    }
    set transform(value) {
      super.transform = value;
    }
    get childrenInTraversalOrder() {
      return this[childrenInTraversalOrder$];
    }
    set childrenInTraversalOrder(value) {
      super.childrenInTraversalOrder = value;
    }
    get childrenInHitTestOrder() {
      return this[childrenInHitTestOrder$];
    }
    set childrenInHitTestOrder(value) {
      super.childrenInHitTestOrder = value;
    }
    get additionalActions() {
      return this[additionalActions$];
    }
    set additionalActions(value) {
      super.additionalActions = value;
    }
    get elevation() {
      return this[elevation$1];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get thickness() {
      return this[thickness$];
    }
    set thickness(value) {
      super.thickness = value;
    }
  };
  (src__engine.SemanticsNodeUpdate.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let flags = opts && 'flags' in opts ? opts.flags : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let textSelectionBase = opts && 'textSelectionBase' in opts ? opts.textSelectionBase : null;
    let textSelectionExtent = opts && 'textSelectionExtent' in opts ? opts.textSelectionExtent : null;
    let platformViewId = opts && 'platformViewId' in opts ? opts.platformViewId : null;
    let scrollChildren = opts && 'scrollChildren' in opts ? opts.scrollChildren : null;
    let scrollIndex = opts && 'scrollIndex' in opts ? opts.scrollIndex : null;
    let scrollPosition = opts && 'scrollPosition' in opts ? opts.scrollPosition : null;
    let scrollExtentMax = opts && 'scrollExtentMax' in opts ? opts.scrollExtentMax : null;
    let scrollExtentMin = opts && 'scrollExtentMin' in opts ? opts.scrollExtentMin : null;
    let rect = opts && 'rect' in opts ? opts.rect : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let hint = opts && 'hint' in opts ? opts.hint : null;
    let value = opts && 'value' in opts ? opts.value : null;
    let increasedValue = opts && 'increasedValue' in opts ? opts.increasedValue : null;
    let decreasedValue = opts && 'decreasedValue' in opts ? opts.decreasedValue : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let transform = opts && 'transform' in opts ? opts.transform : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let childrenInTraversalOrder = opts && 'childrenInTraversalOrder' in opts ? opts.childrenInTraversalOrder : null;
    let childrenInHitTestOrder = opts && 'childrenInHitTestOrder' in opts ? opts.childrenInHitTestOrder : null;
    let additionalActions = opts && 'additionalActions' in opts ? opts.additionalActions : null;
    this[id$] = id;
    this[flags$] = flags;
    this[actions$] = actions;
    this[textSelectionBase$] = textSelectionBase;
    this[textSelectionExtent$] = textSelectionExtent;
    this[platformViewId$] = platformViewId;
    this[scrollChildren$] = scrollChildren;
    this[scrollIndex$] = scrollIndex;
    this[scrollPosition$] = scrollPosition;
    this[scrollExtentMax$] = scrollExtentMax;
    this[scrollExtentMin$] = scrollExtentMin;
    this[rect$3] = rect;
    this[label$] = label;
    this[hint$] = hint;
    this[value$] = value;
    this[increasedValue$] = increasedValue;
    this[decreasedValue$] = decreasedValue;
    this[textDirection$] = textDirection;
    this[transform$] = transform;
    this[elevation$1] = elevation;
    this[thickness$] = thickness;
    this[childrenInTraversalOrder$] = childrenInTraversalOrder;
    this[childrenInHitTestOrder$] = childrenInHitTestOrder;
    this[additionalActions$] = additionalActions;
  }).prototype = src__engine.SemanticsNodeUpdate.prototype;
  dart.addTypeTests(src__engine.SemanticsNodeUpdate);
  const id$ = Symbol("SemanticsNodeUpdate.id");
  const flags$ = Symbol("SemanticsNodeUpdate.flags");
  const actions$ = Symbol("SemanticsNodeUpdate.actions");
  const textSelectionBase$ = Symbol("SemanticsNodeUpdate.textSelectionBase");
  const textSelectionExtent$ = Symbol("SemanticsNodeUpdate.textSelectionExtent");
  const platformViewId$ = Symbol("SemanticsNodeUpdate.platformViewId");
  const scrollChildren$ = Symbol("SemanticsNodeUpdate.scrollChildren");
  const scrollIndex$ = Symbol("SemanticsNodeUpdate.scrollIndex");
  const scrollPosition$ = Symbol("SemanticsNodeUpdate.scrollPosition");
  const scrollExtentMax$ = Symbol("SemanticsNodeUpdate.scrollExtentMax");
  const scrollExtentMin$ = Symbol("SemanticsNodeUpdate.scrollExtentMin");
  const rect$3 = Symbol("SemanticsNodeUpdate.rect");
  const label$ = Symbol("SemanticsNodeUpdate.label");
  const hint$ = Symbol("SemanticsNodeUpdate.hint");
  const value$ = Symbol("SemanticsNodeUpdate.value");
  const increasedValue$ = Symbol("SemanticsNodeUpdate.increasedValue");
  const decreasedValue$ = Symbol("SemanticsNodeUpdate.decreasedValue");
  const textDirection$ = Symbol("SemanticsNodeUpdate.textDirection");
  const transform$ = Symbol("SemanticsNodeUpdate.transform");
  const childrenInTraversalOrder$ = Symbol("SemanticsNodeUpdate.childrenInTraversalOrder");
  const childrenInHitTestOrder$ = Symbol("SemanticsNodeUpdate.childrenInHitTestOrder");
  const additionalActions$ = Symbol("SemanticsNodeUpdate.additionalActions");
  const elevation$1 = Symbol("SemanticsNodeUpdate.elevation");
  const thickness$ = Symbol("SemanticsNodeUpdate.thickness");
  dart.setFieldSignature(src__engine.SemanticsNodeUpdate, () => ({
    __proto__: dart.getFields(src__engine.SemanticsNodeUpdate.__proto__),
    id: dart.finalFieldType(core.int),
    flags: dart.finalFieldType(core.int),
    actions: dart.finalFieldType(core.int),
    textSelectionBase: dart.finalFieldType(core.int),
    textSelectionExtent: dart.finalFieldType(core.int),
    platformViewId: dart.finalFieldType(core.int),
    scrollChildren: dart.finalFieldType(core.int),
    scrollIndex: dart.finalFieldType(core.int),
    scrollPosition: dart.finalFieldType(core.double),
    scrollExtentMax: dart.finalFieldType(core.double),
    scrollExtentMin: dart.finalFieldType(core.double),
    rect: dart.finalFieldType(ui.Rect),
    label: dart.finalFieldType(core.String),
    hint: dart.finalFieldType(core.String),
    value: dart.finalFieldType(core.String),
    increasedValue: dart.finalFieldType(core.String),
    decreasedValue: dart.finalFieldType(core.String),
    textDirection: dart.finalFieldType(ui.TextDirection),
    transform: dart.finalFieldType(typed_data.Float64List),
    childrenInTraversalOrder: dart.finalFieldType(typed_data.Int32List),
    childrenInHitTestOrder: dart.finalFieldType(typed_data.Int32List),
    additionalActions: dart.finalFieldType(typed_data.Int32List),
    elevation: dart.finalFieldType(core.double),
    thickness: dart.finalFieldType(core.double)
  }));
  src__engine.Role = class Role extends core.Object {
    toString() {
      return {
        0: "Role.incrementable",
        1: "Role.scrollable",
        2: "Role.labelAndValue",
        3: "Role.tappable",
        4: "Role.textField",
        5: "Role.checkable"
      }[this.index];
    }
  };
  (src__engine.Role.new = function(x) {
    this.index = x;
  }).prototype = src__engine.Role.prototype;
  dart.addTypeTests(src__engine.Role);
  dart.setFieldSignature(src__engine.Role, () => ({
    __proto__: dart.getFields(src__engine.Role.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(src__engine.Role, ['toString']);
  src__engine.Role.incrementable = dart.const(new src__engine.Role.new(0));
  src__engine.Role.scrollable = dart.const(new src__engine.Role.new(1));
  src__engine.Role.labelAndValue = dart.const(new src__engine.Role.new(2));
  src__engine.Role.tappable = dart.const(new src__engine.Role.new(3));
  src__engine.Role.textField = dart.const(new src__engine.Role.new(4));
  src__engine.Role.checkable = dart.const(new src__engine.Role.new(5));
  src__engine.Role.values = dart.constList([src__engine.Role.incrementable, src__engine.Role.scrollable, src__engine.Role.labelAndValue, src__engine.Role.tappable, src__engine.Role.textField, src__engine.Role.checkable], src__engine.Role);
  dart.defineLazy(src__engine, {
    /*src__engine._roleFactories*/get _roleFactories() {
      return new (LinkedMapOfRole$SemanticsObjectToRoleManager()).from([src__engine.Role.incrementable, dart.lazyFn(object => new src__engine.Incrementable.new(object), SemanticsObjectToIncrementable), src__engine.Role.scrollable, dart.lazyFn(object => new src__engine.Scrollable.new(object), SemanticsObjectToScrollable), src__engine.Role.labelAndValue, dart.lazyFn(object => new src__engine.LabelAndValue.new(object), SemanticsObjectToLabelAndValue), src__engine.Role.tappable, dart.lazyFn(object => new src__engine.Tappable.new(object), SemanticsObjectToTappable), src__engine.Role.textField, dart.lazyFn(object => new src__engine.TextField.new(object), SemanticsObjectToTextField), src__engine.Role.checkable, dart.lazyFn(object => new src__engine.Checkable.new(object), SemanticsObjectToCheckable)]);
    }
  });
  const _flags = dart.privateName(src__engine, "_flags");
  const _actions = dart.privateName(src__engine, "_actions");
  const _textSelectionBase = dart.privateName(src__engine, "_textSelectionBase");
  const _textSelectionExtent = dart.privateName(src__engine, "_textSelectionExtent");
  const _scrollChildren = dart.privateName(src__engine, "_scrollChildren");
  const _scrollIndex = dart.privateName(src__engine, "_scrollIndex");
  const _scrollPosition = dart.privateName(src__engine, "_scrollPosition");
  const _scrollExtentMax = dart.privateName(src__engine, "_scrollExtentMax");
  const _scrollExtentMin = dart.privateName(src__engine, "_scrollExtentMin");
  const _rect = dart.privateName(src__engine, "_rect");
  const _label = dart.privateName(src__engine, "_label");
  const _hint = dart.privateName(src__engine, "_hint");
  const _value$ = dart.privateName(src__engine, "_value");
  const _increasedValue = dart.privateName(src__engine, "_increasedValue");
  const _decreasedValue = dart.privateName(src__engine, "_decreasedValue");
  const _textDirection$ = dart.privateName(src__engine, "_textDirection");
  const _childrenInTraversalOrder = dart.privateName(src__engine, "_childrenInTraversalOrder");
  const _childrenInHitTestOrder = dart.privateName(src__engine, "_childrenInHitTestOrder");
  const _additionalActions = dart.privateName(src__engine, "_additionalActions");
  const _dirtyFields = dart.privateName(src__engine, "_dirtyFields");
  const _childContainerElement = dart.privateName(src__engine, "_childContainerElement");
  const _parent = dart.privateName(src__engine, "_parent");
  const _roleManagers = dart.privateName(src__engine, "_roleManagers");
  const _previousChildrenInTraversalOrder = dart.privateName(src__engine, "_previousChildrenInTraversalOrder");
  const _isDirty = dart.privateName(src__engine, "_isDirty");
  const _markFlagsDirty = dart.privateName(src__engine, "_markFlagsDirty");
  const _markActionsDirty = dart.privateName(src__engine, "_markActionsDirty");
  const _markTextSelectionBaseDirty = dart.privateName(src__engine, "_markTextSelectionBaseDirty");
  const _markTextSelectionExtentDirty = dart.privateName(src__engine, "_markTextSelectionExtentDirty");
  const _markScrollChildrenDirty = dart.privateName(src__engine, "_markScrollChildrenDirty");
  const _markScrollIndexDirty = dart.privateName(src__engine, "_markScrollIndexDirty");
  const _markScrollPositionDirty = dart.privateName(src__engine, "_markScrollPositionDirty");
  const _markScrollExtentMaxDirty = dart.privateName(src__engine, "_markScrollExtentMaxDirty");
  const _markScrollExtentMinDirty = dart.privateName(src__engine, "_markScrollExtentMinDirty");
  const _markRectDirty = dart.privateName(src__engine, "_markRectDirty");
  const _markLabelDirty = dart.privateName(src__engine, "_markLabelDirty");
  const _markHintDirty = dart.privateName(src__engine, "_markHintDirty");
  const _markValueDirty = dart.privateName(src__engine, "_markValueDirty");
  const _markIncreasedValueDirty = dart.privateName(src__engine, "_markIncreasedValueDirty");
  const _markDecreasedValueDirty = dart.privateName(src__engine, "_markDecreasedValueDirty");
  const _markTextDirectionDirty = dart.privateName(src__engine, "_markTextDirectionDirty");
  const _markTransformDirty = dart.privateName(src__engine, "_markTransformDirty");
  const _markChildrenInTraversalOrderDirty = dart.privateName(src__engine, "_markChildrenInTraversalOrderDirty");
  const _markChildrenInHitTestOrderDirty = dart.privateName(src__engine, "_markChildrenInHitTestOrderDirty");
  const _markAdditionalActionsDirty = dart.privateName(src__engine, "_markAdditionalActionsDirty");
  const _updateRoles = dart.privateName(src__engine, "_updateRoles");
  const _updateChildrenInTraversalOrder = dart.privateName(src__engine, "_updateChildrenInTraversalOrder");
  const _updateRole = dart.privateName(src__engine, "_updateRole");
  const _detachObject = dart.privateName(src__engine, "_detachObject");
  const _attachObject = dart.privateName(src__engine, "_attachObject");
  src__engine.SemanticsObject = class SemanticsObject extends core.Object {
    get flags() {
      return this[_flags];
    }
    get isFlagsDirty() {
      return this[_isDirty](1);
    }
    [_markFlagsDirty]() {
      this[_dirtyFields] = (dart.notNull(this[_dirtyFields]) | 1) >>> 0;
    }
    get actions() {
      return this[_actions];
    }
    get isActionsDirty() {
      return this[_isDirty](2);
    }
    [_markActionsDirty]() {
      this[_dirtyFields] = (dart.notNull(this[_dirtyFields]) | 2) >>> 0;
    }
    get textSelectionBase() {
      return this[_textSelectionBase];
    }
    get isTextSelectionBaseDirty() {
      return this[_isDirty](4);
    }
    [_markTextSelectionBaseDirty]() {
      this[_dirtyFields] = (dart.notNull(this[_dirtyFields]) | 4) >>> 0;
    }
    get textSelectionExtent() {
      return this[_textSelectionExtent];
    }
    get isTextSelectionExtentDirty() {
      return this[_isDirty](8);
    }
    [_markTextSelectionExtentDirty]() {
      this[_dirtyFields] = (dart.notNull(this[_dirtyFields]) | 8) >>> 0;
    }
    get scrollChildren() {
      return this[_scrollChildren];
    }
    get isScrollChildrenDirty() {
      return this[_isDirty](16);
    }
    [_markScrollChildrenDirty]() {
      this[_dirtyFields] = (dart.notNull(this[_dirtyFields]) | 16) >>> 0;
    }
    get scrollIndex() {
      return this[_scrollIndex];
    }
    get isScrollIndexDirty() {
      return this[_isDirty](32);
    }
    [_markScrollIndexDirty]() {
      this[_dirtyFields] = (dart.notNull(this[_dirtyFields]) | 32) >>> 0;
    }
    get scrollPosition() {
      return this[_scrollPosition];
    }
    get isScrollPositionDirty() {
      return this[_isDirty](64);
    }
    [_markScrollPositionDirty]() {
      this[_dirtyFields] = (dart.notNull(this[_dirtyFields]) | 64) >>> 0;
    }
    get scrollExtentMax() {
      return this[_scrollExtentMax];
    }
    get isScrollExtentMaxDirty() {
      return this[_isDirty](128);
    }
    [_markScrollExtentMaxDirty]() {
      this[_dirtyFields] = (dart.notNull(this[_dirtyFields]) | 128) >>> 0;
    }
    get scrollExtentMin() {
      return this[_scrollExtentMin];
    }
    get isScrollExtentMinDirty() {
      return this[_isDirty](256);
    }
    [_markScrollExtentMinDirty]() {
      this[_dirtyFields] = (dart.notNull(this[_dirtyFields]) | 256) >>> 0;
    }
    get rect() {
      return this[_rect];
    }
    get isRectDirty() {
      return this[_isDirty](512);
    }
    [_markRectDirty]() {
      this[_dirtyFields] = (dart.notNull(this[_dirtyFields]) | 512) >>> 0;
    }
    get label() {
      return this[_label];
    }
    get hasLabel() {
      return this[_label] != null && this[_label][$isNotEmpty];
    }
    get isLabelDirty() {
      return this[_isDirty](1024);
    }
    [_markLabelDirty]() {
      this[_dirtyFields] = (dart.notNull(this[_dirtyFields]) | 1024) >>> 0;
    }
    get hint() {
      return this[_hint];
    }
    get isHintDirty() {
      return this[_isDirty](2048);
    }
    [_markHintDirty]() {
      this[_dirtyFields] = (dart.notNull(this[_dirtyFields]) | 2048) >>> 0;
    }
    get value() {
      return this[_value$];
    }
    get hasValue() {
      return this[_value$] != null && this[_value$][$isNotEmpty];
    }
    get isValueDirty() {
      return this[_isDirty](4096);
    }
    [_markValueDirty]() {
      this[_dirtyFields] = (dart.notNull(this[_dirtyFields]) | 4096) >>> 0;
    }
    get increasedValue() {
      return this[_increasedValue];
    }
    get isIncreasedValueDirty() {
      return this[_isDirty](8192);
    }
    [_markIncreasedValueDirty]() {
      this[_dirtyFields] = (dart.notNull(this[_dirtyFields]) | 8192) >>> 0;
    }
    get decreasedValue() {
      return this[_decreasedValue];
    }
    get isDecreasedValueDirty() {
      return this[_isDirty](16384);
    }
    [_markDecreasedValueDirty]() {
      this[_dirtyFields] = (dart.notNull(this[_dirtyFields]) | 16384) >>> 0;
    }
    get textDirection() {
      return this[_textDirection$];
    }
    get isTextDirectionDirty() {
      return this[_isDirty](32768);
    }
    [_markTextDirectionDirty]() {
      this[_dirtyFields] = (dart.notNull(this[_dirtyFields]) | 32768) >>> 0;
    }
    get transform() {
      return this[_transform$];
    }
    get isTransformDirty() {
      return this[_isDirty](65536);
    }
    [_markTransformDirty]() {
      this[_dirtyFields] = (dart.notNull(this[_dirtyFields]) | 65536) >>> 0;
    }
    get childrenInTraversalOrder() {
      return this[_childrenInTraversalOrder];
    }
    get isChildrenInTraversalOrderDirty() {
      return this[_isDirty](524288);
    }
    [_markChildrenInTraversalOrderDirty]() {
      this[_dirtyFields] = (dart.notNull(this[_dirtyFields]) | 524288) >>> 0;
    }
    get childrenInHitTestOrder() {
      return this[_childrenInHitTestOrder];
    }
    get isChildrenInHitTestOrderDirty() {
      return this[_isDirty](1048576);
    }
    [_markChildrenInHitTestOrderDirty]() {
      this[_dirtyFields] = (dart.notNull(this[_dirtyFields]) | 1048576) >>> 0;
    }
    get additionalActions() {
      return this[_additionalActions];
    }
    get isAdditionalActionsDirty() {
      return this[_isDirty](2097152);
    }
    [_markAdditionalActionsDirty]() {
      this[_dirtyFields] = (dart.notNull(this[_dirtyFields]) | 2097152) >>> 0;
    }
    get id() {
      return this[id$0];
    }
    set id(value) {
      super.id = value;
    }
    get owner() {
      return this[owner$];
    }
    set owner(value) {
      super.owner = value;
    }
    get element() {
      return this[element];
    }
    set element(value) {
      super.element = value;
    }
    [_isDirty](fieldIndex) {
      return (dart.notNull(this[_dirtyFields]) & dart.notNull(fieldIndex)) !== 0;
    }
    getOrCreateChildContainer() {
      if (this[_childContainerElement] == null) {
        this[_childContainerElement] = html.Element.tag("flt-semantics-container");
        this[_childContainerElement].style[$position] = "absolute";
        this.element[$append](this[_childContainerElement]);
      }
      return this[_childContainerElement];
    }
    hasFlag(flag) {
      return (dart.notNull(this[_flags]) & dart.notNull(flag.index)) !== 0;
    }
    hasAction(action) {
      return (dart.notNull(this[_actions]) & dart.notNull(action.index)) !== 0;
    }
    get isVerticalScrollContainer() {
      return dart.test(this.hasAction(ui.SemanticsAction.scrollDown)) || dart.test(this.hasAction(ui.SemanticsAction.scrollUp));
    }
    get isHorizontalScrollContainer() {
      return dart.test(this.hasAction(ui.SemanticsAction.scrollLeft)) || dart.test(this.hasAction(ui.SemanticsAction.scrollRight));
    }
    get hasChildren() {
      return this[_childrenInTraversalOrder] != null && dart.test(this[_childrenInTraversalOrder][$isNotEmpty]);
    }
    get isTextField() {
      return this.hasFlag(ui.SemanticsFlag.isTextField);
    }
    updateWith(update) {
      if (!(update.flags != null)) dart.assertFailed();
      if (this[_flags] != update.flags) {
        this[_flags] = update.flags;
        this[_markFlagsDirty]();
      }
      if (this[_value$] != update.value) {
        this[_value$] = update.value;
        this[_markValueDirty]();
      }
      if (this[_label] != update.label) {
        this[_label] = update.label;
        this[_markLabelDirty]();
      }
      if (!dart.equals(this[_rect], update.rect)) {
        this[_rect] = update.rect;
        this[_markRectDirty]();
      }
      if (!dart.equals(this[_transform$], update.transform)) {
        this[_transform$] = update.transform;
        this[_markTransformDirty]();
      }
      if (this[_scrollPosition] != update.scrollPosition) {
        this[_scrollPosition] = update.scrollPosition;
        this[_markScrollPositionDirty]();
      }
      if (this[_actions] != update.actions) {
        this[_actions] = update.actions;
        this[_markActionsDirty]();
      }
      if (this[_textSelectionBase] != update.textSelectionBase) {
        this[_textSelectionBase] = update.textSelectionBase;
        this[_markTextSelectionBaseDirty]();
      }
      if (this[_textSelectionExtent] != update.textSelectionExtent) {
        this[_textSelectionExtent] = update.textSelectionExtent;
        this[_markTextSelectionExtentDirty]();
      }
      if (this[_scrollChildren] != update.scrollChildren) {
        this[_scrollChildren] = update.scrollChildren;
        this[_markScrollChildrenDirty]();
      }
      if (this[_scrollIndex] != update.scrollIndex) {
        this[_scrollIndex] = update.scrollIndex;
        this[_markScrollIndexDirty]();
      }
      if (this[_scrollExtentMax] != update.scrollExtentMax) {
        this[_scrollExtentMax] = update.scrollExtentMax;
        this[_markScrollExtentMaxDirty]();
      }
      if (this[_scrollExtentMin] != update.scrollExtentMin) {
        this[_scrollExtentMin] = update.scrollExtentMin;
        this[_markScrollExtentMinDirty]();
      }
      if (this[_hint] != update.hint) {
        this[_hint] = update.hint;
        this[_markHintDirty]();
      }
      if (this[_increasedValue] != update.increasedValue) {
        this[_increasedValue] = update.increasedValue;
        this[_markIncreasedValueDirty]();
      }
      if (this[_decreasedValue] != update.decreasedValue) {
        this[_decreasedValue] = update.decreasedValue;
        this[_markDecreasedValueDirty]();
      }
      if (this[_textDirection$] != update.textDirection) {
        this[_textDirection$] = update.textDirection;
        this[_markTextDirectionDirty]();
      }
      if (!dart.equals(this[_childrenInHitTestOrder], update.childrenInHitTestOrder)) {
        this[_childrenInHitTestOrder] = update.childrenInHitTestOrder;
        this[_markChildrenInHitTestOrderDirty]();
      }
      if (!dart.equals(this[_childrenInTraversalOrder], update.childrenInTraversalOrder)) {
        this[_childrenInTraversalOrder] = update.childrenInTraversalOrder;
        this[_markChildrenInTraversalOrderDirty]();
      }
      if (!dart.equals(this[_additionalActions], update.additionalActions)) {
        this[_additionalActions] = update.additionalActions;
        this[_markAdditionalActionsDirty]();
      }
      this[_updateRoles]();
      this[_updateChildrenInTraversalOrder]();
      if (dart.test(this.isRectDirty) || dart.test(this.isTransformDirty) || dart.test(this.isScrollPositionDirty)) {
        this.recomputePositionAndSize();
      }
      if (!(this[_childContainerElement] == null || dart.test(this.hasChildren))) dart.assertFailed();
      this[_dirtyFields] = 0;
    }
    setAriaRole(ariaRoleName, condition) {
      if (dart.test(condition)) {
        this.element[$setAttribute]("role", ariaRoleName);
      } else if (this.element[$getAttribute]("role") == ariaRoleName) {
        this.element[$attributes][$remove]("role");
      }
    }
    [_updateRoles]() {
      this[_updateRole](src__engine.Role.labelAndValue, dart.test(this.hasLabel) || dart.test(this.hasValue));
      this[_updateRole](src__engine.Role.textField, this.isTextField);
      this[_updateRole](src__engine.Role.tappable, dart.test(this.hasAction(ui.SemanticsAction.tap)) || dart.test(this.hasFlag(ui.SemanticsFlag.isButton)));
      this[_updateRole](src__engine.Role.incrementable, this.isIncrementable);
      this[_updateRole](src__engine.Role.scrollable, dart.test(this.isVerticalScrollContainer) || dart.test(this.isHorizontalScrollContainer));
      this[_updateRole](src__engine.Role.checkable, this.hasFlag(ui.SemanticsFlag.hasCheckedState));
    }
    [_updateRole](role, enabled) {
      let manager = this[_roleManagers]._get(role);
      if (dart.test(enabled)) {
        if (manager == null) {
          manager = src__engine._roleFactories[$_get](role)(this);
          this[_roleManagers]._set(role, manager);
        }
        manager.update();
      } else if (manager != null) {
        manager.dispose();
        this[_roleManagers].remove(role);
      }
    }
    get isIncrementable() {
      return dart.test(this.hasAction(ui.SemanticsAction.increase)) || dart.test(this.hasAction(ui.SemanticsAction.decrease));
    }
    get verticalContainerAdjustment() {
      return this[verticalContainerAdjustment];
    }
    set verticalContainerAdjustment(value) {
      this[verticalContainerAdjustment] = value;
    }
    get horizontalContainerAdjustment() {
      return this[horizontalContainerAdjustment];
    }
    set horizontalContainerAdjustment(value) {
      this[horizontalContainerAdjustment] = value;
    }
    recomputePositionAndSize() {
      this.element.style[$width] = dart.str(this[_rect].width) + "px";
      this.element.style[$height] = dart.str(this[_rect].height) + "px";
      let containerElement = dart.test(this.hasChildren) ? this.getOrCreateChildContainer() : null;
      let hasZeroRectOffset = this[_rect].top === 0.0 && this[_rect].left === 0.0;
      let hasIdentityTransform = this[_transform$] == null || dart.test(src__engine.isIdentityFloat64ListTransform(this[_transform$]));
      if (hasZeroRectOffset && hasIdentityTransform && this.verticalContainerAdjustment === 0.0 && this.horizontalContainerAdjustment === 0.0) {
        this.element.style.removeProperty("transform-origin");
        this.element.style.removeProperty("transform");
        if (containerElement != null) {
          containerElement.style.removeProperty("transform-origin");
          containerElement.style.removeProperty("transform");
        }
        return;
      }
      let effectiveTransform = null;
      let effectiveTransformIsIdentity = true;
      if (!hasZeroRectOffset) {
        if (this[_transform$] == null) {
          let left = this[_rect].left;
          let top = this[_rect].top;
          effectiveTransform = src__engine.Matrix4.translationValues(left, top, 0.0);
          effectiveTransformIsIdentity = left === 0.0 && top === 0.0;
        } else {
          effectiveTransform = new src__engine.Matrix4.fromFloat64List(this[_transform$]).clone();
          effectiveTransform.translate(this[_rect].left, this[_rect].top, 0.0);
          effectiveTransformIsIdentity = effectiveTransform.isIdentity();
        }
      } else if (!hasIdentityTransform) {
        effectiveTransform = new src__engine.Matrix4.fromFloat64List(this[_transform$]);
        effectiveTransformIsIdentity = false;
      }
      if (!dart.test(effectiveTransformIsIdentity)) {
        this.element.style[$transformOrigin] = "0 0 0";
        this.element.style[$transform] = src__engine.matrix4ToCssTransform(effectiveTransform);
      } else {
        this.element.style.removeProperty("transform-origin");
        this.element.style.removeProperty("transform");
      }
      if (containerElement != null) {
        if (!hasZeroRectOffset || this.verticalContainerAdjustment !== 0.0 || this.horizontalContainerAdjustment !== 0.0) {
          let translateX = -dart.notNull(this[_rect].left) + dart.notNull(this.horizontalContainerAdjustment);
          let translateY = -dart.notNull(this[_rect].top) + dart.notNull(this.verticalContainerAdjustment);
          containerElement.style[$transformOrigin] = "0 0 0";
          containerElement.style[$transform] = "translate(" + dart.str(translateX) + "px, " + dart.str(translateY) + "px)";
        } else {
          containerElement.style.removeProperty("transform-origin");
          containerElement.style.removeProperty("transform");
        }
      }
    }
    [_updateChildrenInTraversalOrder]() {
      if (this[_childrenInTraversalOrder] == null || dart.test(this[_childrenInTraversalOrder][$isEmpty])) {
        if (this[_previousChildrenInTraversalOrder] == null || dart.test(this[_previousChildrenInTraversalOrder][$isEmpty])) {
          if (!(this[_childContainerElement] == null)) dart.assertFailed();
          this[_previousChildrenInTraversalOrder] = this[_childrenInTraversalOrder];
          return;
        }
        if (!(this[_childContainerElement] != null)) dart.assertFailed();
        for (let childId of this[_previousChildrenInTraversalOrder]) {
          this.owner[_detachObject](childId);
        }
        this[_previousChildrenInTraversalOrder] = null;
        this[_childContainerElement][$remove]();
        this[_childContainerElement] = null;
        this[_previousChildrenInTraversalOrder] = this[_childrenInTraversalOrder];
        return;
      }
      let containerElement = this.getOrCreateChildContainer();
      if (this[_previousChildrenInTraversalOrder] == null || dart.test(this[_previousChildrenInTraversalOrder][$isEmpty])) {
        this[_previousChildrenInTraversalOrder] = this[_childrenInTraversalOrder];
        for (let id of this[_previousChildrenInTraversalOrder]) {
          let child = this.owner.getOrCreateObject(id);
          containerElement[$append](child.element);
          this.owner[_attachObject]({parent: this, child: child});
        }
        this[_previousChildrenInTraversalOrder] = this[_childrenInTraversalOrder];
        return;
      }
      let intersectionIndicesNew = JSArrayOfint().of([]);
      let intersectionIndicesOld = JSArrayOfint().of([]);
      let newIndex = 0;
      let minLength = math.min(core.int, this[_previousChildrenInTraversalOrder][$length], this[_childrenInTraversalOrder][$length]);
      while (newIndex < minLength && this[_previousChildrenInTraversalOrder][$_get](newIndex) == this[_childrenInTraversalOrder][$_get](newIndex)) {
        intersectionIndicesNew[$add](newIndex);
        intersectionIndicesOld[$add](newIndex);
        newIndex = newIndex + 1;
      }
      if (this[_previousChildrenInTraversalOrder][$length] == this[_childrenInTraversalOrder][$length] && newIndex === this[_childrenInTraversalOrder][$length]) {
        return;
      }
      while (newIndex < dart.notNull(this[_childrenInTraversalOrder][$length])) {
        for (let oldIndex = 0; oldIndex < dart.notNull(this[_previousChildrenInTraversalOrder][$length]); oldIndex = oldIndex + 1) {
          if (this[_previousChildrenInTraversalOrder][$_get](oldIndex) == this[_childrenInTraversalOrder][$_get](newIndex)) {
            intersectionIndicesNew[$add](newIndex);
            intersectionIndicesOld[$add](oldIndex);
            break;
          }
        }
        newIndex = newIndex + 1;
      }
      let longestSequence = src__engine.longestIncreasingSubsequence(intersectionIndicesOld);
      let stationaryIds = JSArrayOfint().of([]);
      for (let i = 0; i < dart.notNull(longestSequence[$length]); i = i + 1) {
        stationaryIds[$add](this[_previousChildrenInTraversalOrder][$_get](intersectionIndicesOld[$_get](longestSequence[$_get](i))));
      }
      for (let i = 0; i < dart.notNull(this[_previousChildrenInTraversalOrder][$length]); i++) {
        if (!dart.test(intersectionIndicesOld[$contains](i))) {
          let childId = this[_previousChildrenInTraversalOrder][$_get](i);
          this.owner[_detachObject](childId);
        }
      }
      let refNode = null;
      for (let i = dart.notNull(this[_childrenInTraversalOrder][$length]) - 1; i >= 0; i = i - 1) {
        let childId = this[_childrenInTraversalOrder][$_get](i);
        let child = this.owner.getOrCreateObject(childId);
        if (!dart.test(stationaryIds[$contains](childId))) {
          if (refNode == null) {
            containerElement[$append](child.element);
          } else {
            containerElement.insertBefore(child.element, refNode);
          }
          this.owner[_attachObject]({parent: this, child: child});
        } else {
          if (!dart.equals(child[_parent], this)) dart.assertFailed();
        }
        refNode = child.element;
      }
      this[_previousChildrenInTraversalOrder] = this[_childrenInTraversalOrder];
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        let children = this[_childrenInTraversalOrder] != null && dart.test(this[_childrenInTraversalOrder][$isNotEmpty]) ? "[" + dart.str(this[_childrenInTraversalOrder][$join](", ")) + "]" : "<empty>";
        return dart.str(this[$runtimeType]) + "(#" + dart.str(this.id) + ", children: " + children + ")";
      } else {
        return super.toString();
      }
    }
  };
  (src__engine.SemanticsObject.new = function(id, owner) {
    this[_flags] = null;
    this[_actions] = null;
    this[_textSelectionBase] = null;
    this[_textSelectionExtent] = null;
    this[_scrollChildren] = null;
    this[_scrollIndex] = null;
    this[_scrollPosition] = null;
    this[_scrollExtentMax] = null;
    this[_scrollExtentMin] = null;
    this[_rect] = null;
    this[_label] = null;
    this[_hint] = null;
    this[_value$] = null;
    this[_increasedValue] = null;
    this[_decreasedValue] = null;
    this[_textDirection$] = null;
    this[_transform$] = null;
    this[_childrenInTraversalOrder] = null;
    this[_childrenInHitTestOrder] = null;
    this[_additionalActions] = null;
    this[element] = html.Element.tag("flt-semantics");
    this[_dirtyFields] = -1;
    this[_childContainerElement] = null;
    this[_parent] = null;
    this[_roleManagers] = new (LinkedMapOfRole$RoleManager()).new();
    this[verticalContainerAdjustment] = 0.0;
    this[horizontalContainerAdjustment] = 0.0;
    this[_previousChildrenInTraversalOrder] = null;
    this[id$0] = id;
    this[owner$] = owner;
    this.element.style[$position] = "absolute";
    if (this.id === 0) {
      this.element.style[$filter] = "opacity(0%)";
      this.element.style[$color] = "rgba(0,0,0,0)";
    }
    if (false) {
      this.element.style[$filter] = "opacity(90%)";
      this.element.style[$outline] = "1px solid green";
      this.element.style[$color] = "purple";
    }
  }).prototype = src__engine.SemanticsObject.prototype;
  dart.addTypeTests(src__engine.SemanticsObject);
  const id$0 = Symbol("SemanticsObject.id");
  const owner$ = Symbol("SemanticsObject.owner");
  const element = Symbol("SemanticsObject.element");
  const verticalContainerAdjustment = Symbol("SemanticsObject.verticalContainerAdjustment");
  const horizontalContainerAdjustment = Symbol("SemanticsObject.horizontalContainerAdjustment");
  dart.setMethodSignature(src__engine.SemanticsObject, () => ({
    __proto__: dart.getMethods(src__engine.SemanticsObject.__proto__),
    [_markFlagsDirty]: dart.fnType(dart.void, []),
    [_markActionsDirty]: dart.fnType(dart.void, []),
    [_markTextSelectionBaseDirty]: dart.fnType(dart.void, []),
    [_markTextSelectionExtentDirty]: dart.fnType(dart.void, []),
    [_markScrollChildrenDirty]: dart.fnType(dart.void, []),
    [_markScrollIndexDirty]: dart.fnType(dart.void, []),
    [_markScrollPositionDirty]: dart.fnType(dart.void, []),
    [_markScrollExtentMaxDirty]: dart.fnType(dart.void, []),
    [_markScrollExtentMinDirty]: dart.fnType(dart.void, []),
    [_markRectDirty]: dart.fnType(dart.void, []),
    [_markLabelDirty]: dart.fnType(dart.void, []),
    [_markHintDirty]: dart.fnType(dart.void, []),
    [_markValueDirty]: dart.fnType(dart.void, []),
    [_markIncreasedValueDirty]: dart.fnType(dart.void, []),
    [_markDecreasedValueDirty]: dart.fnType(dart.void, []),
    [_markTextDirectionDirty]: dart.fnType(dart.void, []),
    [_markTransformDirty]: dart.fnType(dart.void, []),
    [_markChildrenInTraversalOrderDirty]: dart.fnType(dart.void, []),
    [_markChildrenInHitTestOrderDirty]: dart.fnType(dart.void, []),
    [_markAdditionalActionsDirty]: dart.fnType(dart.void, []),
    [_isDirty]: dart.fnType(core.bool, [core.int]),
    getOrCreateChildContainer: dart.fnType(html.Element, []),
    hasFlag: dart.fnType(core.bool, [ui.SemanticsFlag]),
    hasAction: dart.fnType(core.bool, [ui.SemanticsAction]),
    updateWith: dart.fnType(dart.void, [src__engine.SemanticsNodeUpdate]),
    setAriaRole: dart.fnType(dart.void, [core.String, core.bool]),
    [_updateRoles]: dart.fnType(dart.void, []),
    [_updateRole]: dart.fnType(dart.void, [src__engine.Role, core.bool]),
    recomputePositionAndSize: dart.fnType(dart.void, []),
    [_updateChildrenInTraversalOrder]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(src__engine.SemanticsObject, () => ({
    __proto__: dart.getGetters(src__engine.SemanticsObject.__proto__),
    flags: core.int,
    isFlagsDirty: core.bool,
    actions: core.int,
    isActionsDirty: core.bool,
    textSelectionBase: core.int,
    isTextSelectionBaseDirty: core.bool,
    textSelectionExtent: core.int,
    isTextSelectionExtentDirty: core.bool,
    scrollChildren: core.int,
    isScrollChildrenDirty: core.bool,
    scrollIndex: core.int,
    isScrollIndexDirty: core.bool,
    scrollPosition: core.double,
    isScrollPositionDirty: core.bool,
    scrollExtentMax: core.double,
    isScrollExtentMaxDirty: core.bool,
    scrollExtentMin: core.double,
    isScrollExtentMinDirty: core.bool,
    rect: ui.Rect,
    isRectDirty: core.bool,
    label: core.String,
    hasLabel: core.bool,
    isLabelDirty: core.bool,
    hint: core.String,
    isHintDirty: core.bool,
    value: core.String,
    hasValue: core.bool,
    isValueDirty: core.bool,
    increasedValue: core.String,
    isIncreasedValueDirty: core.bool,
    decreasedValue: core.String,
    isDecreasedValueDirty: core.bool,
    textDirection: ui.TextDirection,
    isTextDirectionDirty: core.bool,
    transform: typed_data.Float64List,
    isTransformDirty: core.bool,
    childrenInTraversalOrder: typed_data.Int32List,
    isChildrenInTraversalOrderDirty: core.bool,
    childrenInHitTestOrder: typed_data.Int32List,
    isChildrenInHitTestOrderDirty: core.bool,
    additionalActions: typed_data.Int32List,
    isAdditionalActionsDirty: core.bool,
    isVerticalScrollContainer: core.bool,
    isHorizontalScrollContainer: core.bool,
    hasChildren: core.bool,
    isTextField: core.bool,
    isIncrementable: core.bool
  }));
  dart.setFieldSignature(src__engine.SemanticsObject, () => ({
    __proto__: dart.getFields(src__engine.SemanticsObject.__proto__),
    [_flags]: dart.fieldType(core.int),
    [_actions]: dart.fieldType(core.int),
    [_textSelectionBase]: dart.fieldType(core.int),
    [_textSelectionExtent]: dart.fieldType(core.int),
    [_scrollChildren]: dart.fieldType(core.int),
    [_scrollIndex]: dart.fieldType(core.int),
    [_scrollPosition]: dart.fieldType(core.double),
    [_scrollExtentMax]: dart.fieldType(core.double),
    [_scrollExtentMin]: dart.fieldType(core.double),
    [_rect]: dart.fieldType(ui.Rect),
    [_label]: dart.fieldType(core.String),
    [_hint]: dart.fieldType(core.String),
    [_value$]: dart.fieldType(core.String),
    [_increasedValue]: dart.fieldType(core.String),
    [_decreasedValue]: dart.fieldType(core.String),
    [_textDirection$]: dart.fieldType(ui.TextDirection),
    [_transform$]: dart.fieldType(typed_data.Float64List),
    [_childrenInTraversalOrder]: dart.fieldType(typed_data.Int32List),
    [_childrenInHitTestOrder]: dart.fieldType(typed_data.Int32List),
    [_additionalActions]: dart.fieldType(typed_data.Int32List),
    id: dart.finalFieldType(core.int),
    owner: dart.finalFieldType(src__engine.EngineSemanticsOwner),
    element: dart.finalFieldType(html.Element),
    [_dirtyFields]: dart.fieldType(core.int),
    [_childContainerElement]: dart.fieldType(html.Element),
    [_parent]: dart.fieldType(src__engine.SemanticsObject),
    [_roleManagers]: dart.finalFieldType(LinkedHashMapOfRole$RoleManager()),
    verticalContainerAdjustment: dart.fieldType(core.double),
    horizontalContainerAdjustment: dart.fieldType(core.double),
    [_previousChildrenInTraversalOrder]: dart.fieldType(typed_data.Int32List)
  }));
  dart.defineExtensionMethods(src__engine.SemanticsObject, ['toString']);
  dart.defineLazy(src__engine.SemanticsObject, {
    /*src__engine.SemanticsObject._flagsIndex*/get _flagsIndex() {
      return 1 << 0;
    },
    /*src__engine.SemanticsObject._actionsIndex*/get _actionsIndex() {
      return 1 << 1;
    },
    /*src__engine.SemanticsObject._textSelectionBaseIndex*/get _textSelectionBaseIndex() {
      return 1 << 2;
    },
    /*src__engine.SemanticsObject._textSelectionExtentIndex*/get _textSelectionExtentIndex() {
      return 1 << 3;
    },
    /*src__engine.SemanticsObject._scrollChildrenIndex*/get _scrollChildrenIndex() {
      return 1 << 4;
    },
    /*src__engine.SemanticsObject._scrollIndexIndex*/get _scrollIndexIndex() {
      return 1 << 5;
    },
    /*src__engine.SemanticsObject._scrollPositionIndex*/get _scrollPositionIndex() {
      return 1 << 6;
    },
    /*src__engine.SemanticsObject._scrollExtentMaxIndex*/get _scrollExtentMaxIndex() {
      return 1 << 7;
    },
    /*src__engine.SemanticsObject._scrollExtentMinIndex*/get _scrollExtentMinIndex() {
      return 1 << 8;
    },
    /*src__engine.SemanticsObject._rectIndex*/get _rectIndex() {
      return 1 << 9;
    },
    /*src__engine.SemanticsObject._labelIndex*/get _labelIndex() {
      return 1 << 10;
    },
    /*src__engine.SemanticsObject._hintIndex*/get _hintIndex() {
      return 1 << 11;
    },
    /*src__engine.SemanticsObject._valueIndex*/get _valueIndex() {
      return 1 << 12;
    },
    /*src__engine.SemanticsObject._increasedValueIndex*/get _increasedValueIndex() {
      return 1 << 13;
    },
    /*src__engine.SemanticsObject._decreasedValueIndex*/get _decreasedValueIndex() {
      return 1 << 14;
    },
    /*src__engine.SemanticsObject._textDirectionIndex*/get _textDirectionIndex() {
      return 1 << 15;
    },
    /*src__engine.SemanticsObject._transformIndex*/get _transformIndex() {
      return 1 << 16;
    },
    /*src__engine.SemanticsObject._childrenInTraversalOrderIndex*/get _childrenInTraversalOrderIndex() {
      return 1 << 19;
    },
    /*src__engine.SemanticsObject._childrenInHitTestOrderIndex*/get _childrenInHitTestOrderIndex() {
      return 1 << 20;
    },
    /*src__engine.SemanticsObject._additionalActionsIndex*/get _additionalActionsIndex() {
      return 1 << 21;
    }
  });
  src__engine.AccessibilityMode = class AccessibilityMode extends core.Object {
    toString() {
      return {
        0: "AccessibilityMode.unknown",
        1: "AccessibilityMode.known"
      }[this.index];
    }
  };
  (src__engine.AccessibilityMode.new = function(x) {
    this.index = x;
  }).prototype = src__engine.AccessibilityMode.prototype;
  dart.addTypeTests(src__engine.AccessibilityMode);
  dart.setFieldSignature(src__engine.AccessibilityMode, () => ({
    __proto__: dart.getFields(src__engine.AccessibilityMode.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(src__engine.AccessibilityMode, ['toString']);
  src__engine.AccessibilityMode.unknown = dart.const(new src__engine.AccessibilityMode.new(0));
  src__engine.AccessibilityMode.known = dart.const(new src__engine.AccessibilityMode.new(1));
  src__engine.AccessibilityMode.values = dart.constList([src__engine.AccessibilityMode.unknown, src__engine.AccessibilityMode.known], src__engine.AccessibilityMode);
  src__engine.GestureMode = class GestureMode extends core.Object {
    toString() {
      return {
        0: "GestureMode.pointerEvents",
        1: "GestureMode.browserGestures"
      }[this.index];
    }
  };
  (src__engine.GestureMode.new = function(x) {
    this.index = x;
  }).prototype = src__engine.GestureMode.prototype;
  dart.addTypeTests(src__engine.GestureMode);
  dart.setFieldSignature(src__engine.GestureMode, () => ({
    __proto__: dart.getFields(src__engine.GestureMode.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(src__engine.GestureMode, ['toString']);
  src__engine.GestureMode.pointerEvents = dart.const(new src__engine.GestureMode.new(0));
  src__engine.GestureMode.browserGestures = dart.const(new src__engine.GestureMode.new(1));
  src__engine.GestureMode.values = dart.constList([src__engine.GestureMode.pointerEvents, src__engine.GestureMode.browserGestures], src__engine.GestureMode);
  const _semanticsTree = dart.privateName(src__engine, "_semanticsTree");
  const _attachments = dart.privateName(src__engine, "_attachments");
  const _detachments = dart.privateName(src__engine, "_detachments");
  const _oneTimePostUpdateCallbacks = dart.privateName(src__engine, "_oneTimePostUpdateCallbacks");
  const _rootSemanticsElement = dart.privateName(src__engine, "_rootSemanticsElement");
  const _now = dart.privateName(src__engine, "_now");
  const _semanticsPlaceholder = dart.privateName(src__engine, "_semanticsPlaceholder");
  const _semanticsActivationTimer = dart.privateName(src__engine, "_semanticsActivationTimer");
  const _semanticsActivationAttempts = dart.privateName(src__engine, "_semanticsActivationAttempts");
  const _schedulePlaceholderRemoval = dart.privateName(src__engine, "_schedulePlaceholderRemoval");
  const _semanticsEnabled = dart.privateName(src__engine, "_semanticsEnabled");
  const _mode = dart.privateName(src__engine, "_mode");
  const _gestureMode = dart.privateName(src__engine, "_gestureMode");
  const _gestureModeClock = dart.privateName(src__engine, "_gestureModeClock");
  const _gestureModeListeners = dart.privateName(src__engine, "_gestureModeListeners");
  const _finalizeTree = dart.privateName(src__engine, "_finalizeTree");
  const _isWaitingToEnableSemantics = dart.privateName(src__engine, "_isWaitingToEnableSemantics");
  let const$19;
  let const$20;
  const _tryEnableSemantics = dart.privateName(src__engine, "_tryEnableSemantics");
  const _notifyGestureModeListeners = dart.privateName(src__engine, "_notifyGestureModeListeners");
  const _getGestureModeClock = dart.privateName(src__engine, "_getGestureModeClock");
  let const$21;
  const _temporarilyDisableBrowserGestureMode = dart.privateName(src__engine, "_temporarilyDisableBrowserGestureMode");
  let const$22;
  let const$23;
  src__engine.EngineSemanticsOwner = class EngineSemanticsOwner extends core.Object {
    static get instance() {
      let t = src__engine.EngineSemanticsOwner._instance;
      return t == null ? src__engine.EngineSemanticsOwner._instance = new src__engine.EngineSemanticsOwner.__() : t;
    }
    static debugResetSemantics() {
      if (src__engine.EngineSemanticsOwner._instance == null) {
        return;
      }
      src__engine.EngineSemanticsOwner._instance.semanticsEnabled = false;
      src__engine.EngineSemanticsOwner._instance = null;
    }
    [_attachObject](opts) {
      let parent = opts && 'parent' in opts ? opts.parent : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (!(child != null)) dart.assertFailed();
      if (!(parent != null)) dart.assertFailed();
      child[_parent] = parent;
      this[_attachments][$_set](child.id, parent);
    }
    [_detachObject](id) {
      if (!dart.test(this[_semanticsTree][$containsKey](id))) dart.assertFailed();
      let object = this[_semanticsTree][$_get](id);
      this[_detachments][$add](object);
    }
    addOneTimePostUpdateCallback(callback) {
      this[_oneTimePostUpdateCallbacks][$add](callback);
    }
    [_finalizeTree]() {
      for (let object of this[_detachments]) {
        let parent = this[_attachments][$_get](object.id);
        if (parent == null) {
          this[_semanticsTree][$remove](object.id);
          object[_parent] = null;
          object.element[$remove]();
        } else {
          if (!dart.equals(object[_parent], parent)) dart.assertFailed();
          if (!dart.equals(object.element[$parent], parent[_childContainerElement])) dart.assertFailed();
        }
      }
      this[_detachments] = JSArrayOfSemanticsObject().of([]);
      this[_attachments] = new (IdentityMapOfint$SemanticsObject()).new();
      if (dart.test(this[_oneTimePostUpdateCallbacks][$isNotEmpty])) {
        for (let callback of this[_oneTimePostUpdateCallbacks]) {
          callback();
        }
        this[_oneTimePostUpdateCallbacks] = JSArrayOfVoidTovoid().of([]);
      }
    }
    get debugSemanticsTree() {
      let result = null;
      if (!dart.test(dart.fn(() => {
        result = this[_semanticsTree];
        return true;
      }, VoidTobool())())) dart.assertFailed();
      return result;
    }
    debugOverrideTimestampFunction(value) {
      this[_now] = value;
    }
    debugResetTimestampFunction() {
      this[_now] = dart.fn(() => new core.DateTime.now(), VoidToDateTime());
    }
    get [_isWaitingToEnableSemantics]() {
      return this[_semanticsPlaceholder] != null;
    }
    [_tryEnableSemantics](event) {
      if (dart.test(this[_schedulePlaceholderRemoval])) {
        let removeNow = src__engine.browserEngine !== src__engine.BrowserEngine.webkit || event.type === "touchend";
        if (removeNow) {
          this[_semanticsPlaceholder][$remove]();
          this[_semanticsPlaceholder] = null;
          this[_semanticsActivationTimer] = null;
        }
        return true;
      }
      if (dart.test(this.semanticsEnabled)) {
        return true;
      }
      this[_semanticsActivationAttempts] = dart.notNull(this[_semanticsActivationAttempts]) + 1;
      if (dart.notNull(this[_semanticsActivationAttempts]) >= 20) {
        this[_schedulePlaceholderRemoval] = true;
        return true;
      }
      let kInterestingEventTypes = const$19 || (const$19 = dart.constList(["click", "touchstart", "touchend"], core.String));
      if (!dart.test(kInterestingEventTypes[$contains](event.type))) {
        return true;
      }
      if (this[_semanticsActivationTimer] != null) {
        return false;
      }
      let blinkEnableConditionPassed = src__engine.browserEngine === src__engine.BrowserEngine.blink && this[_gestureMode] === src__engine.GestureMode.browserGestures;
      let safariEnableConditionPassed = false;
      if (src__engine.browserEngine === src__engine.BrowserEngine.webkit) {
        let activationPoint = null;
        switch (event.type) {
          case "click":
          {
            let click = html.MouseEvent._check(event);
            activationPoint = click[$offset];
            break;
          }
          case "touchstart":
          case "touchend":
          {
            let touch = html.TouchEvent._check(event);
            activationPoint = touch.changedTouches[$first][$client];
            break;
          }
          default:
          {
            return true;
          }
        }
        if (!(activationPoint != null)) dart.assertFailed();
        let activatingElementRect = src__engine.domRenderer.glassPaneElement.getBoundingClientRect();
        let midX = dart.notNull(activatingElementRect[$left]) + (dart.notNull(activatingElementRect[$right]) - dart.notNull(activatingElementRect[$left])) / 2;
        let midY = dart.notNull(activatingElementRect[$top]) + (dart.notNull(activatingElementRect[$bottom]) - dart.notNull(activatingElementRect[$top])) / 2;
        let deltaX = dart.notNull(activationPoint.x) - dart.notNull(midX);
        let deltaY = dart.notNull(activationPoint.y) - dart.notNull(midY);
        let deltaSquared = dart.notNull(deltaX) * dart.notNull(deltaX) + dart.notNull(deltaY) * dart.notNull(deltaY);
        if (deltaSquared < 1.0) {
          safariEnableConditionPassed = true;
        }
      }
      if (blinkEnableConditionPassed || safariEnableConditionPassed) {
        if (!(this[_semanticsActivationTimer] == null)) dart.assertFailed();
        this[_semanticsActivationTimer] = async.Timer.new(const$20 || (const$20 = dart.const(new core.Duration.new({milliseconds: 300}))), dart.fn(() => {
          this.semanticsEnabled = true;
          this[_schedulePlaceholderRemoval] = true;
        }, VoidToNull()));
        return false;
      }
      return true;
    }
    autoEnableOnTap(domRenderer) {
      this[_semanticsPlaceholder] = html.Element.tag("flt-semantics-placeholder");
      this[_semanticsPlaceholder][$addEventListener]("click", dart.fn(event => {
        this[_tryEnableSemantics](event);
      }, EventToNull()), true);
      let _ = this[_semanticsPlaceholder];
      _[$setAttribute]("role", "button");
      _[$setAttribute]("aria-label", src__engine.EngineSemanticsOwner.placeholderMessage);
      this[_semanticsPlaceholder].style[$position] = "absolute";
      this[_semanticsPlaceholder].style[$left] = "0";
      this[_semanticsPlaceholder].style[$top] = "0";
      this[_semanticsPlaceholder].style[$right] = "0";
      this[_semanticsPlaceholder].style[$bottom] = "0";
      domRenderer.glassPaneElement[$append](this[_semanticsPlaceholder]);
    }
    get semanticsEnabled() {
      return this[_semanticsEnabled];
    }
    set semanticsEnabled(value) {
      if (value == this[_semanticsEnabled]) {
        return;
      }
      this[_semanticsEnabled] = value;
      if (!dart.test(this[_semanticsEnabled])) {
        if (this[_gestureMode] !== src__engine.GestureMode.pointerEvents) {
          this[_gestureMode] = src__engine.GestureMode.pointerEvents;
          this[_notifyGestureModeListeners]();
        }
        for (let id of this[_semanticsTree][$keys][$toList]()) {
          this[_detachObject](id);
        }
        this[_finalizeTree]();
        let t = this[_rootSemanticsElement];
        t == null ? null : t[$remove]();
        this[_rootSemanticsElement] = null;
        let l = this[_gestureModeClock];
        l == null ? null : l.datetime = null;
      }
      if (ui.window.onSemanticsEnabledChanged != null) {
        ui.window.onSemanticsEnabledChanged();
      }
    }
    get mode() {
      return this[_mode];
    }
    set mode(value) {
      if (!(value != null)) dart.assertFailed();
      this[_mode] = value;
    }
    get gestureMode() {
      return this[_gestureMode];
    }
    [_getGestureModeClock]() {
      if (this[_gestureModeClock] == null) {
        this[_gestureModeClock] = new src__engine.AlarmClock.new(this[_now]);
        this[_gestureModeClock].callback = dart.fn(() => {
          if (this[_gestureMode] === src__engine.GestureMode.browserGestures) {
            return;
          }
          this[_gestureMode] = src__engine.GestureMode.browserGestures;
          this[_notifyGestureModeListeners]();
        }, VoidToNull());
      }
      return this[_gestureModeClock];
    }
    [_temporarilyDisableBrowserGestureMode]() {
      let _kDebounceThreshold = const$21 || (const$21 = dart.const(new core.Duration.new({milliseconds: 500})));
      this[_getGestureModeClock]().datetime = this[_now]().add(_kDebounceThreshold);
      if (this[_gestureMode] !== src__engine.GestureMode.pointerEvents) {
        this[_gestureMode] = src__engine.GestureMode.pointerEvents;
        this[_notifyGestureModeListeners]();
      }
    }
    receiveGlobalEvent(event) {
      let _pointerEventTypes = const$22 || (const$22 = dart.constList(["pointerdown", "pointermove", "pointerup", "pointercancel", "touchstart", "touchend", "touchmove", "touchcancel", "mousedown", "mousemove", "mouseup"], core.String));
      if (dart.test(_pointerEventTypes[$contains](event.type))) {
        this[_temporarilyDisableBrowserGestureMode]();
      }
      if (!dart.test(this[_isWaitingToEnableSemantics])) {
        return true;
      } else {
        return this[_tryEnableSemantics](event);
      }
    }
    addGestureModeListener(callback) {
      this[_gestureModeListeners][$add](callback);
    }
    removeGestureModeListener(callback) {
      if (!dart.test(this[_gestureModeListeners][$contains](callback))) dart.assertFailed();
      this[_gestureModeListeners][$remove](callback);
    }
    [_notifyGestureModeListeners]() {
      for (let i = 0; i < dart.notNull(this[_gestureModeListeners][$length]); i++) {
        this[_gestureModeListeners][$_get](i)(this[_gestureMode]);
      }
    }
    shouldAcceptBrowserGesture(eventType) {
      if (this[_mode] === src__engine.AccessibilityMode.known) {
        return this.semanticsEnabled;
      }
      let pointerDebouncedGestures = const$23 || (const$23 = dart.constList(["click", "scroll"], core.String));
      if (dart.test(pointerDebouncedGestures[$contains](eventType))) {
        return this[_gestureMode] === src__engine.GestureMode.browserGestures;
      }
      return false;
    }
    getOrCreateObject(id) {
      let object = this[_semanticsTree][$_get](id);
      if (object == null) {
        object = new src__engine.SemanticsObject.new(id, this);
        this[_semanticsTree][$_set](id, object);
      }
      return object;
    }
    updateSemantics(uiUpdate) {
      if (!dart.test(this[_semanticsEnabled])) {
        return;
      }
      let update = src__engine.SemanticsUpdate._check(uiUpdate);
      for (let nodeUpdate of update[_nodeUpdates$]) {
        let object = this.getOrCreateObject(nodeUpdate.id);
        object.updateWith(nodeUpdate);
      }
      if (this[_rootSemanticsElement] == null) {
        let root = this[_semanticsTree][$_get](0);
        this[_rootSemanticsElement] = root.element;
        src__engine.domRenderer.glassPaneElement[$append](this[_rootSemanticsElement]);
      }
      this[_finalizeTree]();
      if (!dart.test(this[_semanticsTree][$containsKey](0))) dart.assertFailed();
      if (!dart.test(dart.fn(() => {
        this[_semanticsTree][$forEach](dart.fn((id, object) => {
          if (!(id == object.id)) dart.assertFailed();
          if (object[_childrenInTraversalOrder] != null) {
            for (let childId of object[_childrenInTraversalOrder]) {
              let child = this[_semanticsTree][$_get](childId);
              if (child == null) {
                dart.throw(new core.AssertionError.new("Child #" + dart.str(childId) + " is missing in the tree."));
              }
              if (child[_parent] == null) {
                dart.throw(new core.AssertionError.new("Child #" + dart.str(childId) + " of parent #" + dart.str(object.id) + " has null parent " + "reference."));
              }
              if (!(child[_parent] == object)) {
                dart.throw(new core.AssertionError.new("Parent #" + dart.str(object.id) + " has child #" + dart.str(childId) + ". However, the " + ("child is attached to #" + dart.str(child[_parent].id) + ".")));
              }
            }
          }
        }, intAndSemanticsObjectToNull()));
        let iter = update[_nodeUpdates$];
        for (let update of iter) {
          if (!dart.test(this[_semanticsTree][$containsKey](update.id))) dart.assertFailed();
          if (!(this[_semanticsTree][$_get](update.id).element != null)) dart.assertFailed();
        }
        return true;
      }, VoidTobool())())) dart.assertFailed();
    }
  };
  (src__engine.EngineSemanticsOwner.__ = function() {
    this[_semanticsTree] = new (IdentityMapOfint$SemanticsObject()).new();
    this[_attachments] = new (IdentityMapOfint$SemanticsObject()).new();
    this[_detachments] = JSArrayOfSemanticsObject().of([]);
    this[_oneTimePostUpdateCallbacks] = JSArrayOfVoidTovoid().of([]);
    this[_rootSemanticsElement] = null;
    this[_now] = dart.fn(() => new core.DateTime.now(), VoidToDateTime());
    this[_semanticsPlaceholder] = null;
    this[_semanticsActivationTimer] = null;
    this[_semanticsActivationAttempts] = 0;
    this[_schedulePlaceholderRemoval] = false;
    this[_semanticsEnabled] = false;
    this[_mode] = src__engine.AccessibilityMode.unknown;
    this[_gestureMode] = src__engine.GestureMode.browserGestures;
    this[_gestureModeClock] = null;
    this[_gestureModeListeners] = JSArrayOfGestureModeTovoid().of([]);
    src__engine.registerHotRestartListener(dart.fn(() => {
      let t = this[_rootSemanticsElement];
      t == null ? null : t[$remove]();
    }, VoidToNull()));
  }).prototype = src__engine.EngineSemanticsOwner.prototype;
  dart.addTypeTests(src__engine.EngineSemanticsOwner);
  dart.setMethodSignature(src__engine.EngineSemanticsOwner, () => ({
    __proto__: dart.getMethods(src__engine.EngineSemanticsOwner.__proto__),
    [_attachObject]: dart.fnType(dart.void, [], {parent: src__engine.SemanticsObject, child: src__engine.SemanticsObject}),
    [_detachObject]: dart.fnType(dart.void, [core.int]),
    addOneTimePostUpdateCallback: dart.fnType(dart.void, [dart.fnType(dart.void, [])]),
    [_finalizeTree]: dart.fnType(dart.void, []),
    debugOverrideTimestampFunction: dart.fnType(dart.void, [dart.fnType(core.DateTime, [])]),
    debugResetTimestampFunction: dart.fnType(dart.void, []),
    [_tryEnableSemantics]: dart.fnType(core.bool, [html.Event]),
    autoEnableOnTap: dart.fnType(dart.void, [src__engine.DomRenderer]),
    [_getGestureModeClock]: dart.fnType(src__engine.AlarmClock, []),
    [_temporarilyDisableBrowserGestureMode]: dart.fnType(dart.void, []),
    receiveGlobalEvent: dart.fnType(core.bool, [html.Event]),
    addGestureModeListener: dart.fnType(dart.void, [dart.fnType(dart.void, [src__engine.GestureMode])]),
    removeGestureModeListener: dart.fnType(dart.void, [dart.fnType(dart.void, [src__engine.GestureMode])]),
    [_notifyGestureModeListeners]: dart.fnType(dart.void, []),
    shouldAcceptBrowserGesture: dart.fnType(core.bool, [core.String]),
    getOrCreateObject: dart.fnType(src__engine.SemanticsObject, [core.int]),
    updateSemantics: dart.fnType(dart.void, [ui.SemanticsUpdate])
  }));
  dart.setGetterSignature(src__engine.EngineSemanticsOwner, () => ({
    __proto__: dart.getGetters(src__engine.EngineSemanticsOwner.__proto__),
    debugSemanticsTree: core.Map$(core.int, src__engine.SemanticsObject),
    [_isWaitingToEnableSemantics]: core.bool,
    semanticsEnabled: core.bool,
    mode: src__engine.AccessibilityMode,
    gestureMode: src__engine.GestureMode
  }));
  dart.setSetterSignature(src__engine.EngineSemanticsOwner, () => ({
    __proto__: dart.getSetters(src__engine.EngineSemanticsOwner.__proto__),
    semanticsEnabled: core.bool,
    mode: src__engine.AccessibilityMode
  }));
  dart.setFieldSignature(src__engine.EngineSemanticsOwner, () => ({
    __proto__: dart.getFields(src__engine.EngineSemanticsOwner.__proto__),
    [_semanticsTree]: dart.finalFieldType(MapOfint$SemanticsObject()),
    [_attachments]: dart.fieldType(MapOfint$SemanticsObject()),
    [_detachments]: dart.fieldType(ListOfSemanticsObject()),
    [_oneTimePostUpdateCallbacks]: dart.fieldType(ListOfVoidTovoid()),
    [_rootSemanticsElement]: dart.fieldType(html.Element),
    [_now]: dart.fieldType(VoidToDateTime()),
    [_semanticsPlaceholder]: dart.fieldType(html.Element),
    [_semanticsActivationTimer]: dart.fieldType(async.Timer),
    [_semanticsActivationAttempts]: dart.fieldType(core.int),
    [_schedulePlaceholderRemoval]: dart.fieldType(core.bool),
    [_semanticsEnabled]: dart.fieldType(core.bool),
    [_mode]: dart.fieldType(src__engine.AccessibilityMode),
    [_gestureMode]: dart.fieldType(src__engine.GestureMode),
    [_gestureModeClock]: dart.fieldType(src__engine.AlarmClock),
    [_gestureModeListeners]: dart.fieldType(ListOfGestureModeTovoid())
  }));
  dart.defineLazy(src__engine.EngineSemanticsOwner, {
    /*src__engine.EngineSemanticsOwner._instance*/get _instance() {
      return null;
    },
    set _instance(_) {},
    /*src__engine.EngineSemanticsOwner._kMaxSemanticsActivationAttempts*/get _kMaxSemanticsActivationAttempts() {
      return 20;
    },
    /*src__engine.EngineSemanticsOwner.placeholderMessage*/get placeholderMessage() {
      return "Enable accessibility";
    },
    set placeholderMessage(_) {}
  });
  src__engine.longestIncreasingSubsequence = function(list) {
    let len = list[$length];
    let predecessors = JSArrayOfint().of([]);
    let mins = JSArrayOfint().of([0]);
    let longest = 0;
    for (let i = 0; i < dart.notNull(len); i++) {
      let elem = list[$_get](i);
      let lo = 1;
      let hi = longest;
      while (lo <= hi) {
        let mid = ((lo + hi) / 2)[$truncate]();
        if (dart.notNull(list[$_get](mins[$_get](mid))) < dart.notNull(elem)) {
          lo = mid + 1;
        } else {
          hi = mid - 1;
        }
      }
      let expansionIndex = lo;
      predecessors[$add](mins[$_get](expansionIndex - 1));
      if (expansionIndex >= dart.notNull(mins[$length])) {
        mins[$add](i);
      } else {
        mins[$_set](expansionIndex, i);
      }
      if (expansionIndex > longest) {
        longest = expansionIndex;
      }
    }
    let seq = ListOfint().new(longest);
    let k = mins[$_get](longest);
    for (let i = longest - 1; i >= 0; i--) {
      seq[$_set](i, k);
      k = predecessors[$_get](k);
    }
    return seq;
  };
  const _clickListener = dart.privateName(src__engine, "_clickListener");
  const _stopListening = dart.privateName(src__engine, "_stopListening");
  src__engine.Tappable = class Tappable extends src__engine.RoleManager {
    update() {
      let element = this.semanticsObject.element;
      this.semanticsObject.setAriaRole("button", this.semanticsObject.hasFlag(ui.SemanticsFlag.isButton));
      if (dart.test(this.semanticsObject.hasAction(ui.SemanticsAction.tap)) && !dart.test(this.semanticsObject.hasFlag(ui.SemanticsFlag.isTextField))) {
        if (this[_clickListener] == null) {
          this[_clickListener] = dart.fn(_ => {
            if (this.semanticsObject.owner.gestureMode !== src__engine.GestureMode.browserGestures) {
              return;
            }
            ui.window.onSemanticsAction(this.semanticsObject.id, ui.SemanticsAction.tap, null);
          }, EventToNull());
          element[$addEventListener]("click", this[_clickListener]);
        }
      } else {
        this[_stopListening]();
      }
    }
    [_stopListening]() {
      if (this[_clickListener] == null) {
        return;
      }
      this.semanticsObject.element[$removeEventListener]("click", this[_clickListener]);
      this[_clickListener] = null;
    }
    dispose() {
      this[_stopListening]();
      this.semanticsObject.setAriaRole("button", false);
    }
  };
  (src__engine.Tappable.new = function(semanticsObject) {
    this[_clickListener] = null;
    src__engine.Tappable.__proto__.new.call(this, src__engine.Role.tappable, semanticsObject);
  }).prototype = src__engine.Tappable.prototype;
  dart.addTypeTests(src__engine.Tappable);
  dart.setMethodSignature(src__engine.Tappable, () => ({
    __proto__: dart.getMethods(src__engine.Tappable.__proto__),
    update: dart.fnType(dart.void, []),
    [_stopListening]: dart.fnType(dart.void, []),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setFieldSignature(src__engine.Tappable, () => ({
    __proto__: dart.getFields(src__engine.Tappable.__proto__),
    [_clickListener]: dart.fieldType(EventTodynamic())
  }));
  const _setupDomElement = dart.privateName(src__engine, "_setupDomElement");
  const _textFieldElement = dart.privateName(src__engine, "_textFieldElement");
  const _initializeForBlink = dart.privateName(src__engine, "_initializeForBlink");
  const _initializeForWebkit = dart.privateName(src__engine, "_initializeForWebkit");
  src__engine.TextField = class TextField extends src__engine.RoleManager {
    get persistentTextEditingElement() {
      return this[persistentTextEditingElement];
    }
    set persistentTextEditingElement(value) {
      this[persistentTextEditingElement] = value;
    }
    get [_textFieldElement]() {
      return this.persistentTextEditingElement.domElement;
    }
    [_setupDomElement]() {
      let _ = this[_textFieldElement];
      _.spellcheck = false;
      _[$setAttribute]("spellcheck", "false");
      _[$setAttribute]("autocorrect", "off");
      _[$setAttribute]("autocomplete", "off");
      _[$setAttribute]("data-semantics-role", "text-field");
      this[_textFieldElement].style[$position] = "absolute";
      this[_textFieldElement].style[$top] = "0";
      this[_textFieldElement].style[$left] = "0";
      this[_textFieldElement].style[$width] = dart.str(this.semanticsObject.rect.width) + "px";
      this[_textFieldElement].style[$height] = dart.str(this.semanticsObject.rect.height) + "px";
      this.semanticsObject.element[$append](this[_textFieldElement]);
      switch (src__engine.browserEngine) {
        case src__engine.BrowserEngine.blink:
        case src__engine.BrowserEngine.unknown:
        {
          this[_initializeForBlink]();
          break;
        }
        case src__engine.BrowserEngine.webkit:
        {
          this[_initializeForWebkit]();
          break;
        }
      }
    }
    [_initializeForBlink]() {
      this[_textFieldElement][$addEventListener]("focus", dart.fn(event => {
        if (this.semanticsObject.owner.gestureMode !== src__engine.GestureMode.browserGestures) {
          return;
        }
        src__engine.textEditing.useCustomEditableElement(this.persistentTextEditingElement);
        ui.window.onSemanticsAction(this.semanticsObject.id, ui.SemanticsAction.tap, null);
      }, EventToNull()));
    }
    [_initializeForWebkit]() {
      let lastTouchStartOffsetX = null;
      let lastTouchStartOffsetY = null;
      this[_textFieldElement][$addEventListener]("touchstart", dart.fn(event => {
        src__engine.textEditing.useCustomEditableElement(this.persistentTextEditingElement);
        let touchEvent = html.TouchEvent._check(event);
        lastTouchStartOffsetX = touchEvent.changedTouches[$last][$client].x;
        lastTouchStartOffsetY = touchEvent.changedTouches[$last][$client].y;
      }, EventToNull()), true);
      this[_textFieldElement][$addEventListener]("touchend", dart.fn(event => {
        let touchEvent = html.TouchEvent._check(event);
        if (lastTouchStartOffsetX != null) {
          if (!(lastTouchStartOffsetY != null)) dart.assertFailed();
          let offsetX = touchEvent.changedTouches[$last][$client].x;
          let offsetY = touchEvent.changedTouches[$last][$client].y;
          let kTouchSlop = 18.0 * 18.0;
          if (dart.notNull(offsetX) * dart.notNull(offsetX) + dart.notNull(offsetY) * dart.notNull(offsetY) < kTouchSlop) {
            ui.window.onSemanticsAction(this.semanticsObject.id, ui.SemanticsAction.tap, null);
          }
        } else {
          if (!(lastTouchStartOffsetY == null)) dart.assertFailed();
        }
        lastTouchStartOffsetX = null;
        lastTouchStartOffsetY = null;
      }, EventToNull()), true);
    }
    update() {}
    dispose() {
      this[_textFieldElement][$remove]();
      src__engine.textEditing.stopUsingCustomEditableElement();
    }
  };
  (src__engine.TextField.new = function(semanticsObject) {
    this[persistentTextEditingElement] = null;
    src__engine.TextField.__proto__.new.call(this, src__engine.Role.textField, semanticsObject);
    let editableDomElement = dart.test(semanticsObject.hasFlag(ui.SemanticsFlag.isMultiline)) ? html.TextAreaElement.new() : html.InputElement.new();
    this.persistentTextEditingElement = new src__engine.PersistentTextEditingElement.new(editableDomElement, {onDomElementSwap: dart.bind(this, _setupDomElement)});
    this[_setupDomElement]();
  }).prototype = src__engine.TextField.prototype;
  dart.addTypeTests(src__engine.TextField);
  const persistentTextEditingElement = Symbol("TextField.persistentTextEditingElement");
  dart.setMethodSignature(src__engine.TextField, () => ({
    __proto__: dart.getMethods(src__engine.TextField.__proto__),
    [_setupDomElement]: dart.fnType(dart.void, []),
    [_initializeForBlink]: dart.fnType(dart.void, []),
    [_initializeForWebkit]: dart.fnType(dart.void, []),
    update: dart.fnType(dart.void, []),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(src__engine.TextField, () => ({
    __proto__: dart.getGetters(src__engine.TextField.__proto__),
    [_textFieldElement]: html.Element
  }));
  dart.setFieldSignature(src__engine.TextField, () => ({
    __proto__: dart.getFields(src__engine.TextField.__proto__),
    persistentTextEditingElement: dart.fieldType(src__engine.PersistentTextEditingElement)
  }));
  const _is_MessageCodec_default = Symbol('_is_MessageCodec_default');
  src__engine.MessageCodec$ = dart.generic(T => {
    class MessageCodec extends core.Object {}
    (MessageCodec.new = function() {
    }).prototype = MessageCodec.prototype;
    dart.addTypeTests(MessageCodec);
    MessageCodec.prototype[_is_MessageCodec_default] = true;
    return MessageCodec;
  });
  src__engine.MessageCodec = src__engine.MessageCodec$();
  dart.addTypeTests(src__engine.MessageCodec, _is_MessageCodec_default);
  src__engine.MethodCall = class MethodCall extends core.Object {
    get method() {
      return this[method$];
    }
    set method(value) {
      super.method = value;
    }
    get arguments() {
      return this[arguments$];
    }
    set arguments(value) {
      super.arguments = value;
    }
    toString() {
      return dart.str(this[$runtimeType]) + "(" + dart.str(this.method) + ", " + dart.str(this.arguments) + ")";
    }
  };
  (src__engine.MethodCall.new = function(method, arguments$0) {
    if (arguments$0 === void 0) arguments$0 = null;
    this[method$] = method;
    this[arguments$] = arguments$0;
    if (!(method != null)) dart.assertFailed();
  }).prototype = src__engine.MethodCall.prototype;
  dart.addTypeTests(src__engine.MethodCall);
  const method$ = Symbol("MethodCall.method");
  const arguments$ = Symbol("MethodCall.arguments");
  dart.setFieldSignature(src__engine.MethodCall, () => ({
    __proto__: dart.getFields(src__engine.MethodCall.__proto__),
    method: dart.finalFieldType(core.String),
    arguments: dart.finalFieldType(dart.dynamic)
  }));
  dart.defineExtensionMethods(src__engine.MethodCall, ['toString']);
  src__engine.MethodCodec = class MethodCodec extends core.Object {};
  (src__engine.MethodCodec.new = function() {
  }).prototype = src__engine.MethodCodec.prototype;
  dart.addTypeTests(src__engine.MethodCodec);
  src__engine.PlatformException = class PlatformException extends core.Object {
    get code() {
      return this[code$];
    }
    set code(value) {
      super.code = value;
    }
    get message() {
      return this[message$];
    }
    set message(value) {
      super.message = value;
    }
    get details() {
      return this[details$];
    }
    set details(value) {
      super.details = value;
    }
    toString() {
      return "PlatformException(" + dart.str(this.code) + ", " + dart.str(this.message) + ", " + dart.str(this.details) + ")";
    }
  };
  (src__engine.PlatformException.new = function(opts) {
    let code = opts && 'code' in opts ? opts.code : null;
    let message = opts && 'message' in opts ? opts.message : null;
    let details = opts && 'details' in opts ? opts.details : null;
    this[code$] = code;
    this[message$] = message;
    this[details$] = details;
    if (!(code != null)) dart.assertFailed();
  }).prototype = src__engine.PlatformException.prototype;
  dart.addTypeTests(src__engine.PlatformException);
  const code$ = Symbol("PlatformException.code");
  const message$ = Symbol("PlatformException.message");
  const details$ = Symbol("PlatformException.details");
  src__engine.PlatformException[dart.implements] = () => [core.Exception];
  dart.setFieldSignature(src__engine.PlatformException, () => ({
    __proto__: dart.getFields(src__engine.PlatformException.__proto__),
    code: dart.finalFieldType(core.String),
    message: dart.finalFieldType(core.String),
    details: dart.finalFieldType(dart.dynamic)
  }));
  dart.defineExtensionMethods(src__engine.PlatformException, ['toString']);
  src__engine.MissingPluginException = class MissingPluginException extends core.Object {
    get message() {
      return this[message$0];
    }
    set message(value) {
      super.message = value;
    }
    toString() {
      return "MissingPluginException(" + dart.str(this.message) + ")";
    }
  };
  (src__engine.MissingPluginException.new = function(message) {
    if (message === void 0) message = null;
    this[message$0] = message;
  }).prototype = src__engine.MissingPluginException.prototype;
  dart.addTypeTests(src__engine.MissingPluginException);
  const message$0 = Symbol("MissingPluginException.message");
  src__engine.MissingPluginException[dart.implements] = () => [core.Exception];
  dart.setFieldSignature(src__engine.MissingPluginException, () => ({
    __proto__: dart.getFields(src__engine.MissingPluginException.__proto__),
    message: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(src__engine.MissingPluginException, ['toString']);
  src__engine.BinaryCodec = class BinaryCodec extends core.Object {
    decodeMessage(message) {
      return message;
    }
    encodeMessage(message) {
      typed_data.ByteData._check(message);
      return message;
    }
  };
  (src__engine.BinaryCodec.new = function() {
  }).prototype = src__engine.BinaryCodec.prototype;
  dart.addTypeTests(src__engine.BinaryCodec);
  src__engine.BinaryCodec[dart.implements] = () => [MessageCodecOfByteData()];
  dart.setMethodSignature(src__engine.BinaryCodec, () => ({
    __proto__: dart.getMethods(src__engine.BinaryCodec.__proto__),
    decodeMessage: dart.fnType(typed_data.ByteData, [typed_data.ByteData]),
    encodeMessage: dart.fnType(typed_data.ByteData, [core.Object])
  }));
  src__engine.StringCodec = class StringCodec extends core.Object {
    decodeMessage(message) {
      if (message == null) return null;
      return convert.utf8.decoder.convert(message[$buffer][$asUint8List]());
    }
    encodeMessage(message) {
      core.String._check(message);
      if (message == null) return null;
      let encoded = typed_data.Uint8List._check(convert.utf8.encoder.convert(message));
      return encoded[$buffer][$asByteData]();
    }
  };
  (src__engine.StringCodec.new = function() {
  }).prototype = src__engine.StringCodec.prototype;
  dart.addTypeTests(src__engine.StringCodec);
  src__engine.StringCodec[dart.implements] = () => [MessageCodecOfString()];
  dart.setMethodSignature(src__engine.StringCodec, () => ({
    __proto__: dart.getMethods(src__engine.StringCodec.__proto__),
    decodeMessage: dart.fnType(core.String, [typed_data.ByteData]),
    encodeMessage: dart.fnType(typed_data.ByteData, [core.Object])
  }));
  let const$24;
  let const$25;
  src__engine.JSONMessageCodec = class JSONMessageCodec extends core.Object {
    encodeMessage(message) {
      if (message == null) return null;
      return (const$24 || (const$24 = dart.const(new src__engine.StringCodec.new()))).encodeMessage(convert.json.encode(message));
    }
    decodeMessage(message) {
      if (message == null) return message;
      return convert.json.decode((const$25 || (const$25 = dart.const(new src__engine.StringCodec.new()))).decodeMessage(message));
    }
  };
  (src__engine.JSONMessageCodec.new = function() {
  }).prototype = src__engine.JSONMessageCodec.prototype;
  dart.addTypeTests(src__engine.JSONMessageCodec);
  src__engine.JSONMessageCodec[dart.implements] = () => [src__engine.MessageCodec];
  dart.setMethodSignature(src__engine.JSONMessageCodec, () => ({
    __proto__: dart.getMethods(src__engine.JSONMessageCodec.__proto__),
    encodeMessage: dart.fnType(typed_data.ByteData, [dart.dynamic]),
    decodeMessage: dart.fnType(dart.dynamic, [typed_data.ByteData])
  }));
  let const$26;
  let const$27;
  let const$28;
  let const$29;
  let const$30;
  src__engine.JSONMethodCodec = class JSONMethodCodec extends core.Object {
    encodeMethodCall(call) {
      return (const$26 || (const$26 = dart.const(new src__engine.JSONMessageCodec.new()))).encodeMessage(new (IdentityMapOfString$dynamic()).from(["method", call.method, "args", call.arguments]));
    }
    decodeMethodCall(methodCall) {
      let decoded = (const$27 || (const$27 = dart.const(new src__engine.JSONMessageCodec.new()))).decodeMessage(methodCall);
      if (!core.Map.is(decoded)) dart.throw(new core.FormatException.new("Expected method call Map, got " + dart.str(decoded)));
      let method = dart.dindex(decoded, "method");
      let arguments$0 = dart.dindex(decoded, "args");
      if (typeof method == 'string') return new src__engine.MethodCall.new(method, arguments$0);
      dart.throw(new core.FormatException.new("Invalid method call: " + dart.str(decoded)));
    }
    decodeEnvelope(envelope) {
      let decoded = (const$28 || (const$28 = dart.const(new src__engine.JSONMessageCodec.new()))).decodeMessage(envelope);
      if (!core.List.is(decoded)) dart.throw(new core.FormatException.new("Expected envelope List, got " + dart.str(decoded)));
      if (dart.equals(dart.dload(decoded, 'length'), 1)) return dart.dindex(decoded, 0);
      if (dart.equals(dart.dload(decoded, 'length'), 3) && typeof dart.dindex(decoded, 0) == 'string' && (dart.dindex(decoded, 1) == null || typeof dart.dindex(decoded, 1) == 'string')) dart.throw(new src__engine.PlatformException.new({code: core.String._check(dart.dindex(decoded, 0)), message: core.String._check(dart.dindex(decoded, 1)), details: dart.dindex(decoded, 2)}));
      dart.throw(new core.FormatException.new("Invalid envelope: " + dart.str(decoded)));
    }
    encodeSuccessEnvelope(result) {
      return (const$29 || (const$29 = dart.const(new src__engine.JSONMessageCodec.new()))).encodeMessage([result]);
    }
    encodeErrorEnvelope(opts) {
      let code = opts && 'code' in opts ? opts.code : null;
      let message = opts && 'message' in opts ? opts.message : null;
      let details = opts && 'details' in opts ? opts.details : null;
      if (!(code != null)) dart.assertFailed();
      return (const$30 || (const$30 = dart.const(new src__engine.JSONMessageCodec.new()))).encodeMessage([code, message, details]);
    }
  };
  (src__engine.JSONMethodCodec.new = function() {
  }).prototype = src__engine.JSONMethodCodec.prototype;
  dart.addTypeTests(src__engine.JSONMethodCodec);
  src__engine.JSONMethodCodec[dart.implements] = () => [src__engine.MethodCodec];
  dart.setMethodSignature(src__engine.JSONMethodCodec, () => ({
    __proto__: dart.getMethods(src__engine.JSONMethodCodec.__proto__),
    encodeMethodCall: dart.fnType(typed_data.ByteData, [src__engine.MethodCall]),
    decodeMethodCall: dart.fnType(src__engine.MethodCall, [typed_data.ByteData]),
    decodeEnvelope: dart.fnType(dart.dynamic, [typed_data.ByteData]),
    encodeSuccessEnvelope: dart.fnType(typed_data.ByteData, [dart.dynamic]),
    encodeErrorEnvelope: dart.fnType(typed_data.ByteData, [], {code: core.String, message: core.String, details: dart.dynamic})
  }));
  let const$31;
  src__engine.ElevationShadow = class ElevationShadow extends core.Object {
    static applyShadowTransition(style) {
      style[$transition] = "box-shadow .28s cubic-bezier(.4, 0, .2, 1)";
    }
    static applyShadowNone(style) {
      style[$boxShadow] = "none";
    }
    static applyShadowElevation(style, opts) {
      let dp = opts && 'dp' in opts ? opts.dp : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let keyUmbraOpacity = 0.2;
      let keyPenumbraOpacity = 0.14;
      let ambientShadowOpacity = 0.12;
      let rgb = dart.str(color.red) + ", " + dart.str(color.green) + ", " + dart.str(color.blue);
      if (dp === 2) {
        style[$boxShadow] = "0 2px 2px 0 rgba(" + rgb + ", " + dart.str(keyPenumbraOpacity) + "), " + ("0 3px 1px -2px rgba(" + rgb + ", " + dart.str(ambientShadowOpacity) + "), ") + ("0 1px 5px 0 rgba(" + rgb + ", " + dart.str(keyUmbraOpacity) + ")");
      } else if (dp === 3) {
        style[$boxShadow] = "0 3px 4px 0 rgba(" + rgb + ", " + dart.str(keyPenumbraOpacity) + "), " + ("0 3px 3px -2px rgba(" + rgb + ", " + dart.str(ambientShadowOpacity) + "), ") + ("0 1px 8px 0 rgba(" + rgb + ", " + dart.str(keyUmbraOpacity) + ")");
      } else if (dp === 4) {
        style[$boxShadow] = "0 4px 5px 0 rgba(" + rgb + ", " + dart.str(keyPenumbraOpacity) + "), " + ("0 1px 10px 0 rgba(" + rgb + ", " + dart.str(ambientShadowOpacity) + "), ") + ("0 2px 4px -1px rgba(" + rgb + ", " + dart.str(keyUmbraOpacity) + ")");
      } else if (dp === 6) {
        style[$boxShadow] = "0 6px 10px 0 rgba(" + rgb + ", " + dart.str(keyPenumbraOpacity) + "), " + ("0 1px 18px 0 rgba(" + rgb + ", " + dart.str(ambientShadowOpacity) + "), ") + ("0 3px 5px -1px rgba(" + rgb + ", " + dart.str(keyUmbraOpacity) + ")");
      } else if (dp === 8) {
        style[$boxShadow] = "0 8px 10px 1px rgba(" + rgb + ", " + dart.str(keyPenumbraOpacity) + "), " + ("0 3px 14px 2px rgba(" + rgb + ", " + dart.str(ambientShadowOpacity) + "), ") + ("0 5px 5px -3px rgba(" + rgb + ", " + dart.str(keyUmbraOpacity) + ")");
      } else if (dp === 12) {
        style[$boxShadow] = "0 12px 17px 2px rgba(" + rgb + ", " + dart.str(keyPenumbraOpacity) + "), " + ("0 5px 22px 4px rgba(" + rgb + ", " + dart.str(ambientShadowOpacity) + "), ") + ("0 7px 8px -4px rgba(" + rgb + ", " + dart.str(keyUmbraOpacity) + ")");
      } else if (dp === 16) {
        style[$boxShadow] = "0 16px 24px 2px rgba(" + rgb + ", " + dart.str(keyPenumbraOpacity) + "), " + ("0  6px 30px 5px rgba(" + rgb + ", " + dart.str(ambientShadowOpacity) + "), ") + ("0  8px 10px -5px rgba(" + rgb + ", " + dart.str(keyUmbraOpacity) + ")");
      } else {
        style[$boxShadow] = "0 24px 38px 3px rgba(" + rgb + ", " + dart.str(keyPenumbraOpacity) + "), " + ("0  9px 46px 8px rgba(" + rgb + ", " + dart.str(ambientShadowOpacity) + "), ") + ("0  11px 15px -7px rgba(" + rgb + ", " + dart.str(keyUmbraOpacity) + ")");
      }
    }
    static applyShadow(style, elevation, color) {
      src__engine.ElevationShadow.applyShadowTransition(style);
      if (dart.notNull(elevation) <= 0.0) {
        src__engine.ElevationShadow.applyShadowNone(style);
      } else if (dart.notNull(elevation) <= 1.0) {
        src__engine.ElevationShadow.applyShadowElevation(style, {dp: 2, color: color});
      } else if (dart.notNull(elevation) <= 2.0) {
        src__engine.ElevationShadow.applyShadowElevation(style, {dp: 4, color: color});
      } else if (dart.notNull(elevation) <= 3.0) {
        src__engine.ElevationShadow.applyShadowElevation(style, {dp: 6, color: color});
      } else if (dart.notNull(elevation) <= 4.0) {
        src__engine.ElevationShadow.applyShadowElevation(style, {dp: 8, color: color});
      } else if (dart.notNull(elevation) <= 5.0) {
        src__engine.ElevationShadow.applyShadowElevation(style, {dp: 16, color: color});
      } else {
        src__engine.ElevationShadow.applyShadowElevation(style, {dp: 24, color: color});
      }
    }
    static computeCanvasShadows(elevation, color) {
      if (dart.notNull(elevation) <= 0.0) {
        return const$31 || (const$31 = dart.constList([], src__engine.CanvasShadow));
      } else if (dart.notNull(elevation) <= 1.0) {
        return src__engine.ElevationShadow.computeShadowElevation({dp: 2, color: color});
      } else if (dart.notNull(elevation) <= 2.0) {
        return src__engine.ElevationShadow.computeShadowElevation({dp: 4, color: color});
      } else if (dart.notNull(elevation) <= 3.0) {
        return src__engine.ElevationShadow.computeShadowElevation({dp: 6, color: color});
      } else if (dart.notNull(elevation) <= 4.0) {
        return src__engine.ElevationShadow.computeShadowElevation({dp: 8, color: color});
      } else if (dart.notNull(elevation) <= 5.0) {
        return src__engine.ElevationShadow.computeShadowElevation({dp: 16, color: color});
      } else {
        return src__engine.ElevationShadow.computeShadowElevation({dp: 24, color: color});
      }
    }
    static computeShadowRect(r, elevation) {
      if (dart.notNull(elevation) <= 0.0) {
        return r;
      } else if (dart.notNull(elevation) <= 1.0) {
        return new ui.Rect.fromLTRB(dart.notNull(r.left) - 2.5, dart.notNull(r.top) - 1.5, dart.notNull(r.right) + 3, dart.notNull(r.bottom) + 4);
      } else if (dart.notNull(elevation) <= 2.0) {
        return new ui.Rect.fromLTRB(dart.notNull(r.left) - 5, dart.notNull(r.top) - 3, dart.notNull(r.right) + 6, dart.notNull(r.bottom) + 7);
      } else if (dart.notNull(elevation) <= 3.0) {
        return new ui.Rect.fromLTRB(dart.notNull(r.left) - 9, dart.notNull(r.top) - 8, dart.notNull(r.right) + 9, dart.notNull(r.bottom) + 11);
      } else if (dart.notNull(elevation) <= 4.0) {
        return new ui.Rect.fromLTRB(dart.notNull(r.left) - 10, dart.notNull(r.top) - 6, dart.notNull(r.right) + 10, dart.notNull(r.bottom) + 14);
      } else if (dart.notNull(elevation) <= 5.0) {
        return new ui.Rect.fromLTRB(dart.notNull(r.left) - 15, dart.notNull(r.top) - 9, dart.notNull(r.right) + 20, dart.notNull(r.bottom) + 30);
      } else {
        return new ui.Rect.fromLTRB(dart.notNull(r.left) - 23, dart.notNull(r.top) - 14, dart.notNull(r.right) + 23, dart.notNull(r.bottom) + 45);
      }
    }
    static computeShadowElevation(opts) {
      let dp = opts && 'dp' in opts ? opts.dp : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let red = color.red;
      let green = color.green;
      let blue = color.blue;
      let penumbraColor = new ui.Color.fromARGB(36, red, green, blue);
      let ambientShadowColor = new ui.Color.fromARGB(31, red, green, blue);
      let umbraColor = new ui.Color.fromARGB(51, red, green, blue);
      let result = JSArrayOfCanvasShadow().of([]);
      if (dp === 2) {
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 2.0, blur: 1.0, spread: 0.0, color: penumbraColor}));
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 3.0, blur: 0.5, spread: -2.0, color: ambientShadowColor}));
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 1.0, blur: 2.5, spread: 0.0, color: umbraColor}));
      } else if (dp === 3) {
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 1.5, blur: 4.0, spread: 0.0, color: penumbraColor}));
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 3.0, blur: 1.5, spread: -2.0, color: ambientShadowColor}));
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 1.0, blur: 4.0, spread: 0.0, color: umbraColor}));
      } else if (dp === 4) {
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 4.0, blur: 2.5, spread: 0.0, color: penumbraColor}));
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 1.0, blur: 5.0, spread: 0.0, color: ambientShadowColor}));
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 2.0, blur: 2.0, spread: -1.0, color: umbraColor}));
      } else if (dp === 6) {
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 6.0, blur: 5.0, spread: 0.0, color: penumbraColor}));
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 1.0, blur: 9.0, spread: 0.0, color: ambientShadowColor}));
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 3.0, blur: 2.5, spread: -1.0, color: umbraColor}));
      } else if (dp === 8) {
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 4.0, blur: 10.0, spread: 1.0, color: penumbraColor}));
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 3.0, blur: 7.0, spread: 2.0, color: ambientShadowColor}));
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 5.0, blur: 2.5, spread: -3.0, color: umbraColor}));
      } else if (dp === 12) {
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 12.0, blur: 8.5, spread: 2.0, color: penumbraColor}));
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 5.0, blur: 11.0, spread: 4.0, color: ambientShadowColor}));
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 7.0, blur: 4.0, spread: -4.0, color: umbraColor}));
      } else if (dp === 16) {
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 16.0, blur: 12.0, spread: 2.0, color: penumbraColor}));
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 6.0, blur: 15.0, spread: 5.0, color: ambientShadowColor}));
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 0.0, blur: 5.0, spread: -5.0, color: umbraColor}));
      } else {
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 24.0, blur: 18.0, spread: 3.0, color: penumbraColor}));
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 9.0, blur: 23.0, spread: 8.0, color: ambientShadowColor}));
        result[$add](new src__engine.CanvasShadow.new({offsetX: 0.0, offsetY: 11.0, blur: 7.5, spread: -7.0, color: umbraColor}));
      }
      return result;
    }
  };
  (src__engine.ElevationShadow.new = function() {
  }).prototype = src__engine.ElevationShadow.prototype;
  dart.addTypeTests(src__engine.ElevationShadow);
  src__engine.CanvasShadow = class CanvasShadow extends core.Object {
    get offsetX() {
      return this[offsetX$];
    }
    set offsetX(value) {
      super.offsetX = value;
    }
    get offsetY() {
      return this[offsetY$];
    }
    set offsetY(value) {
      super.offsetY = value;
    }
    get blur() {
      return this[blur$];
    }
    set blur(value) {
      super.blur = value;
    }
    get spread() {
      return this[spread$];
    }
    set spread(value) {
      super.spread = value;
    }
    get color() {
      return this[color$3];
    }
    set color(value) {
      super.color = value;
    }
  };
  (src__engine.CanvasShadow.new = function(opts) {
    let offsetX = opts && 'offsetX' in opts ? opts.offsetX : null;
    let offsetY = opts && 'offsetY' in opts ? opts.offsetY : null;
    let blur = opts && 'blur' in opts ? opts.blur : null;
    let spread = opts && 'spread' in opts ? opts.spread : null;
    let color = opts && 'color' in opts ? opts.color : null;
    this[offsetX$] = offsetX;
    this[offsetY$] = offsetY;
    this[blur$] = blur;
    this[spread$] = spread;
    this[color$3] = color;
  }).prototype = src__engine.CanvasShadow.prototype;
  dart.addTypeTests(src__engine.CanvasShadow);
  const offsetX$ = Symbol("CanvasShadow.offsetX");
  const offsetY$ = Symbol("CanvasShadow.offsetY");
  const blur$ = Symbol("CanvasShadow.blur");
  const spread$ = Symbol("CanvasShadow.spread");
  const color$3 = Symbol("CanvasShadow.color");
  dart.setFieldSignature(src__engine.CanvasShadow, () => ({
    __proto__: dart.getFields(src__engine.CanvasShadow.__proto__),
    offsetX: dart.finalFieldType(core.double),
    offsetY: dart.finalFieldType(core.double),
    blur: dart.finalFieldType(core.double),
    spread: dart.finalFieldType(core.double),
    color: dart.finalFieldType(ui.Color)
  }));
  dart.defineLazy(src__engine, {
    /*src__engine._testFontFamily*/get _testFontFamily() {
      return "Ahem";
    },
    /*src__engine._testFontUrl*/get _testFontUrl() {
      return "packages/flutter_web/assets/Ahem.ttf";
    },
    /*src__engine._robotoFontUrl*/get _robotoFontUrl() {
      return "packages/flutter_web_ui/assets/Roboto-Regular.ttf";
    }
  });
  const _assetFontManager = dart.privateName(src__engine, "_assetFontManager");
  const _testFontManager = dart.privateName(src__engine, "_testFontManager");
  let const$32;
  src__engine.FontCollection = class FontCollection extends core.Object {
    registerFonts(assetManager) {
      return async.async(dart.void, (function* registerFonts() {
        let byteData = null;
        try {
          byteData = (yield assetManager.load("FontManifest.json"));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (src__engine.AssetManagerException.is(e)) {
            if (e.httpStatus === 404) {
              html.window[$console].warn("Font manifest does not exist at `" + dart.str(e.url) + "` – ignoring.");
              return;
            } else {
              dart.rethrow(e$);
            }
          } else
            throw e$;
        }
        if (byteData == null) {
          dart.throw(new core.AssertionError.new("There was a problem trying to load FontManifest.json"));
        }
        let fontManifest = core.List._check(convert.json.decode(convert.utf8.decode(byteData[$buffer][$asUint8List]())));
        if (fontManifest == null) {
          dart.throw(new core.AssertionError.new("There was a problem trying to load FontManifest.json"));
        }
        if (dart.test(src__engine.supportsFontLoadingApi)) {
          this[_assetFontManager] = src__engine._FontManager.new();
        } else {
          this[_assetFontManager] = new src__engine._PolyfillFontManager.new();
        }
        if (src__engine.browserEngine !== src__engine.BrowserEngine.blink) {
          this[_assetFontManager].registerAsset("Roboto", "url(" + "packages/flutter_web_ui/assets/Roboto-Regular.ttf" + ")", new (IdentityMapOfString$String()).new());
        }
        for (let fontFamily of fontManifest) {
          MapOfString$dynamic()._check(fontFamily);
          let family = core.String._check(fontFamily[$_get]("family"));
          let fontAssets = core.List._check(fontFamily[$_get]("fonts"));
          for (let fontAsset of fontAssets) {
            MapOfString$dynamic()._check(fontAsset);
            let asset = core.String._check(fontAsset[$_get]("asset"));
            let descriptors = new (IdentityMapOfString$String()).new();
            for (let descriptor of fontAsset[$keys]) {
              if (descriptor !== "asset") {
                descriptors[$_set](descriptor, dart.str(fontAsset[$_get](descriptor)));
              }
            }
            this[_assetFontManager].registerAsset(family, "url(" + dart.str(assetManager.getAssetUrl(asset)) + ")", descriptors);
          }
        }
      }).bind(this));
    }
    debugRegisterTestFonts() {
      this[_testFontManager] = src__engine._FontManager.new();
      this[_testFontManager].registerAsset("Ahem", "url(" + "packages/flutter_web/assets/Ahem.ttf" + ")", const$32 || (const$32 = dart.constMap(core.String, core.String, [])));
    }
    ensureFontsLoaded() {
      return async.async(dart.void, (function* ensureFontsLoaded() {
        yield (() => {
          let t = this[_assetFontManager];
          return t == null ? null : t.ensureFontsLoaded();
        })();
        yield (() => {
          let t = this[_testFontManager];
          return t == null ? null : t.ensureFontsLoaded();
        })();
      }).bind(this));
    }
    clear() {
      this[_assetFontManager] = null;
      this[_testFontManager] = null;
      if (dart.test(src__engine.supportsFontLoadingApi)) {
        html.document.fonts.clear();
      }
    }
  };
  (src__engine.FontCollection.new = function() {
    this[_assetFontManager] = null;
    this[_testFontManager] = null;
  }).prototype = src__engine.FontCollection.prototype;
  dart.addTypeTests(src__engine.FontCollection);
  dart.setMethodSignature(src__engine.FontCollection, () => ({
    __proto__: dart.getMethods(src__engine.FontCollection.__proto__),
    registerFonts: dart.fnType(async.Future$(dart.void), [src__engine.AssetManager]),
    debugRegisterTestFonts: dart.fnType(dart.void, []),
    ensureFontsLoaded: dart.fnType(async.Future$(dart.void), []),
    clear: dart.fnType(dart.void, [])
  }));
  dart.setFieldSignature(src__engine.FontCollection, () => ({
    __proto__: dart.getFields(src__engine.FontCollection.__proto__),
    [_assetFontManager]: dart.fieldType(src__engine._FontManager),
    [_testFontManager]: dart.fieldType(src__engine._FontManager)
  }));
  const _fontLoadingFutures = dart.privateName(src__engine, "_fontLoadingFutures");
  src__engine._FontManager = class _FontManager extends core.Object {
    static new() {
      if (dart.test(src__engine.supportsFontLoadingApi)) {
        return new src__engine._FontManager.__();
      } else {
        return new src__engine._PolyfillFontManager.new();
      }
    }
    registerAsset(family, asset, descriptors) {
      let fontFace = html.FontFace.new(family, asset, descriptors);
      this[_fontLoadingFutures][$add](fontFace[$load]().then(dart.void, dart.fn(_ => html.document.fonts.add(fontFace), FontFaceToFontFaceSet()), {onError: dart.fn(e => {
          html.window[$console].warn("Error while trying to load font family \"" + dart.str(family) + "\":\n" + dart.str(e));
          return null;
        }, dynamicToNull())}));
    }
    ensureFontsLoaded() {
      return async.Future.wait(dart.void, this[_fontLoadingFutures]);
    }
  };
  (src__engine._FontManager.__ = function() {
    this[_fontLoadingFutures] = JSArrayOfFutureOfvoid().of([]);
  }).prototype = src__engine._FontManager.prototype;
  dart.addTypeTests(src__engine._FontManager);
  dart.setMethodSignature(src__engine._FontManager, () => ({
    __proto__: dart.getMethods(src__engine._FontManager.__proto__),
    registerAsset: dart.fnType(dart.void, [core.String, core.String, core.Map$(core.String, core.String)]),
    ensureFontsLoaded: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setFieldSignature(src__engine._FontManager, () => ({
    __proto__: dart.getFields(src__engine._FontManager.__proto__),
    [_fontLoadingFutures]: dart.finalFieldType(ListOfFutureOfvoid())
  }));
  src__engine._PolyfillFontManager = class _PolyfillFontManager extends src__engine._FontManager {
    registerAsset(family, asset, descriptors) {
      let paragraph = html.ParagraphElement.new();
      paragraph.style[$position] = "absolute";
      paragraph.style[$visibility] = "hidden";
      paragraph.style[$fontSize] = "72px";
      paragraph.style[$fontFamily] = "sans-serif";
      if (descriptors[$_get]("style") != null) {
        paragraph.style[$fontStyle] = descriptors[$_get]("style");
      }
      if (descriptors[$_get]("weight") != null) {
        paragraph.style[$fontWeight] = descriptors[$_get]("weight");
      }
      paragraph[$text] = "giItT1WQy@!-/#";
      html.document.body[$append](paragraph);
      let sansSerifWidth = paragraph[$offsetWidth];
      paragraph.style[$fontFamily] = dart.str(family) + ", sans-serif";
      let completer = CompleterOfvoid().new();
      let _fontLoadStart = null;
      function _watchWidth() {
        if (paragraph[$offsetWidth] != sansSerifWidth) {
          paragraph[$remove]();
          completer.complete();
        } else {
          if (dart.test(new core.DateTime.now().difference(_fontLoadStart)['>'](src__engine._PolyfillFontManager._fontLoadTimeout))) {
            completer.completeError(core.Exception.new("Timed out trying to load font: " + dart.str(family)));
          } else {
            async.Timer.new(src__engine._PolyfillFontManager._fontLoadRetryDuration, _watchWidth);
          }
        }
      }
      dart.fn(_watchWidth, VoidTovoid());
      let fontStyleMap = new (IdentityMapOfString$String()).new();
      fontStyleMap[$_set]("font-family", "'" + dart.str(family) + "'");
      fontStyleMap[$_set]("src", asset);
      if (descriptors[$_get]("style") != null) {
        fontStyleMap[$_set]("font-style", descriptors[$_get]("style"));
      }
      if (descriptors[$_get]("weight") != null) {
        fontStyleMap[$_set]("font-weight", descriptors[$_get]("weight"));
      }
      let fontFaceDeclaration = IterableOfString()._check(fontStyleMap[$keys][$map](core.String, dart.fn(name => dart.str(name) + ": " + dart.str(fontStyleMap[$_get](name)) + ";", StringToString())))[$join](" ");
      let fontLoadStyle = html.StyleElement.new();
      fontLoadStyle.type = "text/css";
      fontLoadStyle[$innerHtml] = "@font-face { " + dart.str(fontFaceDeclaration) + " }";
      html.document[$head][$append](fontLoadStyle);
      if (family[$toLowerCase]()[$contains]("icon")) {
        paragraph[$remove]();
        return;
      }
      _fontLoadStart = new core.DateTime.now();
      _watchWidth();
      this[_fontLoadingFutures][$add](completer.future);
    }
  };
  (src__engine._PolyfillFontManager.new = function() {
    src__engine._PolyfillFontManager.__proto__.__.call(this);
  }).prototype = src__engine._PolyfillFontManager.prototype;
  dart.addTypeTests(src__engine._PolyfillFontManager);
  dart.defineLazy(src__engine._PolyfillFontManager, {
    /*src__engine._PolyfillFontManager._testString*/get _testString() {
      return "giItT1WQy@!-/#";
    },
    /*src__engine._PolyfillFontManager._fontLoadTimeout*/get _fontLoadTimeout() {
      return dart.const(new core.Duration.new({seconds: 2}));
    },
    /*src__engine._PolyfillFontManager._fontLoadRetryDuration*/get _fontLoadRetryDuration() {
      return dart.const(new core.Duration.new({milliseconds: 50}));
    }
  });
  dart.defineLazy(src__engine, {
    /*src__engine.supportsFontLoadingApi*/get supportsFontLoadingApi() {
      return html.document.fonts != null;
    }
  });
  const _rulerHost = dart.privateName(src__engine, "_rulerHost");
  const _rulers = dart.privateName(src__engine, "_rulers");
  const _rulerCacheCleanupScheduled = dart.privateName(src__engine, "_rulerCacheCleanupScheduled");
  const _scheduleRulerCacheCleanup = dart.privateName(src__engine, "_scheduleRulerCacheCleanup");
  const _findOrCreateRuler = dart.privateName(src__engine, "_findOrCreateRuler");
  const _hitCount = dart.privateName(src__engine, "_hitCount");
  const _measureSingleLineParagraph = dart.privateName(src__engine, "_measureSingleLineParagraph");
  const _measureMultiLineParagraph = dart.privateName(src__engine, "_measureMultiLineParagraph");
  src__engine.TextMeasurementService = class TextMeasurementService extends core.Object {
    static initialize(opts) {
      let rulerCacheCapacity = opts && 'rulerCacheCapacity' in opts ? opts.rulerCacheCapacity : null;
      src__engine.TextMeasurementService._instance = new src__engine.TextMeasurementService.__({rulerCacheCapacity: rulerCacheCapacity});
      return src__engine.TextMeasurementService._instance;
    }
    static get instance() {
      return src__engine.TextMeasurementService._instance;
    }
    get rulerCacheCapacity() {
      return this[rulerCacheCapacity$];
    }
    set rulerCacheCapacity(value) {
      super.rulerCacheCapacity = value;
    }
    get canvasContext() {
      return this[canvasContext];
    }
    set canvasContext(value) {
      super.canvasContext = value;
    }
    get rulers() {
      return this[_rulers];
    }
    [_scheduleRulerCacheCleanup]() {
      if (!dart.test(this[_rulerCacheCleanupScheduled])) {
        this[_rulerCacheCleanupScheduled] = true;
        async.scheduleMicrotask(dart.fn(() => {
          this[_rulerCacheCleanupScheduled] = false;
          this.cleanUpRulerCache();
        }, VoidToNull()));
      }
    }
    cleanUpRulerCache() {
      if (dart.notNull(this[_rulers][$length]) > dart.notNull(this.rulerCacheCapacity)) {
        let sortedByUsage = this[_rulers][$values][$toList]();
        sortedByUsage[$sort](dart.fn((a, b) => dart.notNull(b.hitCount) - dart.notNull(a.hitCount), ParagraphRulerAndParagraphRulerToint()));
        this[_rulers] = new (LinkedMapOfParagraphGeometricStyle$ParagraphRuler()).new();
        for (let i = 0; i < dart.notNull(sortedByUsage[$length]); i++) {
          let ruler = sortedByUsage[$_get](i);
          ruler.resetHitCount();
          if (i < dart.notNull(this.rulerCacheCapacity)) {
            this[_rulers][$_set](ruler.style, ruler);
          } else {
            ruler.dispose();
          }
        }
      }
    }
    addHostElement(element) {
      this[_rulerHost][$append](element);
    }
    measure(paragraph, constraints) {
      let style = paragraph.webOnlyGetParagraphGeometricStyle();
      let ruler = this[_findOrCreateRuler](style);
      if (dart.test(src__engine.assertionsEnabled)) {
        if (paragraph.webOnlyGetPlainText() == null) {
          src__engine.domRenderer.debugRichTextLayout();
        } else {
          src__engine.domRenderer.debugPlainTextLayout();
        }
      }
      let cacheEntry = ruler.cacheLookup(paragraph, constraints);
      if (cacheEntry != null) {
        cacheEntry.applyToParagraph(paragraph);
        ruler[_hitCount] = dart.notNull(ruler[_hitCount]) + 1;
        return;
      }
      ruler.willMeasure(paragraph);
      ruler.measureAll(constraints);
      let plainText = paragraph.webOnlyGetPlainText();
      let l = plainText == null ? null : plainText[$contains]("\n");
      let hasNewline = l != null ? l : false;
      if (!dart.test(hasNewline) && dart.notNull(ruler.singleLineDimensions.width) <= dart.notNull(constraints.width)) {
        this[_measureSingleLineParagraph](ruler, paragraph, constraints);
      } else {
        if (!(dart.test(hasNewline) || constraints.width !== core.double.infinity)) dart.assertFailed();
        this[_measureMultiLineParagraph](ruler, paragraph, constraints);
      }
      ruler.didMeasure();
    }
    measureSingleLineText(paragraph) {
      let style = paragraph.webOnlyGetParagraphGeometricStyle();
      let ruler = this[_findOrCreateRuler](style);
      ruler.willMeasure(paragraph);
      ruler.measureAsSingleLine();
      let dimensions = ruler.singleLineDimensions;
      ruler.didMeasure();
      return dimensions;
    }
    measureSingleLineWidth(text, style) {
      if (!(style.letterSpacing == null && style.wordSpacing == null && style.decoration == null)) dart.assertFailed("Cannot measure text using canvas if it uses " + ("letter spacing, word spacing or decoration: " + dart.str(style)));
      this.canvasContext.font = style.cssFontString;
      return this.canvasContext.measureText(text).width;
    }
    measureBoxesForRange(paragraph, constraints, opts) {
      let start = opts && 'start' in opts ? opts.start : null;
      let end = opts && 'end' in opts ? opts.end : null;
      let alignOffset = opts && 'alignOffset' in opts ? opts.alignOffset : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let style = paragraph.webOnlyGetParagraphGeometricStyle();
      let ruler = this[_findOrCreateRuler](style);
      return ruler.measureBoxesForRange(paragraph.webOnlyGetPlainText(), constraints, {start: start, end: end, alignOffset: alignOffset, textDirection: textDirection});
    }
    [_findOrCreateRuler](style) {
      let ruler = this[_rulers][$_get](style);
      if (ruler != null) {
        if (dart.test(src__engine.assertionsEnabled)) {
          src__engine.domRenderer.debugRulerCacheHit();
        }
        return ruler;
      }
      if (dart.test(src__engine.assertionsEnabled)) {
        src__engine.domRenderer.debugRulerCacheMiss();
      }
      this[_scheduleRulerCacheCleanup]();
      return this[_rulers][$_set](style, new src__engine.ParagraphRuler.new(style));
    }
    [_measureSingleLineParagraph](ruler, paragraph, constraints) {
      let width = constraints.width;
      let minIntrinsicWidth = ruler.minIntrinsicDimensions.width;
      let maxIntrinsicWidth = ruler.singleLineDimensions.width;
      let alphabeticBaseline = ruler.alphabeticBaseline;
      let height = ruler.singleLineDimensions.height;
      maxIntrinsicWidth = src__engine.TextMeasurementService._applySubPixelRoundingHack(minIntrinsicWidth, maxIntrinsicWidth);
      let ideographicBaseline = dart.notNull(alphabeticBaseline) * 1.1662499904632568;
      let cacheEntry = new src__engine.RulerCacheEntry.new(constraints.width, {isSingleLine: true, width: width, height: height, lineHeight: height, minIntrinsicWidth: minIntrinsicWidth, maxIntrinsicWidth: maxIntrinsicWidth, alphabeticBaseline: alphabeticBaseline, ideographicBaseline: ideographicBaseline});
      ruler.cacheMeasurement(paragraph, constraints, cacheEntry);
      cacheEntry.applyToParagraph(paragraph);
    }
    [_measureMultiLineParagraph](ruler, paragraph, constraints) {
      let width = constraints.width;
      let minIntrinsicWidth = ruler.minIntrinsicDimensions.width;
      let maxIntrinsicWidth = ruler.singleLineDimensions.width;
      let alphabeticBaseline = ruler.alphabeticBaseline;
      let height = ruler.constrainedDimensions.height;
      let lineHeight = height;
      if (paragraph.webOnlyGetParagraphGeometricStyle().maxLines != null) {
        lineHeight = ruler.lineHeightDimensions.height;
      }
      maxIntrinsicWidth = src__engine.TextMeasurementService._applySubPixelRoundingHack(minIntrinsicWidth, maxIntrinsicWidth);
      if (!(dart.notNull(minIntrinsicWidth) <= dart.notNull(maxIntrinsicWidth))) dart.assertFailed();
      let ideographicBaseline = dart.notNull(alphabeticBaseline) * 1.1662499904632568;
      let cacheEntry = new src__engine.RulerCacheEntry.new(constraints.width, {isSingleLine: false, width: width, height: height, lineHeight: lineHeight, minIntrinsicWidth: minIntrinsicWidth, maxIntrinsicWidth: maxIntrinsicWidth, alphabeticBaseline: alphabeticBaseline, ideographicBaseline: ideographicBaseline});
      ruler.cacheMeasurement(paragraph, constraints, cacheEntry);
      cacheEntry.applyToParagraph(paragraph);
    }
    static _applySubPixelRoundingHack(minIntrinsicWidth, maxIntrinsicWidth) {
      if (dart.notNull(minIntrinsicWidth) <= dart.notNull(maxIntrinsicWidth)) {
        return maxIntrinsicWidth;
      }
      if (dart.notNull(minIntrinsicWidth) - dart.notNull(maxIntrinsicWidth) < 2.0) {
        return minIntrinsicWidth;
      }
      dart.throw(core.Exception.new("minIntrinsicWidth (" + dart.str(minIntrinsicWidth) + ") is greater than " + ("maxIntrinsicWidth (" + dart.str(maxIntrinsicWidth) + ").")));
    }
  };
  (src__engine.TextMeasurementService.__ = function(opts) {
    let rulerCacheCapacity = opts && 'rulerCacheCapacity' in opts ? opts.rulerCacheCapacity : null;
    this[canvasContext] = html.CanvasElement.new()[$context2D];
    this[_rulerHost] = html.Element.tag("flt-ruler-host");
    this[_rulers] = new (LinkedMapOfParagraphGeometricStyle$ParagraphRuler()).new();
    this[_rulerCacheCleanupScheduled] = false;
    this[rulerCacheCapacity$] = rulerCacheCapacity;
    this[_rulerHost].style[$position] = "fixed";
    this[_rulerHost].style[$visibility] = "hidden";
    this[_rulerHost].style[$overflow] = "hidden";
    this[_rulerHost].style[$top] = "0";
    this[_rulerHost].style[$left] = "0";
    this[_rulerHost].style[$width] = "0";
    this[_rulerHost].style[$height] = "0";
    html.document.body[$append](this[_rulerHost]);
    src__engine.registerHotRestartListener(dart.fn(() => {
      this[_rulerHost] == null ? null : this[_rulerHost][$remove]();
    }, VoidToNull()));
  }).prototype = src__engine.TextMeasurementService.prototype;
  dart.addTypeTests(src__engine.TextMeasurementService);
  const rulerCacheCapacity$ = Symbol("TextMeasurementService.rulerCacheCapacity");
  const canvasContext = Symbol("TextMeasurementService.canvasContext");
  dart.setMethodSignature(src__engine.TextMeasurementService, () => ({
    __proto__: dart.getMethods(src__engine.TextMeasurementService.__proto__),
    [_scheduleRulerCacheCleanup]: dart.fnType(dart.void, []),
    cleanUpRulerCache: dart.fnType(dart.void, []),
    addHostElement: dart.fnType(dart.void, [html.DivElement]),
    measure: dart.fnType(dart.void, [ui.Paragraph, ui.ParagraphConstraints]),
    measureSingleLineText: dart.fnType(src__engine.TextDimensions, [ui.Paragraph]),
    measureSingleLineWidth: dart.fnType(core.double, [core.String, src__engine.ParagraphGeometricStyle]),
    measureBoxesForRange: dart.fnType(core.List$(ui.TextBox), [ui.Paragraph, ui.ParagraphConstraints], {start: core.int, end: core.int, alignOffset: core.double, textDirection: ui.TextDirection}),
    [_findOrCreateRuler]: dart.fnType(src__engine.ParagraphRuler, [src__engine.ParagraphGeometricStyle]),
    [_measureSingleLineParagraph]: dart.fnType(dart.void, [src__engine.ParagraphRuler, ui.Paragraph, ui.ParagraphConstraints]),
    [_measureMultiLineParagraph]: dart.fnType(dart.void, [src__engine.ParagraphRuler, ui.Paragraph, ui.ParagraphConstraints])
  }));
  dart.setGetterSignature(src__engine.TextMeasurementService, () => ({
    __proto__: dart.getGetters(src__engine.TextMeasurementService.__proto__),
    rulers: core.Map$(src__engine.ParagraphGeometricStyle, src__engine.ParagraphRuler)
  }));
  dart.setFieldSignature(src__engine.TextMeasurementService, () => ({
    __proto__: dart.getFields(src__engine.TextMeasurementService.__proto__),
    rulerCacheCapacity: dart.finalFieldType(core.int),
    canvasContext: dart.finalFieldType(html.CanvasRenderingContext2D),
    [_rulerHost]: dart.finalFieldType(html.Element),
    [_rulers]: dart.fieldType(MapOfParagraphGeometricStyle$ParagraphRuler()),
    [_rulerCacheCleanupScheduled]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(src__engine.TextMeasurementService, {
    /*src__engine.TextMeasurementService._instance*/get _instance() {
      return null;
    },
    set _instance(_) {},
    /*src__engine.TextMeasurementService._baselineRatioHack*/get _baselineRatioHack() {
      return 1.1662499904632568;
    }
  });
  const _cachedHashCode = dart.privateName(src__engine, "_cachedHashCode");
  const _cssFontString = dart.privateName(src__engine, "_cssFontString");
  const _buildCssFontString = dart.privateName(src__engine, "_buildCssFontString");
  src__engine.ParagraphGeometricStyle = class ParagraphGeometricStyle extends core.Object {
    get fontWeight() {
      return this[fontWeight$];
    }
    set fontWeight(value) {
      super.fontWeight = value;
    }
    get fontStyle() {
      return this[fontStyle$];
    }
    set fontStyle(value) {
      super.fontStyle = value;
    }
    get fontFamily() {
      return this[fontFamily$];
    }
    set fontFamily(value) {
      super.fontFamily = value;
    }
    get fontSize() {
      return this[fontSize$];
    }
    set fontSize(value) {
      super.fontSize = value;
    }
    get lineHeight() {
      return this[lineHeight$];
    }
    set lineHeight(value) {
      super.lineHeight = value;
    }
    get maxLines() {
      return this[maxLines$];
    }
    set maxLines(value) {
      super.maxLines = value;
    }
    get letterSpacing() {
      return this[letterSpacing$];
    }
    set letterSpacing(value) {
      super.letterSpacing = value;
    }
    get wordSpacing() {
      return this[wordSpacing$];
    }
    set wordSpacing(value) {
      super.wordSpacing = value;
    }
    get decoration() {
      return this[decoration$];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get ellipsis() {
      return this[ellipsis$];
    }
    set ellipsis(value) {
      super.ellipsis = value;
    }
    get effectiveFontFamily() {
      if (dart.test(src__engine.assertionsEnabled)) {
        if (dart.test(src__engine.domRenderer.debugIsInWidgetTest)) {
          return "Ahem";
        }
      }
      if (this.fontFamily == null || this.fontFamily[$isEmpty]) {
        return src__engine.DomRenderer.defaultFontFamily;
      }
      return this.fontFamily;
    }
    get cssFontString() {
      if (this[_cssFontString] == null) {
        this[_cssFontString] = this[_buildCssFontString]();
      }
      return this[_cssFontString];
    }
    [_buildCssFontString]() {
      let result = new core.StringBuffer.new();
      if (this.fontStyle != null) {
        result.write(this.fontStyle === ui.FontStyle.normal ? "normal" : "italic");
      } else {
        result.write(src__engine.DomRenderer.defaultFontStyle);
      }
      result.write(" ");
      if (this.fontWeight != null) {
        result.write(ui.webOnlyFontWeightToCss(this.fontWeight));
      } else {
        result.write(src__engine.DomRenderer.defaultFontWeight);
      }
      result.write(" ");
      if (this.fontSize != null) {
        result.write(this.fontSize[$floor]());
        result.write("px");
      } else {
        result.write(src__engine.DomRenderer.defaultFontSize);
      }
      result.write(" ");
      result.write(this.effectiveFontFamily);
      return result.toString();
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      let typedOther = src__engine.ParagraphGeometricStyle._check(other);
      return dart.equals(this.fontWeight, typedOther.fontWeight) && this.fontStyle == typedOther.fontStyle && this.fontFamily == typedOther.fontFamily && this.fontSize == typedOther.fontSize && this.lineHeight == typedOther.lineHeight && this.maxLines == typedOther.maxLines && this.letterSpacing == typedOther.letterSpacing && this.wordSpacing == typedOther.wordSpacing && this.decoration == typedOther.decoration && this.ellipsis == typedOther.ellipsis;
    }
    get hashCode() {
      let t = this[_cachedHashCode];
      return t == null ? this[_cachedHashCode] = ui.hashValues(this.fontWeight, this.fontStyle, this.fontFamily, this.fontSize, this.lineHeight, this.maxLines, this.letterSpacing, this.wordSpacing, this.decoration, this.ellipsis) : t;
    }
    toString() {
      if (dart.test(src__engine.assertionsEnabled)) {
        return dart.str(this[$runtimeType]) + "(fontWeight: " + dart.str(this.fontWeight) + ", fontStyle: " + dart.str(this.fontStyle) + "," + (" fontFamily: " + dart.str(this.fontFamily) + ", fontSize: " + dart.str(this.fontSize) + ",") + (" lineHeight: " + dart.str(this.lineHeight) + ",") + (" maxLines: " + dart.str(this.maxLines) + ",") + (" letterSpacing: " + dart.str(this.letterSpacing) + ",") + (" wordSpacing: " + dart.str(this.wordSpacing) + ",") + (" decoration: " + dart.str(this.decoration) + ",") + (" ellipsis: " + dart.str(this.ellipsis) + ",") + ")";
      } else {
        return super.toString();
      }
    }
  };
  (src__engine.ParagraphGeometricStyle.new = function(opts) {
    let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
    let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
    let fontFamily = opts && 'fontFamily' in opts ? opts.fontFamily : null;
    let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
    let lineHeight = opts && 'lineHeight' in opts ? opts.lineHeight : null;
    let maxLines = opts && 'maxLines' in opts ? opts.maxLines : null;
    let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : null;
    let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let ellipsis = opts && 'ellipsis' in opts ? opts.ellipsis : null;
    this[_cachedHashCode] = null;
    this[_cssFontString] = null;
    this[fontWeight$] = fontWeight;
    this[fontStyle$] = fontStyle;
    this[fontFamily$] = fontFamily;
    this[fontSize$] = fontSize;
    this[lineHeight$] = lineHeight;
    this[maxLines$] = maxLines;
    this[letterSpacing$] = letterSpacing;
    this[wordSpacing$] = wordSpacing;
    this[decoration$] = decoration;
    this[ellipsis$] = ellipsis;
  }).prototype = src__engine.ParagraphGeometricStyle.prototype;
  dart.addTypeTests(src__engine.ParagraphGeometricStyle);
  const fontWeight$ = Symbol("ParagraphGeometricStyle.fontWeight");
  const fontStyle$ = Symbol("ParagraphGeometricStyle.fontStyle");
  const fontFamily$ = Symbol("ParagraphGeometricStyle.fontFamily");
  const fontSize$ = Symbol("ParagraphGeometricStyle.fontSize");
  const lineHeight$ = Symbol("ParagraphGeometricStyle.lineHeight");
  const maxLines$ = Symbol("ParagraphGeometricStyle.maxLines");
  const letterSpacing$ = Symbol("ParagraphGeometricStyle.letterSpacing");
  const wordSpacing$ = Symbol("ParagraphGeometricStyle.wordSpacing");
  const decoration$ = Symbol("ParagraphGeometricStyle.decoration");
  const ellipsis$ = Symbol("ParagraphGeometricStyle.ellipsis");
  dart.setMethodSignature(src__engine.ParagraphGeometricStyle, () => ({
    __proto__: dart.getMethods(src__engine.ParagraphGeometricStyle.__proto__),
    [_buildCssFontString]: dart.fnType(core.String, [])
  }));
  dart.setGetterSignature(src__engine.ParagraphGeometricStyle, () => ({
    __proto__: dart.getGetters(src__engine.ParagraphGeometricStyle.__proto__),
    effectiveFontFamily: core.String,
    cssFontString: core.String
  }));
  dart.setFieldSignature(src__engine.ParagraphGeometricStyle, () => ({
    __proto__: dart.getFields(src__engine.ParagraphGeometricStyle.__proto__),
    fontWeight: dart.finalFieldType(ui.FontWeight),
    fontStyle: dart.finalFieldType(ui.FontStyle),
    fontFamily: dart.finalFieldType(core.String),
    fontSize: dart.finalFieldType(core.double),
    lineHeight: dart.finalFieldType(core.double),
    maxLines: dart.finalFieldType(core.int),
    letterSpacing: dart.finalFieldType(core.double),
    wordSpacing: dart.finalFieldType(core.double),
    decoration: dart.finalFieldType(core.String),
    ellipsis: dart.finalFieldType(core.String),
    [_cachedHashCode]: dart.fieldType(core.int),
    [_cssFontString]: dart.fieldType(core.String)
  }));
  dart.defineExtensionMethods(src__engine.ParagraphGeometricStyle, ['_equals', 'toString']);
  dart.defineExtensionAccessors(src__engine.ParagraphGeometricStyle, ['hashCode']);
  const _cachedBoundingClientRect = dart.privateName(src__engine, "_cachedBoundingClientRect");
  const _invalidateBoundsCache = dart.privateName(src__engine, "_invalidateBoundsCache");
  const _readAndCacheMetrics = dart.privateName(src__engine, "_readAndCacheMetrics");
  src__engine.TextDimensions = class TextDimensions extends core.Object {
    updateText(from, style) {
      if (!(from != null)) dart.assertFailed();
      if (!(this[_element] != null)) dart.assertFailed();
      if (!dart.test(from.webOnlyDebugHasSameRootStyle(style))) dart.assertFailed();
      if (!dart.test(dart.fn(() => {
        let wasEmptyOrPlainText = dart.test(this[_element].childNodes[$isEmpty]) || this[_element].childNodes[$length] === 1 && html.Text.is(this[_element].childNodes[$first]);
        if (!wasEmptyOrPlainText) {
          dart.throw(core.Exception.new("Failed to copy text into the paragraph measuring element. The " + ("element already contains rich text \"" + dart.str(this[_element][$innerHtml]) + "\". It is ") + "likely that a previous measurement did not clean up after " + "itself."));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed();
      this[_invalidateBoundsCache]();
      let plainText = from.webOnlyGetPlainText();
      if (plainText != null) {
        this[_element][$text] = plainText;
      } else {
        let copy = html.Element._check(from.webOnlyGetParagraphElement()[$clone](true));
        this[_element][$children][$addAll](copy[$children]);
      }
    }
    updateWidth(cssWidth) {
      this[_invalidateBoundsCache]();
      this[_element].style[$width] = cssWidth;
    }
    [_invalidateBoundsCache]() {
      this[_cachedBoundingClientRect] = null;
    }
    updateTextToSpace() {
      this[_invalidateBoundsCache]();
      this[_element][$text] = " ";
    }
    applyStyle(style) {
      this[_element].style[$fontSize] = style.fontSize != null ? dart.str(style.fontSize[$floor]()) + "px" : null;
      this[_element].style[$fontFamily] = style.effectiveFontFamily;
      this[_element].style[$fontWeight] = style.fontWeight != null ? ui.webOnlyFontWeightToCss(style.fontWeight) : null;
      this[_element].style[$fontStyle] = style.fontStyle != null ? style.fontStyle === ui.FontStyle.normal ? "normal" : "italic" : null;
      this[_element].style[$letterSpacing] = style.letterSpacing != null ? dart.str(style.letterSpacing) + "px" : null;
      this[_element].style[$wordSpacing] = style.wordSpacing != null ? dart.str(style.wordSpacing) + "px" : null;
      this[_element].style[$textDecoration] = style.decoration;
      if (style.lineHeight != null) {
        this[_element].style[$lineHeight] = dart.toString(style.lineHeight);
      }
      this[_invalidateBoundsCache]();
    }
    appendToHost(hostElement) {
      hostElement[$append](this[_element]);
      this[_invalidateBoundsCache]();
    }
    [_readAndCacheMetrics]() {
      let t = this[_cachedBoundingClientRect];
      return t == null ? this[_cachedBoundingClientRect] = this[_element].getBoundingClientRect() : t;
    }
    get width() {
      return this[_readAndCacheMetrics]()[$width];
    }
    get height() {
      return this[_readAndCacheMetrics]()[$height];
    }
  };
  (src__engine.TextDimensions.new = function(element) {
    this[_cachedBoundingClientRect] = null;
    this[_element] = element;
  }).prototype = src__engine.TextDimensions.prototype;
  dart.addTypeTests(src__engine.TextDimensions);
  dart.setMethodSignature(src__engine.TextDimensions, () => ({
    __proto__: dart.getMethods(src__engine.TextDimensions.__proto__),
    updateText: dart.fnType(dart.void, [ui.Paragraph, src__engine.ParagraphGeometricStyle]),
    updateWidth: dart.fnType(dart.void, [core.String]),
    [_invalidateBoundsCache]: dart.fnType(dart.void, []),
    updateTextToSpace: dart.fnType(dart.void, []),
    applyStyle: dart.fnType(dart.void, [src__engine.ParagraphGeometricStyle]),
    appendToHost: dart.fnType(dart.void, [html.HtmlElement]),
    [_readAndCacheMetrics]: dart.fnType(math.Rectangle$(core.num), [])
  }));
  dart.setGetterSignature(src__engine.TextDimensions, () => ({
    __proto__: dart.getGetters(src__engine.TextDimensions.__proto__),
    width: core.double,
    height: core.double
  }));
  dart.setFieldSignature(src__engine.TextDimensions, () => ({
    __proto__: dart.getFields(src__engine.TextDimensions.__proto__),
    [_element]: dart.finalFieldType(html.HtmlElement),
    [_cachedBoundingClientRect]: dart.fieldType(RectangleOfnum())
  }));
  const _probe = dart.privateName(src__engine, "_probe");
  const _cachedAlphabeticBaseline = dart.privateName(src__engine, "_cachedAlphabeticBaseline");
  const _singleLineHost = dart.privateName(src__engine, "_singleLineHost");
  const _minIntrinsicHost = dart.privateName(src__engine, "_minIntrinsicHost");
  const _constrainedHost = dart.privateName(src__engine, "_constrainedHost");
  const _lineHeightHost = dart.privateName(src__engine, "_lineHeightHost");
  const _lineHeightDimensions = dart.privateName(src__engine, "_lineHeightDimensions");
  const _debugIsDisposed = dart.privateName(src__engine, "_debugIsDisposed");
  const _paragraph = dart.privateName(src__engine, "_paragraph");
  const _measurementCache = dart.privateName(src__engine, "_measurementCache");
  const _mruList = dart.privateName(src__engine, "_mruList");
  const _configureSingleLineHostElements = dart.privateName(src__engine, "_configureSingleLineHostElements");
  const _configureMinIntrinsicHostElements = dart.privateName(src__engine, "_configureMinIntrinsicHostElements");
  const _configureConstrainedHostElements = dart.privateName(src__engine, "_configureConstrainedHostElements");
  const _configureLineHeightHostElements = dart.privateName(src__engine, "_configureLineHeightHostElements");
  src__engine.ParagraphRuler = class ParagraphRuler extends core.Object {
    get style() {
      return this[style$];
    }
    set style(value) {
      super.style = value;
    }
    get alphabeticBaseline() {
      let t = this[_cachedAlphabeticBaseline];
      return t == null ? this[_cachedAlphabeticBaseline] = this[_probe].getBoundingClientRect()[$bottom] : t;
    }
    get singleLineDimensions() {
      return this[singleLineDimensions];
    }
    set singleLineDimensions(value) {
      super.singleLineDimensions = value;
    }
    get minIntrinsicDimensions() {
      return this[minIntrinsicDimensions];
    }
    set minIntrinsicDimensions(value) {
      this[minIntrinsicDimensions] = value;
    }
    get constrainedDimensions() {
      return this[constrainedDimensions];
    }
    set constrainedDimensions(value) {
      this[constrainedDimensions] = value;
    }
    get lineHeightDimensions() {
      if (this[_lineHeightDimensions] == null) {
        this[_lineHeightHost] = html.DivElement.new();
        this[_lineHeightDimensions] = new src__engine.TextDimensions.new(html.ParagraphElement.new());
        this[_configureLineHeightHostElements]();
      }
      return this[_lineHeightDimensions];
    }
    get hitCount() {
      return this[_hitCount];
    }
    resetHitCount() {
      this[_hitCount] = 0;
    }
    get debugIsDisposed() {
      return this[_debugIsDisposed];
    }
    [_configureSingleLineHostElements]() {
      this[_singleLineHost].style[$visibility] = "hidden";
      this[_singleLineHost].style[$position] = "absolute";
      this[_singleLineHost].style[$top] = "0";
      this[_singleLineHost].style[$left] = "0";
      this[_singleLineHost].style[$display] = "flex";
      this[_singleLineHost].style[$flexDirection] = "row";
      this[_singleLineHost].style[$alignItems] = "baseline";
      this[_singleLineHost].style[$margin] = "0";
      this[_singleLineHost].style[$border] = "0";
      this[_singleLineHost].style[$padding] = "0";
      this.singleLineDimensions.applyStyle(this.style);
      this.singleLineDimensions[_element].style[$whiteSpace] = "pre";
      this.singleLineDimensions.appendToHost(this[_singleLineHost]);
      src__engine.TextMeasurementService.instance.addHostElement(this[_singleLineHost]);
    }
    [_configureMinIntrinsicHostElements]() {
      this[_minIntrinsicHost].style[$visibility] = "hidden";
      this[_minIntrinsicHost].style[$position] = "absolute";
      this[_minIntrinsicHost].style[$top] = "0";
      this[_minIntrinsicHost].style[$left] = "0";
      this[_minIntrinsicHost].style[$display] = "flex";
      this[_minIntrinsicHost].style[$flexDirection] = "row";
      this[_minIntrinsicHost].style[$margin] = "0";
      this[_minIntrinsicHost].style[$border] = "0";
      this[_minIntrinsicHost].style[$padding] = "0";
      this.minIntrinsicDimensions.applyStyle(this.style);
      let _ = this.minIntrinsicDimensions[_element].style;
      _[$flex] = "0";
      _[$display] = "inline";
      _[$whiteSpace] = "pre-wrap";
      this[_minIntrinsicHost][$append](this.minIntrinsicDimensions[_element]);
      src__engine.TextMeasurementService.instance.addHostElement(this[_minIntrinsicHost]);
    }
    [_configureConstrainedHostElements]() {
      this[_constrainedHost].style[$visibility] = "hidden";
      this[_constrainedHost].style[$position] = "absolute";
      this[_constrainedHost].style[$top] = "0";
      this[_constrainedHost].style[$left] = "0";
      this[_constrainedHost].style[$display] = "flex";
      this[_constrainedHost].style[$flexDirection] = "row";
      this[_constrainedHost].style[$alignItems] = "baseline";
      this[_constrainedHost].style[$margin] = "0";
      this[_constrainedHost].style[$border] = "0";
      this[_constrainedHost].style[$padding] = "0";
      this.constrainedDimensions.applyStyle(this.style);
      let _ = this.constrainedDimensions[_element].style;
      _[$display] = "block";
      _[$whiteSpace] = "pre-wrap";
      this.constrainedDimensions.appendToHost(this[_constrainedHost]);
      src__engine.TextMeasurementService.instance.addHostElement(this[_constrainedHost]);
    }
    [_configureLineHeightHostElements]() {
      this[_lineHeightHost].style[$visibility] = "hidden";
      this[_lineHeightHost].style[$position] = "absolute";
      this[_lineHeightHost].style[$top] = "0";
      this[_lineHeightHost].style[$left] = "0";
      this[_lineHeightHost].style[$margin] = "0";
      this[_lineHeightHost].style[$border] = "0";
      this[_lineHeightHost].style[$padding] = "0";
      this.lineHeightDimensions.applyStyle(this.style);
      this.lineHeightDimensions[_element].style[$whiteSpace] = "pre";
      this.lineHeightDimensions.updateTextToSpace();
      this.lineHeightDimensions.appendToHost(this[_lineHeightHost]);
      src__engine.TextMeasurementService.instance.addHostElement(this[_lineHeightHost]);
    }
    willMeasure(paragraph) {
      if (!(paragraph != null)) dart.assertFailed();
      if (!dart.test(dart.fn(() => {
        if (this[_paragraph] != null) {
          dart.throw(core.Exception.new("Attempted to reuse a " + dart.str(dart.wrapType(src__engine.ParagraphRuler)) + " but it is currently " + ("measuring another paragraph (" + dart.str(this[_paragraph]) + "). It is possible that ")));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed();
      if (!dart.test(paragraph.webOnlyDebugHasSameRootStyle(this.style))) dart.assertFailed();
      this[_hitCount] = dart.notNull(this[_hitCount]) + 1;
      this[_paragraph] = paragraph;
    }
    measureAll(constraints) {
      this.measureAsSingleLine();
      this.measureMinIntrinsicWidth();
      this.measureWithConstraints(constraints);
    }
    measureAsSingleLine() {
      if (!!dart.test(this[_debugIsDisposed])) dart.assertFailed();
      if (!(this[_paragraph] != null)) dart.assertFailed();
      if (this[_paragraph].webOnlyGetPlainText() === "") {
        this.singleLineDimensions.updateTextToSpace();
      } else {
        this.singleLineDimensions.updateText(this[_paragraph], this.style);
      }
    }
    measureMinIntrinsicWidth() {
      if (!!dart.test(this[_debugIsDisposed])) dart.assertFailed();
      if (!(this[_paragraph] != null)) dart.assertFailed();
      this.minIntrinsicDimensions.updateText(this[_paragraph], this.style);
    }
    measureWithConstraints(constraints) {
      if (!!dart.test(this[_debugIsDisposed])) dart.assertFailed();
      if (!(this[_paragraph] != null)) dart.assertFailed();
      this.constrainedDimensions.updateText(this[_paragraph], this.style);
      this.constrainedDimensions.updateWidth(dart.str(dart.notNull(constraints.width) + 0.5) + "px");
    }
    didMeasure() {
      if (!(this[_paragraph] != null)) dart.assertFailed();
      if (this[_paragraph].webOnlyGetPlainText() == null) {
        src__engine.domRenderer.clearDom(this.singleLineDimensions[_element]);
        src__engine.domRenderer.clearDom(this.minIntrinsicDimensions[_element]);
        src__engine.domRenderer.clearDom(this.constrainedDimensions[_element]);
      }
      this[_paragraph] = null;
    }
    measureBoxesForRange(plainText, constraints, opts) {
      let start = opts && 'start' in opts ? opts.start : null;
      let end = opts && 'end' in opts ? opts.end : null;
      let alignOffset = opts && 'alignOffset' in opts ? opts.alignOffset : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (!!dart.test(this[_debugIsDisposed])) dart.assertFailed();
      if (!(dart.notNull(start) >= 0 && dart.notNull(start) <= plainText.length)) dart.assertFailed();
      if (!(dart.notNull(end) >= 0 && dart.notNull(end) <= plainText.length)) dart.assertFailed();
      if (!(dart.notNull(start) <= dart.notNull(end))) dart.assertFailed();
      let before = plainText[$substring](0, start);
      let rangeText = plainText[$substring](start, end);
      let after = plainText[$substring](end);
      let rangeSpan = html.SpanElement.new();
      rangeSpan[$text] = rangeText;
      src__engine.domRenderer.clearDom(this.constrainedDimensions[_element]);
      this.constrainedDimensions[_element][$appendText](before);
      this.constrainedDimensions[_element][$append](rangeSpan);
      this.constrainedDimensions[_element][$appendText](after);
      this.constrainedDimensions.updateWidth(dart.str(constraints.width) + "px");
      let clientRects = rangeSpan[$getClientRects]();
      let boxes = JSArrayOfTextBox().of([]);
      for (let rect of clientRects) {
        boxes[$add](new ui.TextBox.fromLTRBD(dart.notNull(rect[$left]) + dart.notNull(alignOffset), rect[$top], dart.notNull(rect[$right]) + dart.notNull(alignOffset), rect[$bottom], textDirection));
      }
      src__engine.domRenderer.clearDom(this.constrainedDimensions[_element]);
      return boxes;
    }
    dispose() {
      if (!dart.test(dart.fn(() => {
        if (this[_paragraph] != null) {
          dart.throw(core.Exception.new("Attempted to dispose of a ruler in the middle of " + "measurement. This is likely a bug in the framework."));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed();
      this[_singleLineHost][$remove]();
      this[_minIntrinsicHost][$remove]();
      this[_constrainedHost][$remove]();
      let t = this[_lineHeightHost];
      t == null ? null : t[$remove]();
      if (!dart.test(dart.fn(() => {
        this[_debugIsDisposed] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed();
    }
    cacheMeasurement(paragraph, constraints, item) {
      let plainText = paragraph.webOnlyGetPlainText();
      let constraintCache = this[_measurementCache][$_get](plainText);
      if (constraintCache == null) {
        constraintCache = this[_measurementCache][$_set](plainText, JSArrayOfRulerCacheEntry().of([]));
      }
      constraintCache[$add](item);
      if (dart.notNull(constraintCache[$length]) > 8) {
        constraintCache[$removeAt](0);
      }
      this[_mruList][$add](plainText);
      if (dart.notNull(this[_mruList][$length]) > 2400) {
        for (let i = 0; i < 100; i++) {
          this[_measurementCache][$remove](this[_mruList][$_get](i));
        }
        this[_mruList][$removeRange](0, 100);
      }
    }
    cacheLookup(paragraph, constraints) {
      let constraintCache = this[_measurementCache][$_get](paragraph.webOnlyGetPlainText());
      if (constraintCache == null) {
        return null;
      }
      for (let i = 0, len = constraintCache[$length]; i < dart.notNull(len); i++) {
        let item = constraintCache[$_get](i);
        if (item.constraintWidth == constraints.width) {
          return item;
        }
      }
      return null;
    }
  };
  (src__engine.ParagraphRuler.new = function(style) {
    this[_probe] = html.DivElement.new();
    this[_cachedAlphabeticBaseline] = null;
    this[_singleLineHost] = html.DivElement.new();
    this[singleLineDimensions] = new src__engine.TextDimensions.new(html.ParagraphElement.new());
    this[_minIntrinsicHost] = html.DivElement.new();
    this[minIntrinsicDimensions] = new src__engine.TextDimensions.new(html.ParagraphElement.new());
    this[_constrainedHost] = html.DivElement.new();
    this[constrainedDimensions] = new src__engine.TextDimensions.new(html.ParagraphElement.new());
    this[_lineHeightHost] = null;
    this[_lineHeightDimensions] = null;
    this[_hitCount] = 0;
    this[_debugIsDisposed] = false;
    this[_paragraph] = null;
    this[_measurementCache] = new (IdentityMapOfString$ListOfRulerCacheEntry()).new();
    this[_mruList] = JSArrayOfString().of([]);
    this[style$] = style;
    this[_configureSingleLineHostElements]();
    this[_singleLineHost][$append](this[_probe]);
    this[_configureMinIntrinsicHostElements]();
    this[_configureConstrainedHostElements]();
  }).prototype = src__engine.ParagraphRuler.prototype;
  dart.addTypeTests(src__engine.ParagraphRuler);
  const style$ = Symbol("ParagraphRuler.style");
  const singleLineDimensions = Symbol("ParagraphRuler.singleLineDimensions");
  const minIntrinsicDimensions = Symbol("ParagraphRuler.minIntrinsicDimensions");
  const constrainedDimensions = Symbol("ParagraphRuler.constrainedDimensions");
  dart.setMethodSignature(src__engine.ParagraphRuler, () => ({
    __proto__: dart.getMethods(src__engine.ParagraphRuler.__proto__),
    resetHitCount: dart.fnType(dart.void, []),
    [_configureSingleLineHostElements]: dart.fnType(dart.void, []),
    [_configureMinIntrinsicHostElements]: dart.fnType(dart.void, []),
    [_configureConstrainedHostElements]: dart.fnType(dart.void, []),
    [_configureLineHeightHostElements]: dart.fnType(dart.void, []),
    willMeasure: dart.fnType(dart.void, [ui.Paragraph]),
    measureAll: dart.fnType(dart.void, [ui.ParagraphConstraints]),
    measureAsSingleLine: dart.fnType(dart.void, []),
    measureMinIntrinsicWidth: dart.fnType(dart.void, []),
    measureWithConstraints: dart.fnType(dart.void, [ui.ParagraphConstraints]),
    didMeasure: dart.fnType(dart.void, []),
    measureBoxesForRange: dart.fnType(core.List$(ui.TextBox), [core.String, ui.ParagraphConstraints], {start: core.int, end: core.int, alignOffset: core.double, textDirection: ui.TextDirection}),
    dispose: dart.fnType(dart.void, []),
    cacheMeasurement: dart.fnType(dart.void, [ui.Paragraph, ui.ParagraphConstraints, src__engine.RulerCacheEntry]),
    cacheLookup: dart.fnType(src__engine.RulerCacheEntry, [ui.Paragraph, ui.ParagraphConstraints])
  }));
  dart.setGetterSignature(src__engine.ParagraphRuler, () => ({
    __proto__: dart.getGetters(src__engine.ParagraphRuler.__proto__),
    alphabeticBaseline: core.double,
    lineHeightDimensions: src__engine.TextDimensions,
    hitCount: core.int,
    debugIsDisposed: core.bool
  }));
  dart.setFieldSignature(src__engine.ParagraphRuler, () => ({
    __proto__: dart.getFields(src__engine.ParagraphRuler.__proto__),
    style: dart.finalFieldType(src__engine.ParagraphGeometricStyle),
    [_probe]: dart.finalFieldType(html.DivElement),
    [_cachedAlphabeticBaseline]: dart.fieldType(core.double),
    [_singleLineHost]: dart.finalFieldType(html.DivElement),
    singleLineDimensions: dart.finalFieldType(src__engine.TextDimensions),
    [_minIntrinsicHost]: dart.finalFieldType(html.DivElement),
    minIntrinsicDimensions: dart.fieldType(src__engine.TextDimensions),
    [_constrainedHost]: dart.finalFieldType(html.DivElement),
    constrainedDimensions: dart.fieldType(src__engine.TextDimensions),
    [_lineHeightHost]: dart.fieldType(html.DivElement),
    [_lineHeightDimensions]: dart.fieldType(src__engine.TextDimensions),
    [_hitCount]: dart.fieldType(core.int),
    [_debugIsDisposed]: dart.fieldType(core.bool),
    [_paragraph]: dart.fieldType(ui.Paragraph),
    [_measurementCache]: dart.fieldType(MapOfString$ListOfRulerCacheEntry()),
    [_mruList]: dart.finalFieldType(ListOfString())
  }));
  dart.defineLazy(src__engine.ParagraphRuler, {
    /*src__engine.ParagraphRuler._cacheLimit*/get _cacheLimit() {
      return 2400;
    },
    /*src__engine.ParagraphRuler._cacheBlockFactor*/get _cacheBlockFactor() {
      return 100;
    },
    /*src__engine.ParagraphRuler._constraintCacheSize*/get _constraintCacheSize() {
      return 8;
    }
  });
  src__engine.RulerCacheEntry = class RulerCacheEntry extends core.Object {
    get constraintWidth() {
      return this[constraintWidth$];
    }
    set constraintWidth(value) {
      super.constraintWidth = value;
    }
    get isSingleLine() {
      return this[isSingleLine$];
    }
    set isSingleLine(value) {
      super.isSingleLine = value;
    }
    get width() {
      return this[width$2];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$1];
    }
    set height(value) {
      super.height = value;
    }
    get lineHeight() {
      return this[lineHeight$0];
    }
    set lineHeight(value) {
      super.lineHeight = value;
    }
    get minIntrinsicWidth() {
      return this[minIntrinsicWidth$];
    }
    set minIntrinsicWidth(value) {
      super.minIntrinsicWidth = value;
    }
    get maxIntrinsicWidth() {
      return this[maxIntrinsicWidth$];
    }
    set maxIntrinsicWidth(value) {
      super.maxIntrinsicWidth = value;
    }
    get alphabeticBaseline() {
      return this[alphabeticBaseline$];
    }
    set alphabeticBaseline(value) {
      super.alphabeticBaseline = value;
    }
    get ideographicBaseline() {
      return this[ideographicBaseline$];
    }
    set ideographicBaseline(value) {
      super.ideographicBaseline = value;
    }
    applyToParagraph(paragraph) {
      paragraph.webOnlySetComputedLayout({isSingleLine: this.isSingleLine, width: this.width, height: this.height, lineHeight: this.lineHeight, minIntrinsicWidth: this.minIntrinsicWidth, maxIntrinsicWidth: this.maxIntrinsicWidth, alphabeticBaseline: this.alphabeticBaseline, ideographicBaseline: this.ideographicBaseline});
    }
  };
  (src__engine.RulerCacheEntry.new = function(constraintWidth, opts) {
    let isSingleLine = opts && 'isSingleLine' in opts ? opts.isSingleLine : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let lineHeight = opts && 'lineHeight' in opts ? opts.lineHeight : null;
    let minIntrinsicWidth = opts && 'minIntrinsicWidth' in opts ? opts.minIntrinsicWidth : null;
    let maxIntrinsicWidth = opts && 'maxIntrinsicWidth' in opts ? opts.maxIntrinsicWidth : null;
    let alphabeticBaseline = opts && 'alphabeticBaseline' in opts ? opts.alphabeticBaseline : null;
    let ideographicBaseline = opts && 'ideographicBaseline' in opts ? opts.ideographicBaseline : null;
    this[constraintWidth$] = constraintWidth;
    this[isSingleLine$] = isSingleLine;
    this[width$2] = width;
    this[height$1] = height;
    this[lineHeight$0] = lineHeight;
    this[minIntrinsicWidth$] = minIntrinsicWidth;
    this[maxIntrinsicWidth$] = maxIntrinsicWidth;
    this[alphabeticBaseline$] = alphabeticBaseline;
    this[ideographicBaseline$] = ideographicBaseline;
  }).prototype = src__engine.RulerCacheEntry.prototype;
  dart.addTypeTests(src__engine.RulerCacheEntry);
  const constraintWidth$ = Symbol("RulerCacheEntry.constraintWidth");
  const isSingleLine$ = Symbol("RulerCacheEntry.isSingleLine");
  const width$2 = Symbol("RulerCacheEntry.width");
  const height$1 = Symbol("RulerCacheEntry.height");
  const lineHeight$0 = Symbol("RulerCacheEntry.lineHeight");
  const minIntrinsicWidth$ = Symbol("RulerCacheEntry.minIntrinsicWidth");
  const maxIntrinsicWidth$ = Symbol("RulerCacheEntry.maxIntrinsicWidth");
  const alphabeticBaseline$ = Symbol("RulerCacheEntry.alphabeticBaseline");
  const ideographicBaseline$ = Symbol("RulerCacheEntry.ideographicBaseline");
  dart.setMethodSignature(src__engine.RulerCacheEntry, () => ({
    __proto__: dart.getMethods(src__engine.RulerCacheEntry.__proto__),
    applyToParagraph: dart.fnType(dart.void, [ui.Paragraph])
  }));
  dart.setFieldSignature(src__engine.RulerCacheEntry, () => ({
    __proto__: dart.getFields(src__engine.RulerCacheEntry.__proto__),
    constraintWidth: dart.finalFieldType(core.double),
    isSingleLine: dart.finalFieldType(core.bool),
    width: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double),
    lineHeight: dart.finalFieldType(core.double),
    minIntrinsicWidth: dart.finalFieldType(core.double),
    maxIntrinsicWidth: dart.finalFieldType(core.double),
    alphabeticBaseline: dart.finalFieldType(core.double),
    ideographicBaseline: dart.finalFieldType(core.double)
  }));
  src__engine._ComparisonResult = class _ComparisonResult extends core.Object {
    toString() {
      return {
        0: "_ComparisonResult.inside",
        1: "_ComparisonResult.higher",
        2: "_ComparisonResult.lower"
      }[this.index];
    }
  };
  (src__engine._ComparisonResult.new = function(x) {
    this.index = x;
  }).prototype = src__engine._ComparisonResult.prototype;
  dart.addTypeTests(src__engine._ComparisonResult);
  dart.setFieldSignature(src__engine._ComparisonResult, () => ({
    __proto__: dart.getFields(src__engine._ComparisonResult.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(src__engine._ComparisonResult, ['toString']);
  src__engine._ComparisonResult.inside = dart.const(new src__engine._ComparisonResult.new(0));
  src__engine._ComparisonResult.higher = dart.const(new src__engine._ComparisonResult.new(1));
  src__engine._ComparisonResult.lower = dart.const(new src__engine._ComparisonResult.new(2));
  src__engine._ComparisonResult.values = dart.constList([src__engine._ComparisonResult.inside, src__engine._ComparisonResult.higher, src__engine._ComparisonResult.lower], src__engine._ComparisonResult);
  const _is_UnicodeRange_default = Symbol('_is_UnicodeRange_default');
  src__engine.UnicodeRange$ = dart.generic(P => {
    class UnicodeRange extends core.Object {
      get start() {
        return this[start$];
      }
      set start(value) {
        super.start = value;
      }
      get end() {
        return this[end$];
      }
      set end(value) {
        super.end = value;
      }
      get property() {
        return this[property$];
      }
      set property(value) {
        super.property = value;
      }
      compare(value) {
        if (dart.notNull(value) < dart.notNull(this.start)) return src__engine._ComparisonResult.lower;
        if (dart.notNull(value) > dart.notNull(this.end)) return src__engine._ComparisonResult.higher;
        return src__engine._ComparisonResult.inside;
      }
    }
    (UnicodeRange.new = function(start, end, property) {
      this[start$] = start;
      this[end$] = end;
      this[property$] = property;
    }).prototype = UnicodeRange.prototype;
    dart.addTypeTests(UnicodeRange);
    UnicodeRange.prototype[_is_UnicodeRange_default] = true;
    const start$ = Symbol("UnicodeRange.start");
    const end$ = Symbol("UnicodeRange.end");
    const property$ = Symbol("UnicodeRange.property");
    dart.setMethodSignature(UnicodeRange, () => ({
      __proto__: dart.getMethods(UnicodeRange.__proto__),
      compare: dart.fnType(src__engine._ComparisonResult, [core.int])
    }));
    dart.setFieldSignature(UnicodeRange, () => ({
      __proto__: dart.getFields(UnicodeRange.__proto__),
      start: dart.finalFieldType(core.int),
      end: dart.finalFieldType(core.int),
      property: dart.finalFieldType(P)
    }));
    return UnicodeRange;
  });
  src__engine.UnicodeRange = src__engine.UnicodeRange$();
  dart.addTypeTests(src__engine.UnicodeRange, _is_UnicodeRange_default);
  const _is_UnicodePropertyLookup_default = Symbol('_is_UnicodePropertyLookup_default');
  src__engine.UnicodePropertyLookup$ = dart.generic(P => {
    let UnicodeRangeOfP = () => (UnicodeRangeOfP = dart.constFn(src__engine.UnicodeRange$(P)))();
    let ListOfUnicodeRangeOfP = () => (ListOfUnicodeRangeOfP = dart.constFn(core.List$(UnicodeRangeOfP())))();
    class UnicodePropertyLookup extends core.Object {
      get ranges() {
        return this[ranges$];
      }
      set ranges(value) {
        super.ranges = value;
      }
      find(value) {
        let index = src__engine.UnicodePropertyLookup._binarySearch(core.Object, this.ranges, value, dart.fn((a, b) => {
          let range = UnicodeRangeOfP()._check(a);
          switch (range.compare(core.int._check(b))) {
            case src__engine._ComparisonResult.higher:
            {
              return -1;
            }
            case src__engine._ComparisonResult.lower:
            {
              return 1;
            }
            case src__engine._ComparisonResult.inside:
            {
              return 0;
            }
          }
        }, dynamicAnddynamicToint()));
        return index === -1 ? null : this.ranges[$_get](index).property;
      }
      static _binarySearch(T, sortedList, value, compare) {
        let min = 0;
        let max = sortedList[$length];
        while (min < dart.notNull(max)) {
          let mid = min + (dart.notNull(max) - min)[$rightShift](1);
          let element = sortedList[$_get](mid);
          let comp = compare(element, value);
          if (comp === 0) return mid;
          if (dart.notNull(comp) < 0) {
            min = mid + 1;
          } else {
            max = mid;
          }
        }
        return -1;
      }
    }
    (UnicodePropertyLookup.new = function(ranges) {
      this[ranges$] = ranges;
    }).prototype = UnicodePropertyLookup.prototype;
    dart.addTypeTests(UnicodePropertyLookup);
    UnicodePropertyLookup.prototype[_is_UnicodePropertyLookup_default] = true;
    const ranges$ = Symbol("UnicodePropertyLookup.ranges");
    dart.setMethodSignature(UnicodePropertyLookup, () => ({
      __proto__: dart.getMethods(UnicodePropertyLookup.__proto__),
      find: dart.fnType(P, [core.int])
    }));
    dart.setFieldSignature(UnicodePropertyLookup, () => ({
      __proto__: dart.getFields(UnicodePropertyLookup.__proto__),
      ranges: dart.finalFieldType(ListOfUnicodeRangeOfP())
    }));
    return UnicodePropertyLookup;
  });
  src__engine.UnicodePropertyLookup = src__engine.UnicodePropertyLookup$();
  dart.addTypeTests(src__engine.UnicodePropertyLookup, _is_UnicodePropertyLookup_default);
  src__engine.getCharProperty = function(text, index) {
    if (dart.notNull(index) < 0 || dart.notNull(index) >= text.length) {
      return null;
    }
    return src__engine.lookup.find(text[$codeUnitAt](index));
  };
  src__engine.CharProperty = class CharProperty extends core.Object {
    toString() {
      return {
        0: "CharProperty.DoubleQuote",
        1: "CharProperty.SingleQuote",
        2: "CharProperty.HebrewLetter",
        3: "CharProperty.CR",
        4: "CharProperty.LF",
        5: "CharProperty.Newline",
        6: "CharProperty.Extend",
        7: "CharProperty.RegionalIndicator",
        8: "CharProperty.Format",
        9: "CharProperty.Katakana",
        10: "CharProperty.ALetter",
        11: "CharProperty.MidLetter",
        12: "CharProperty.MidNum",
        13: "CharProperty.MidNumLet",
        14: "CharProperty.Numeric",
        15: "CharProperty.ExtendNumLet",
        16: "CharProperty.ZWJ",
        17: "CharProperty.WSegSpace"
      }[this.index];
    }
  };
  (src__engine.CharProperty.new = function(x) {
    this.index = x;
  }).prototype = src__engine.CharProperty.prototype;
  dart.addTypeTests(src__engine.CharProperty);
  dart.setFieldSignature(src__engine.CharProperty, () => ({
    __proto__: dart.getFields(src__engine.CharProperty.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(src__engine.CharProperty, ['toString']);
  src__engine.CharProperty.DoubleQuote = dart.const(new src__engine.CharProperty.new(0));
  src__engine.CharProperty.SingleQuote = dart.const(new src__engine.CharProperty.new(1));
  src__engine.CharProperty.HebrewLetter = dart.const(new src__engine.CharProperty.new(2));
  src__engine.CharProperty.CR = dart.const(new src__engine.CharProperty.new(3));
  src__engine.CharProperty.LF = dart.const(new src__engine.CharProperty.new(4));
  src__engine.CharProperty.Newline = dart.const(new src__engine.CharProperty.new(5));
  src__engine.CharProperty.Extend = dart.const(new src__engine.CharProperty.new(6));
  src__engine.CharProperty.RegionalIndicator = dart.const(new src__engine.CharProperty.new(7));
  src__engine.CharProperty.Format = dart.const(new src__engine.CharProperty.new(8));
  src__engine.CharProperty.Katakana = dart.const(new src__engine.CharProperty.new(9));
  src__engine.CharProperty.ALetter = dart.const(new src__engine.CharProperty.new(10));
  src__engine.CharProperty.MidLetter = dart.const(new src__engine.CharProperty.new(11));
  src__engine.CharProperty.MidNum = dart.const(new src__engine.CharProperty.new(12));
  src__engine.CharProperty.MidNumLet = dart.const(new src__engine.CharProperty.new(13));
  src__engine.CharProperty.Numeric = dart.const(new src__engine.CharProperty.new(14));
  src__engine.CharProperty.ExtendNumLet = dart.const(new src__engine.CharProperty.new(15));
  src__engine.CharProperty.ZWJ = dart.const(new src__engine.CharProperty.new(16));
  src__engine.CharProperty.WSegSpace = dart.const(new src__engine.CharProperty.new(17));
  src__engine.CharProperty.values = dart.constList([src__engine.CharProperty.DoubleQuote, src__engine.CharProperty.SingleQuote, src__engine.CharProperty.HebrewLetter, src__engine.CharProperty.CR, src__engine.CharProperty.LF, src__engine.CharProperty.Newline, src__engine.CharProperty.Extend, src__engine.CharProperty.RegionalIndicator, src__engine.CharProperty.Format, src__engine.CharProperty.Katakana, src__engine.CharProperty.ALetter, src__engine.CharProperty.MidLetter, src__engine.CharProperty.MidNum, src__engine.CharProperty.MidNumLet, src__engine.CharProperty.Numeric, src__engine.CharProperty.ExtendNumLet, src__engine.CharProperty.ZWJ, src__engine.CharProperty.WSegSpace], src__engine.CharProperty);
  dart.defineLazy(src__engine, {
    /*src__engine.lookup*/get lookup() {
      return dart.const(new (UnicodePropertyLookupOfCharProperty()).new(dart.constList([dart.const(new (UnicodeRangeOfCharProperty()).new(10, 10, src__engine.CharProperty.LF)), dart.const(new (UnicodeRangeOfCharProperty()).new(11, 12, src__engine.CharProperty.Newline)), dart.const(new (UnicodeRangeOfCharProperty()).new(13, 13, src__engine.CharProperty.CR)), dart.const(new (UnicodeRangeOfCharProperty()).new(32, 32, src__engine.CharProperty.WSegSpace)), dart.const(new (UnicodeRangeOfCharProperty()).new(34, 34, src__engine.CharProperty.DoubleQuote)), dart.const(new (UnicodeRangeOfCharProperty()).new(39, 39, src__engine.CharProperty.SingleQuote)), dart.const(new (UnicodeRangeOfCharProperty()).new(44, 44, src__engine.CharProperty.MidNum)), dart.const(new (UnicodeRangeOfCharProperty()).new(46, 46, src__engine.CharProperty.MidNumLet)), dart.const(new (UnicodeRangeOfCharProperty()).new(48, 57, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(58, 58, src__engine.CharProperty.MidLetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(59, 59, src__engine.CharProperty.MidNum)), dart.const(new (UnicodeRangeOfCharProperty()).new(65, 90, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(95, 95, src__engine.CharProperty.ExtendNumLet)), dart.const(new (UnicodeRangeOfCharProperty()).new(97, 122, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(133, 133, src__engine.CharProperty.Newline)), dart.const(new (UnicodeRangeOfCharProperty()).new(170, 170, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(173, 173, src__engine.CharProperty.Format)), dart.const(new (UnicodeRangeOfCharProperty()).new(181, 181, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(183, 183, src__engine.CharProperty.MidLetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(186, 186, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(192, 214, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(216, 246, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(248, 727, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(734, 740, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(748, 767, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(768, 879, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(880, 884, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(886, 887, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(890, 893, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(894, 894, src__engine.CharProperty.MidNum)), dart.const(new (UnicodeRangeOfCharProperty()).new(895, 895, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(902, 902, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(903, 903, src__engine.CharProperty.MidLetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(904, 906, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(908, 908, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(910, 929, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(931, 1013, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1015, 1153, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1155, 1161, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(1162, 1327, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1329, 1366, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1369, 1369, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1371, 1372, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1374, 1374, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1376, 1416, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1417, 1417, src__engine.CharProperty.MidNum)), dart.const(new (UnicodeRangeOfCharProperty()).new(1425, 1469, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(1471, 1471, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(1473, 1474, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(1476, 1477, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(1479, 1479, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(1488, 1514, src__engine.CharProperty.HebrewLetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1519, 1522, src__engine.CharProperty.HebrewLetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1523, 1523, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1524, 1524, src__engine.CharProperty.MidLetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1536, 1541, src__engine.CharProperty.Format)), dart.const(new (UnicodeRangeOfCharProperty()).new(1548, 1549, src__engine.CharProperty.MidNum)), dart.const(new (UnicodeRangeOfCharProperty()).new(1552, 1562, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(1564, 1564, src__engine.CharProperty.Format)), dart.const(new (UnicodeRangeOfCharProperty()).new(1568, 1610, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1611, 1631, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(1632, 1641, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(1643, 1643, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(1644, 1644, src__engine.CharProperty.MidNum)), dart.const(new (UnicodeRangeOfCharProperty()).new(1646, 1647, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1648, 1648, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(1649, 1747, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1749, 1749, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1750, 1756, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(1757, 1757, src__engine.CharProperty.Format)), dart.const(new (UnicodeRangeOfCharProperty()).new(1759, 1764, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(1765, 1766, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1767, 1768, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(1770, 1773, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(1774, 1775, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1776, 1785, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(1786, 1788, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1791, 1791, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1807, 1807, src__engine.CharProperty.Format)), dart.const(new (UnicodeRangeOfCharProperty()).new(1808, 1808, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1809, 1809, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(1810, 1839, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1840, 1866, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(1869, 1957, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1958, 1968, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(1969, 1969, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(1984, 1993, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(1994, 2026, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2027, 2035, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2036, 2037, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2040, 2040, src__engine.CharProperty.MidNum)), dart.const(new (UnicodeRangeOfCharProperty()).new(2042, 2042, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2045, 2045, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2048, 2069, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2070, 2073, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2074, 2074, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2075, 2083, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2084, 2084, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2085, 2087, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2088, 2088, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2089, 2093, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2112, 2136, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2137, 2139, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2144, 2154, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2208, 2228, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2230, 2237, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2259, 2273, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2274, 2274, src__engine.CharProperty.Format)), dart.const(new (UnicodeRangeOfCharProperty()).new(2275, 2307, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2308, 2361, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2362, 2364, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2365, 2365, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2366, 2383, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2384, 2384, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2385, 2391, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2392, 2401, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2402, 2403, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2406, 2415, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(2417, 2432, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2433, 2435, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2437, 2444, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2447, 2448, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2451, 2472, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2474, 2480, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2482, 2482, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2486, 2489, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2492, 2492, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2493, 2493, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2494, 2500, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2503, 2504, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2507, 2509, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2510, 2510, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2519, 2519, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2524, 2525, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2527, 2529, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2530, 2531, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2534, 2543, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(2544, 2545, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2556, 2556, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2558, 2558, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2561, 2563, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2565, 2570, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2575, 2576, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2579, 2600, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2602, 2608, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2610, 2611, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2613, 2614, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2616, 2617, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2620, 2620, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2622, 2626, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2631, 2632, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2635, 2637, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2641, 2641, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2649, 2652, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2654, 2654, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2662, 2671, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(2672, 2673, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2674, 2676, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2677, 2677, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2689, 2691, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2693, 2701, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2703, 2705, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2707, 2728, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2730, 2736, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2738, 2739, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2741, 2745, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2748, 2748, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2749, 2749, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2750, 2757, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2759, 2761, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2763, 2765, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2768, 2768, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2784, 2785, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2786, 2787, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2790, 2799, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(2809, 2809, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2810, 2815, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2817, 2819, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2821, 2828, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2831, 2832, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2835, 2856, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2858, 2864, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2866, 2867, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2869, 2873, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2876, 2876, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2877, 2877, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2878, 2884, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2887, 2888, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2891, 2893, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2902, 2903, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2908, 2909, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2911, 2913, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2914, 2915, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2918, 2927, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(2929, 2929, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2946, 2946, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(2947, 2947, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2949, 2954, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2958, 2960, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2962, 2965, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2969, 2970, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2972, 2972, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2974, 2975, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2979, 2980, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2984, 2986, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(2990, 3001, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3006, 3010, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3014, 3016, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3018, 3021, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3024, 3024, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3031, 3031, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3046, 3055, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(3072, 3076, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3077, 3084, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3086, 3088, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3090, 3112, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3114, 3129, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3133, 3133, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3134, 3140, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3142, 3144, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3146, 3149, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3157, 3158, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3160, 3162, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3168, 3169, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3170, 3171, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3174, 3183, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(3200, 3200, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3201, 3203, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3205, 3212, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3214, 3216, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3218, 3240, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3242, 3251, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3253, 3257, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3260, 3260, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3261, 3261, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3262, 3268, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3270, 3272, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3274, 3277, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3285, 3286, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3294, 3294, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3296, 3297, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3298, 3299, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3302, 3311, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(3313, 3314, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3328, 3331, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3333, 3340, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3342, 3344, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3346, 3386, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3387, 3388, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3389, 3389, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3390, 3396, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3398, 3400, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3402, 3405, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3406, 3406, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3412, 3414, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3415, 3415, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3423, 3425, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3426, 3427, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3430, 3439, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(3450, 3455, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3458, 3459, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3461, 3478, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3482, 3505, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3507, 3515, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3517, 3517, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3520, 3526, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3530, 3530, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3535, 3540, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3542, 3542, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3544, 3551, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3558, 3567, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(3570, 3571, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3633, 3633, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3636, 3642, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3655, 3662, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3664, 3673, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(3761, 3761, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3764, 3769, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3771, 3772, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3784, 3789, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3792, 3801, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(3840, 3840, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3864, 3865, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3872, 3881, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(3893, 3893, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3895, 3895, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3897, 3897, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3902, 3903, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3904, 3911, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3913, 3948, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3953, 3972, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3974, 3975, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3976, 3980, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(3981, 3991, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(3993, 4028, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(4038, 4038, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(4139, 4158, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(4160, 4169, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(4182, 4185, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(4190, 4192, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(4194, 4196, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(4199, 4205, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(4209, 4212, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(4226, 4237, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(4239, 4239, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(4240, 4249, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(4250, 4253, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(4256, 4293, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(4295, 4295, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(4301, 4301, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(4304, 4346, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(4348, 4680, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(4682, 4685, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(4688, 4694, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(4696, 4696, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(4698, 4701, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(4704, 4744, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(4746, 4749, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(4752, 4784, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(4786, 4789, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(4792, 4798, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(4800, 4800, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(4802, 4805, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(4808, 4822, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(4824, 4880, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(4882, 4885, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(4888, 4954, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(4957, 4959, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(4992, 5007, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(5024, 5109, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(5112, 5117, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(5121, 5740, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(5743, 5759, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(5760, 5760, src__engine.CharProperty.WSegSpace)), dart.const(new (UnicodeRangeOfCharProperty()).new(5761, 5786, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(5792, 5866, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(5870, 5880, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(5888, 5900, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(5902, 5905, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(5906, 5908, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(5920, 5937, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(5938, 5940, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(5952, 5969, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(5970, 5971, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(5984, 5996, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(5998, 6000, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(6002, 6003, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(6068, 6099, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(6109, 6109, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(6112, 6121, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(6155, 6157, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(6158, 6158, src__engine.CharProperty.Format)), dart.const(new (UnicodeRangeOfCharProperty()).new(6160, 6169, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(6176, 6264, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(6272, 6276, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(6277, 6278, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(6279, 6312, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(6313, 6313, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(6314, 6314, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(6320, 6389, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(6400, 6430, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(6432, 6443, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(6448, 6459, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(6470, 6479, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(6608, 6617, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(6656, 6678, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(6679, 6683, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(6741, 6750, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(6752, 6780, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(6783, 6783, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(6784, 6793, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(6800, 6809, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(6832, 6846, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(6912, 6916, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(6917, 6963, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(6964, 6980, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(6981, 6987, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(6992, 7001, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(7019, 7027, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(7040, 7042, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(7043, 7072, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(7073, 7085, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(7086, 7087, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(7088, 7097, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(7098, 7141, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(7142, 7155, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(7168, 7203, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(7204, 7223, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(7232, 7241, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(7245, 7247, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(7248, 7257, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(7258, 7293, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(7296, 7304, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(7312, 7354, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(7357, 7359, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(7376, 7378, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(7380, 7400, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(7401, 7404, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(7405, 7405, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(7406, 7409, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(7410, 7412, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(7413, 7414, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(7415, 7417, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(7424, 7615, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(7616, 7673, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(7675, 7679, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(7680, 7957, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(7960, 7965, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(7968, 8005, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8008, 8013, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8016, 8023, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8025, 8025, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8027, 8027, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8029, 8029, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8031, 8061, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8064, 8116, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8118, 8124, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8126, 8126, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8130, 8132, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8134, 8140, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8144, 8147, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8150, 8155, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8160, 8172, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8178, 8180, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8182, 8188, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8192, 8198, src__engine.CharProperty.WSegSpace)), dart.const(new (UnicodeRangeOfCharProperty()).new(8200, 8202, src__engine.CharProperty.WSegSpace)), dart.const(new (UnicodeRangeOfCharProperty()).new(8204, 8204, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(8205, 8205, src__engine.CharProperty.ZWJ)), dart.const(new (UnicodeRangeOfCharProperty()).new(8206, 8207, src__engine.CharProperty.Format)), dart.const(new (UnicodeRangeOfCharProperty()).new(8216, 8217, src__engine.CharProperty.MidNumLet)), dart.const(new (UnicodeRangeOfCharProperty()).new(8228, 8228, src__engine.CharProperty.MidNumLet)), dart.const(new (UnicodeRangeOfCharProperty()).new(8231, 8231, src__engine.CharProperty.MidLetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8232, 8233, src__engine.CharProperty.Newline)), dart.const(new (UnicodeRangeOfCharProperty()).new(8234, 8238, src__engine.CharProperty.Format)), dart.const(new (UnicodeRangeOfCharProperty()).new(8239, 8239, src__engine.CharProperty.ExtendNumLet)), dart.const(new (UnicodeRangeOfCharProperty()).new(8255, 8256, src__engine.CharProperty.ExtendNumLet)), dart.const(new (UnicodeRangeOfCharProperty()).new(8260, 8260, src__engine.CharProperty.MidNum)), dart.const(new (UnicodeRangeOfCharProperty()).new(8276, 8276, src__engine.CharProperty.ExtendNumLet)), dart.const(new (UnicodeRangeOfCharProperty()).new(8287, 8287, src__engine.CharProperty.WSegSpace)), dart.const(new (UnicodeRangeOfCharProperty()).new(8288, 8292, src__engine.CharProperty.Format)), dart.const(new (UnicodeRangeOfCharProperty()).new(8294, 8303, src__engine.CharProperty.Format)), dart.const(new (UnicodeRangeOfCharProperty()).new(8305, 8305, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8319, 8319, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8336, 8348, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8400, 8432, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(8450, 8450, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8455, 8455, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8458, 8467, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8469, 8469, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8473, 8477, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8484, 8484, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8486, 8486, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8488, 8488, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8490, 8493, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8495, 8505, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8508, 8511, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8517, 8521, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8526, 8526, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(8544, 8584, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(9398, 9449, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(11264, 11310, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(11312, 11358, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(11360, 11492, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(11499, 11502, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(11503, 11505, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(11506, 11507, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(11520, 11557, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(11559, 11559, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(11565, 11565, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(11568, 11623, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(11631, 11631, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(11647, 11647, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(11648, 11670, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(11680, 11686, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(11688, 11694, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(11696, 11702, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(11704, 11710, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(11712, 11718, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(11720, 11726, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(11728, 11734, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(11736, 11742, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(11744, 11775, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(11823, 11823, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(12288, 12288, src__engine.CharProperty.WSegSpace)), dart.const(new (UnicodeRangeOfCharProperty()).new(12293, 12293, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(12330, 12335, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(12337, 12341, src__engine.CharProperty.Katakana)), dart.const(new (UnicodeRangeOfCharProperty()).new(12347, 12348, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(12441, 12442, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(12443, 12444, src__engine.CharProperty.Katakana)), dart.const(new (UnicodeRangeOfCharProperty()).new(12448, 12538, src__engine.CharProperty.Katakana)), dart.const(new (UnicodeRangeOfCharProperty()).new(12540, 12543, src__engine.CharProperty.Katakana)), dart.const(new (UnicodeRangeOfCharProperty()).new(12549, 12591, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(12593, 12686, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(12704, 12730, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(12784, 12799, src__engine.CharProperty.Katakana)), dart.const(new (UnicodeRangeOfCharProperty()).new(13008, 13054, src__engine.CharProperty.Katakana)), dart.const(new (UnicodeRangeOfCharProperty()).new(13056, 13143, src__engine.CharProperty.Katakana)), dart.const(new (UnicodeRangeOfCharProperty()).new(40960, 42124, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(42192, 42237, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(42240, 42508, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(42512, 42527, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(42528, 42537, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(42538, 42539, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(42560, 42606, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(42607, 42610, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(42612, 42621, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(42623, 42653, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(42654, 42655, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(42656, 42735, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(42736, 42737, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(42775, 42937, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(42999, 43009, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43010, 43010, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43011, 43013, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43014, 43014, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43015, 43018, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43019, 43019, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43020, 43042, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43043, 43047, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43072, 43123, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43136, 43137, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43138, 43187, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43188, 43205, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43216, 43225, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(43232, 43249, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43250, 43255, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43259, 43259, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43261, 43262, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43263, 43263, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43264, 43273, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(43274, 43301, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43302, 43309, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43312, 43334, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43335, 43347, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43360, 43388, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43392, 43395, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43396, 43442, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43443, 43456, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43471, 43471, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43472, 43481, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(43493, 43493, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43504, 43513, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(43520, 43560, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43561, 43574, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43584, 43586, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43587, 43587, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43588, 43595, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43596, 43597, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43600, 43609, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(43643, 43645, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43696, 43696, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43698, 43700, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43703, 43704, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43710, 43711, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43713, 43713, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43744, 43754, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43755, 43759, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43762, 43764, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43765, 43766, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(43777, 43782, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43785, 43790, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43793, 43798, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43808, 43814, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43816, 43822, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43824, 43877, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(43888, 44002, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(44003, 44010, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(44012, 44013, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(44016, 44025, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(44032, 55203, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(55216, 55238, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(55243, 55291, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(64256, 64262, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(64275, 64279, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(64285, 64285, src__engine.CharProperty.HebrewLetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(64286, 64286, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(64287, 64296, src__engine.CharProperty.HebrewLetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(64298, 64310, src__engine.CharProperty.HebrewLetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(64312, 64316, src__engine.CharProperty.HebrewLetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(64318, 64318, src__engine.CharProperty.HebrewLetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(64320, 64321, src__engine.CharProperty.HebrewLetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(64323, 64324, src__engine.CharProperty.HebrewLetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(64326, 64335, src__engine.CharProperty.HebrewLetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(64336, 64433, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(64467, 64829, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(64848, 64911, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(64914, 64967, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65008, 65019, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65024, 65039, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(65040, 65040, src__engine.CharProperty.MidNum)), dart.const(new (UnicodeRangeOfCharProperty()).new(65043, 65043, src__engine.CharProperty.MidLetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65044, 65044, src__engine.CharProperty.MidNum)), dart.const(new (UnicodeRangeOfCharProperty()).new(65056, 65071, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(65075, 65076, src__engine.CharProperty.ExtendNumLet)), dart.const(new (UnicodeRangeOfCharProperty()).new(65101, 65103, src__engine.CharProperty.ExtendNumLet)), dart.const(new (UnicodeRangeOfCharProperty()).new(65104, 65104, src__engine.CharProperty.MidNum)), dart.const(new (UnicodeRangeOfCharProperty()).new(65106, 65106, src__engine.CharProperty.MidNumLet)), dart.const(new (UnicodeRangeOfCharProperty()).new(65108, 65108, src__engine.CharProperty.MidNum)), dart.const(new (UnicodeRangeOfCharProperty()).new(65109, 65109, src__engine.CharProperty.MidLetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65136, 65140, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65142, 65276, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65279, 65279, src__engine.CharProperty.Format)), dart.const(new (UnicodeRangeOfCharProperty()).new(65287, 65287, src__engine.CharProperty.MidNumLet)), dart.const(new (UnicodeRangeOfCharProperty()).new(65292, 65292, src__engine.CharProperty.MidNum)), dart.const(new (UnicodeRangeOfCharProperty()).new(65294, 65294, src__engine.CharProperty.MidNumLet)), dart.const(new (UnicodeRangeOfCharProperty()).new(65306, 65306, src__engine.CharProperty.MidLetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65307, 65307, src__engine.CharProperty.MidNum)), dart.const(new (UnicodeRangeOfCharProperty()).new(65313, 65338, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65343, 65343, src__engine.CharProperty.ExtendNumLet)), dart.const(new (UnicodeRangeOfCharProperty()).new(65345, 65370, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65382, 65437, src__engine.CharProperty.Katakana)), dart.const(new (UnicodeRangeOfCharProperty()).new(65438, 65439, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(65440, 65470, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65474, 65479, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65482, 65487, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65490, 65495, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65498, 65500, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65529, 65531, src__engine.CharProperty.Format)), dart.const(new (UnicodeRangeOfCharProperty()).new(65536, 65547, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65549, 65574, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65576, 65594, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65596, 65597, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65599, 65613, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65616, 65629, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65664, 65786, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(65856, 65908, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(66045, 66045, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(66176, 66204, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(66208, 66256, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(66272, 66272, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(66304, 66335, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(66349, 66378, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(66384, 66421, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(66422, 66426, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(66432, 66461, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(66464, 66499, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(66504, 66511, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(66513, 66517, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(66560, 66717, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(66720, 66729, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(66736, 66771, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(66776, 66811, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(66816, 66855, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(66864, 66915, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(67072, 67382, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(67392, 67413, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(67424, 67431, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(67584, 67589, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(67592, 67592, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(67594, 67637, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(67639, 67640, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(67644, 67644, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(67647, 67669, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(67680, 67702, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(67712, 67742, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(67808, 67826, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(67828, 67829, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(67840, 67861, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(67872, 67897, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(67968, 68023, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(68030, 68031, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(68096, 68096, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(68097, 68099, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(68101, 68102, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(68108, 68111, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(68112, 68115, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(68117, 68119, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(68121, 68149, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(68152, 68154, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(68159, 68159, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(68192, 68220, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(68224, 68252, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(68288, 68295, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(68297, 68324, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(68325, 68326, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(68352, 68405, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(68416, 68437, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(68448, 68466, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(68480, 68497, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(68608, 68680, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(68736, 68786, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(68800, 68850, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(68864, 68899, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(68900, 68903, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(68912, 68921, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(69376, 69404, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(69415, 69415, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(69424, 69445, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(69446, 69456, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(69632, 69634, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(69635, 69687, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(69688, 69702, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(69734, 69743, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(69759, 69762, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(69763, 69807, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(69808, 69818, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(69821, 69821, src__engine.CharProperty.Format)), dart.const(new (UnicodeRangeOfCharProperty()).new(69837, 69837, src__engine.CharProperty.Format)), dart.const(new (UnicodeRangeOfCharProperty()).new(69840, 69864, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(69872, 69881, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(69888, 69890, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(69891, 69926, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(69927, 69940, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(69942, 69951, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(69956, 69956, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(69957, 69958, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(69968, 70002, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70003, 70003, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(70006, 70006, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70016, 70018, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(70019, 70066, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70067, 70080, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(70081, 70084, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70089, 70092, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(70096, 70105, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(70106, 70106, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70108, 70108, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70144, 70161, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70163, 70187, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70188, 70199, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(70206, 70206, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(70272, 70278, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70280, 70280, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70282, 70285, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70287, 70301, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70303, 70312, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70320, 70366, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70367, 70378, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(70384, 70393, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(70400, 70403, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(70405, 70412, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70415, 70416, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70419, 70440, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70442, 70448, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70450, 70451, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70453, 70457, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70459, 70460, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(70461, 70461, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70462, 70468, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(70471, 70472, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(70475, 70477, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(70480, 70480, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70487, 70487, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(70493, 70497, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70498, 70499, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(70502, 70508, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(70512, 70516, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(70656, 70708, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70709, 70726, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(70727, 70730, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70736, 70745, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(70750, 70750, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(70784, 70831, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70832, 70851, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(70852, 70853, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70855, 70855, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(70864, 70873, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(71040, 71086, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(71087, 71093, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(71096, 71104, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(71128, 71131, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(71132, 71133, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(71168, 71215, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(71216, 71232, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(71236, 71236, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(71248, 71257, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(71296, 71338, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(71339, 71351, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(71360, 71369, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(71453, 71467, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(71472, 71481, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(71680, 71723, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(71724, 71738, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(71840, 71903, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(71904, 71913, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(71935, 71935, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(72192, 72192, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(72193, 72202, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(72203, 72242, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(72243, 72249, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(72250, 72250, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(72251, 72254, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(72263, 72263, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(72272, 72272, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(72273, 72283, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(72284, 72323, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(72326, 72329, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(72330, 72345, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(72349, 72349, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(72384, 72440, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(72704, 72712, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(72714, 72750, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(72751, 72758, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(72760, 72767, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(72768, 72768, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(72784, 72793, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(72818, 72847, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(72850, 72871, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(72873, 72886, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(72960, 72966, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(72968, 72969, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(72971, 73008, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(73009, 73014, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(73018, 73018, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(73020, 73021, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(73023, 73029, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(73030, 73030, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(73031, 73031, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(73040, 73049, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(73056, 73061, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(73063, 73064, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(73066, 73097, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(73098, 73102, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(73104, 73105, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(73107, 73111, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(73112, 73112, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(73120, 73129, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(73440, 73458, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(73459, 73462, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(73728, 74649, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(74752, 74862, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(74880, 75075, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(77824, 78894, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(82944, 83526, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(92160, 92728, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(92736, 92766, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(92768, 92777, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(92880, 92909, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(92912, 92916, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(92928, 92975, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(92976, 92982, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(92992, 92995, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(93008, 93017, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(93027, 93047, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(93053, 93071, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(93760, 93823, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(93952, 94020, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(94032, 94032, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(94033, 94078, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(94095, 94098, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(94099, 94111, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(94176, 94177, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(110592, 110592, src__engine.CharProperty.Katakana)), dart.const(new (UnicodeRangeOfCharProperty()).new(113664, 113770, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(113776, 113788, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(113792, 113800, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(113808, 113817, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(113821, 113822, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(113824, 113827, src__engine.CharProperty.Format)), dart.const(new (UnicodeRangeOfCharProperty()).new(119141, 119145, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(119149, 119154, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(119155, 119162, src__engine.CharProperty.Format)), dart.const(new (UnicodeRangeOfCharProperty()).new(119163, 119170, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(119173, 119179, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(119210, 119213, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(119362, 119364, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(119808, 119892, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(119894, 119964, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(119966, 119967, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(119970, 119970, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(119973, 119974, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(119977, 119980, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(119982, 119993, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(119995, 119995, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(119997, 120003, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120005, 120069, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120071, 120074, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120077, 120084, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120086, 120092, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120094, 120121, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120123, 120126, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120128, 120132, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120134, 120134, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120138, 120144, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120146, 120485, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120488, 120512, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120514, 120538, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120540, 120570, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120572, 120596, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120598, 120628, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120630, 120654, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120656, 120686, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120688, 120712, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120714, 120744, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120746, 120770, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120772, 120779, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(120782, 120831, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(121344, 121398, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(121403, 121452, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(121461, 121461, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(121476, 121476, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(121499, 121503, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(121505, 121519, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(122880, 122886, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(122888, 122904, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(122907, 122913, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(122915, 122916, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(122918, 122922, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(124928, 125124, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(125136, 125142, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(125184, 125251, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(125252, 125258, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(125264, 125273, src__engine.CharProperty.Numeric)), dart.const(new (UnicodeRangeOfCharProperty()).new(126464, 126467, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126469, 126495, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126497, 126498, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126500, 126500, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126503, 126503, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126505, 126514, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126516, 126519, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126521, 126521, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126523, 126523, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126530, 126530, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126535, 126535, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126537, 126537, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126539, 126539, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126541, 126543, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126545, 126546, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126548, 126548, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126551, 126551, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126553, 126553, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126555, 126555, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126557, 126557, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126559, 126559, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126561, 126562, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126564, 126564, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126567, 126570, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126572, 126578, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126580, 126583, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126585, 126588, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126590, 126590, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126592, 126601, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126603, 126619, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126625, 126627, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126629, 126633, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(126635, 126651, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(127280, 127305, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(127312, 127337, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(127344, 127369, src__engine.CharProperty.ALetter)), dart.const(new (UnicodeRangeOfCharProperty()).new(127462, 127487, src__engine.CharProperty.RegionalIndicator)), dart.const(new (UnicodeRangeOfCharProperty()).new(127995, 127999, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(917505, 917505, src__engine.CharProperty.Format)), dart.const(new (UnicodeRangeOfCharProperty()).new(917536, 917631, src__engine.CharProperty.Extend)), dart.const(new (UnicodeRangeOfCharProperty()).new(917760, 917999, src__engine.CharProperty.Extend))], UnicodeRangeOfCharProperty())));
    }
  });
  src__engine._FindBreakDirection = class _FindBreakDirection extends core.Object {
    toString() {
      return {
        0: "_FindBreakDirection.forward",
        1: "_FindBreakDirection.backward"
      }[this.index];
    }
  };
  (src__engine._FindBreakDirection.new = function(x) {
    this.index = x;
  }).prototype = src__engine._FindBreakDirection.prototype;
  dart.addTypeTests(src__engine._FindBreakDirection);
  dart.setFieldSignature(src__engine._FindBreakDirection, () => ({
    __proto__: dart.getFields(src__engine._FindBreakDirection.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(src__engine._FindBreakDirection, ['toString']);
  src__engine._FindBreakDirection.forward = dart.const(new src__engine._FindBreakDirection.new(0));
  src__engine._FindBreakDirection.backward = dart.const(new src__engine._FindBreakDirection.new(1));
  src__engine._FindBreakDirection.values = dart.constList([src__engine._FindBreakDirection.forward, src__engine._FindBreakDirection.backward], src__engine._FindBreakDirection);
  src__engine.WordBreaker = class WordBreaker extends core.Object {
    static nextBreakIndex(text, index) {
      return src__engine.WordBreaker._findBreakIndex(src__engine._FindBreakDirection.forward, text, index);
    }
    static prevBreakIndex(text, index) {
      return src__engine.WordBreaker._findBreakIndex(src__engine._FindBreakDirection.backward, text, index);
    }
    static _findBreakIndex(direction, text, index) {
      let step = null, min = null, max = null;
      if (direction === src__engine._FindBreakDirection.forward) {
        step = 1;
        min = 0;
        max = text.length - 1;
      } else {
        step = -1;
        min = 1;
        max = text.length;
      }
      let i = index;
      while (dart.notNull(i) >= dart.notNull(min) && dart.notNull(i) <= dart.notNull(max)) {
        i = dart.notNull(i) + dart.notNull(step);
        if (dart.test(src__engine.WordBreaker._isBreak(text, i))) {
          break;
        }
      }
      return i;
    }
    static _isBreak(text, index) {
      if (dart.notNull(index) <= 0 || dart.notNull(index) >= text.length) {
        return true;
      }
      if (dart.test(src__engine.WordBreaker._isUtf16Surrogate(text[$codeUnitAt](dart.notNull(index) - 1)))) {
        return false;
      }
      let immediateRight = src__engine.getCharProperty(text, index);
      let immediateLeft = src__engine.getCharProperty(text, dart.notNull(index) - 1);
      if (immediateLeft === src__engine.CharProperty.CR && immediateRight === src__engine.CharProperty.LF) return false;
      if (dart.test(src__engine.WordBreaker._oneOf(immediateLeft, src__engine.CharProperty.Newline, src__engine.CharProperty.CR, src__engine.CharProperty.LF))) return true;
      if (dart.test(src__engine.WordBreaker._oneOf(immediateRight, src__engine.CharProperty.Newline, src__engine.CharProperty.CR, src__engine.CharProperty.LF))) return true;
      if (immediateLeft === src__engine.CharProperty.WSegSpace && immediateRight === src__engine.CharProperty.WSegSpace) return false;
      if (dart.test(src__engine.WordBreaker._oneOf(immediateRight, src__engine.CharProperty.Extend, src__engine.CharProperty.Format, src__engine.CharProperty.ZWJ))) {
        return false;
      }
      let l = 0;
      while (dart.test(src__engine.WordBreaker._oneOf(immediateLeft, src__engine.CharProperty.Extend, src__engine.CharProperty.Format, src__engine.CharProperty.ZWJ))) {
        l++;
        if (dart.notNull(index) - l - 1 < 0) {
          return true;
        }
        immediateLeft = src__engine.getCharProperty(text, dart.notNull(index) - l - 1);
      }
      if (dart.test(src__engine.WordBreaker._isAHLetter(immediateLeft)) && dart.test(src__engine.WordBreaker._isAHLetter(immediateRight))) return false;
      let r = 0;
      let nextRight = null;
      do {
        r++;
        nextRight = src__engine.getCharProperty(text, dart.notNull(index) + r);
      } while (dart.test(src__engine.WordBreaker._oneOf(nextRight, src__engine.CharProperty.Extend, src__engine.CharProperty.Format, src__engine.CharProperty.ZWJ)));
      let nextLeft = null;
      do {
        l++;
        nextLeft = src__engine.getCharProperty(text, dart.notNull(index) - l - 1);
      } while (dart.test(src__engine.WordBreaker._oneOf(nextLeft, src__engine.CharProperty.Extend, src__engine.CharProperty.Format, src__engine.CharProperty.ZWJ)));
      if (dart.test(src__engine.WordBreaker._isAHLetter(immediateLeft)) && dart.test(src__engine.WordBreaker._oneOf(immediateRight, src__engine.CharProperty.MidLetter, src__engine.CharProperty.MidNumLet, src__engine.CharProperty.SingleQuote)) && dart.test(src__engine.WordBreaker._isAHLetter(nextRight))) {
        return false;
      }
      if (dart.test(src__engine.WordBreaker._isAHLetter(nextLeft)) && dart.test(src__engine.WordBreaker._oneOf(immediateLeft, src__engine.CharProperty.MidLetter, src__engine.CharProperty.MidNumLet, src__engine.CharProperty.SingleQuote)) && dart.test(src__engine.WordBreaker._isAHLetter(immediateRight))) {
        return false;
      }
      if (immediateLeft === src__engine.CharProperty.HebrewLetter && immediateRight === src__engine.CharProperty.SingleQuote) return false;
      if (immediateLeft === src__engine.CharProperty.HebrewLetter && immediateRight === src__engine.CharProperty.DoubleQuote && nextRight === src__engine.CharProperty.HebrewLetter) return false;
      if (nextLeft === src__engine.CharProperty.HebrewLetter && immediateLeft === src__engine.CharProperty.DoubleQuote && immediateRight === src__engine.CharProperty.HebrewLetter) return false;
      if (immediateLeft === src__engine.CharProperty.Numeric && immediateRight === src__engine.CharProperty.Numeric) return false;
      if (dart.test(src__engine.WordBreaker._isAHLetter(immediateLeft)) && immediateRight === src__engine.CharProperty.Numeric) return false;
      if (immediateLeft === src__engine.CharProperty.Numeric && dart.test(src__engine.WordBreaker._isAHLetter(immediateRight))) return false;
      if (nextLeft === src__engine.CharProperty.Numeric && dart.test(src__engine.WordBreaker._oneOf(immediateLeft, src__engine.CharProperty.MidNum, src__engine.CharProperty.MidNumLet, src__engine.CharProperty.SingleQuote)) && immediateRight === src__engine.CharProperty.Numeric) {
        return false;
      }
      if (immediateLeft === src__engine.CharProperty.Numeric && dart.test(src__engine.WordBreaker._oneOf(immediateRight, src__engine.CharProperty.MidNum, src__engine.CharProperty.MidNumLet, src__engine.CharProperty.SingleQuote)) && nextRight === src__engine.CharProperty.Numeric) {
        return false;
      }
      if (immediateLeft === src__engine.CharProperty.Katakana && immediateRight === src__engine.CharProperty.Katakana) return false;
      if (dart.test(src__engine.WordBreaker._oneOf(immediateLeft, src__engine.CharProperty.ALetter, src__engine.CharProperty.HebrewLetter, src__engine.CharProperty.Numeric, src__engine.CharProperty.Katakana, src__engine.CharProperty.ExtendNumLet)) && immediateRight === src__engine.CharProperty.ExtendNumLet) {
        return false;
      }
      if (immediateLeft === src__engine.CharProperty.ExtendNumLet && dart.test(src__engine.WordBreaker._oneOf(immediateRight, src__engine.CharProperty.ALetter, src__engine.CharProperty.HebrewLetter, src__engine.CharProperty.Numeric, src__engine.CharProperty.Katakana))) {
        return false;
      }
      return true;
    }
    static _isUtf16Surrogate(value) {
      return (dart.notNull(value) & 63488) === 55296;
    }
    static _oneOf(value, choice1, choice2, choice3, choice4, choice5) {
      if (choice3 === void 0) choice3 = null;
      if (choice4 === void 0) choice4 = null;
      if (choice5 === void 0) choice5 = null;
      if (value == choice1) return true;
      if (value == choice2) return true;
      if (choice3 != null && value == choice3) return true;
      if (choice4 != null && value == choice4) return true;
      if (choice5 != null && value == choice5) return true;
      return false;
    }
    static _isAHLetter(property) {
      return src__engine.WordBreaker._oneOf(property, src__engine.CharProperty.ALetter, src__engine.CharProperty.HebrewLetter);
    }
  };
  (src__engine.WordBreaker.new = function() {
  }).prototype = src__engine.WordBreaker.prototype;
  dart.addTypeTests(src__engine.WordBreaker);
  dart.defineLazy(src__engine, {
    /*src__engine._debugVisibleTextEditing*/get _debugVisibleTextEditing() {
      return false;
    }
  });
  src__engine._emptyCallback = function(_) {
  };
  src__engine._styleEditingElement = function(domElement) {
    domElement.style[$position] = "fixed";
    domElement.style[$whiteSpace] = "pre";
    if (false) {
      domElement.style[$bottom] = "0";
      domElement.style[$right] = "0";
      domElement.style[$font] = "24px sans-serif";
      domElement.style[$color] = "purple";
      domElement.style[$backgroundColor] = "pink";
    } else {
      domElement.style[$overflow] = "hidden";
      domElement.style[$transform] = "translate(-99999px, -99999px)";
      domElement.style[$width] = "1px";
      domElement.style[$height] = "1px";
    }
    if (src__engine.browserEngine === src__engine.BrowserEngine.webkit) {
      FutureOfNull()._check(html.window[$animationFrame].then(core.Null, dart.fn(_ => {
        domElement.style[$position] = "absolute";
        domElement.style[$bottom] = "0";
        domElement.style[$right] = "0";
      }, numToNull())));
    }
  };
  src__engine._createInputElement = function() {
    let input = html.InputElement.new();
    src__engine._styleEditingElement(input);
    return input;
  };
  src__engine._createTextAreaElement = function() {
    let textarea = html.TextAreaElement.new();
    src__engine._styleEditingElement(textarea);
    return textarea;
  };
  src__engine.EditingState = class EditingState extends core.Object {
    toFlutter() {
      return new (IdentityMapOfString$dynamic()).from(["text", this.text, "selectionBase", this.baseOffset, "selectionExtent", this.extentOffset]);
    }
    get text() {
      return this[text$];
    }
    set text(value) {
      super.text = value;
    }
    get baseOffset() {
      return this[baseOffset$];
    }
    set baseOffset(value) {
      super.baseOffset = value;
    }
    get extentOffset() {
      return this[extentOffset$];
    }
    set extentOffset(value) {
      super.extentOffset = value;
    }
    get isValid() {
      return dart.notNull(this.baseOffset) >= 0 && dart.notNull(this.extentOffset) >= 0;
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(this[$runtimeType], dart.runtimeType(other))) return false;
      let typedOther = src__engine.EditingState._check(other);
      return this.text == typedOther.text && this.baseOffset == typedOther.baseOffset && this.extentOffset == typedOther.extentOffset;
    }
    toString() {
      return dart.test(src__engine.assertionsEnabled) ? "EditingState(\"" + dart.str(this.text) + "\", base:" + dart.str(this.baseOffset) + ", extent:" + dart.str(this.extentOffset) + ")" : super.toString();
    }
  };
  (src__engine.EditingState.new = function(opts) {
    let text = opts && 'text' in opts ? opts.text : null;
    let baseOffset = opts && 'baseOffset' in opts ? opts.baseOffset : 0;
    let extentOffset = opts && 'extentOffset' in opts ? opts.extentOffset : 0;
    this[text$] = text;
    this[baseOffset$] = baseOffset;
    this[extentOffset$] = extentOffset;
  }).prototype = src__engine.EditingState.prototype;
  (src__engine.EditingState.fromFlutter = function(flutterEditingState) {
    this[text$] = core.String._check(flutterEditingState[$_get]("text"));
    this[baseOffset$] = core.int._check(flutterEditingState[$_get]("selectionBase"));
    this[extentOffset$] = core.int._check(flutterEditingState[$_get]("selectionExtent"));
  }).prototype = src__engine.EditingState.prototype;
  dart.addTypeTests(src__engine.EditingState);
  const text$ = Symbol("EditingState.text");
  const baseOffset$ = Symbol("EditingState.baseOffset");
  const extentOffset$ = Symbol("EditingState.extentOffset");
  dart.setMethodSignature(src__engine.EditingState, () => ({
    __proto__: dart.getMethods(src__engine.EditingState.__proto__),
    toFlutter: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setGetterSignature(src__engine.EditingState, () => ({
    __proto__: dart.getGetters(src__engine.EditingState.__proto__),
    isValid: core.bool
  }));
  dart.setFieldSignature(src__engine.EditingState, () => ({
    __proto__: dart.getFields(src__engine.EditingState.__proto__),
    text: dart.finalFieldType(core.String),
    baseOffset: dart.finalFieldType(core.int),
    extentOffset: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(src__engine.EditingState, ['_equals', 'toString']);
  src__engine.InputType = class InputType extends core.Object {
    toString() {
      return {
        0: "InputType.text",
        1: "InputType.multiline"
      }[this.index];
    }
  };
  (src__engine.InputType.new = function(x) {
    this.index = x;
  }).prototype = src__engine.InputType.prototype;
  dart.addTypeTests(src__engine.InputType);
  dart.setFieldSignature(src__engine.InputType, () => ({
    __proto__: dart.getFields(src__engine.InputType.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(src__engine.InputType, ['toString']);
  src__engine.InputType.text = dart.const(new src__engine.InputType.new(0));
  src__engine.InputType.multiline = dart.const(new src__engine.InputType.new(1));
  src__engine.InputType.values = dart.constList([src__engine.InputType.text, src__engine.InputType.multiline], src__engine.InputType);
  src__engine._getInputTypeFromString = function(inputType) {
    switch (inputType) {
      case "TextInputType.multiline":
      {
        return src__engine.InputType.multiline;
      }
      case "TextInputType.text":
      default:
      {
        return src__engine.InputType.text;
      }
    }
  };
  src__engine.InputConfiguration = class InputConfiguration extends core.Object {
    get inputType() {
      return this[inputType$];
    }
    set inputType(value) {
      super.inputType = value;
    }
    get obscureText() {
      return this[obscureText$];
    }
    set obscureText(value) {
      super.obscureText = value;
    }
  };
  (src__engine.InputConfiguration.new = function(opts) {
    let inputType = opts && 'inputType' in opts ? opts.inputType : null;
    let obscureText = opts && 'obscureText' in opts ? opts.obscureText : false;
    this[inputType$] = inputType;
    this[obscureText$] = obscureText;
  }).prototype = src__engine.InputConfiguration.prototype;
  (src__engine.InputConfiguration.fromFlutter = function(flutterInputConfiguration) {
    this[inputType$] = src__engine._getInputTypeFromString(core.String._check(dart.dindex(flutterInputConfiguration[$_get]("inputType"), "name")));
    this[obscureText$] = core.bool._check(flutterInputConfiguration[$_get]("obscureText"));
  }).prototype = src__engine.InputConfiguration.prototype;
  dart.addTypeTests(src__engine.InputConfiguration);
  const inputType$ = Symbol("InputConfiguration.inputType");
  const obscureText$ = Symbol("InputConfiguration.obscureText");
  dart.setFieldSignature(src__engine.InputConfiguration, () => ({
    __proto__: dart.getFields(src__engine.InputConfiguration.__proto__),
    inputType: dart.finalFieldType(src__engine.InputType),
    obscureText: dart.finalFieldType(core.bool)
  }));
  src__engine.ElementType = class ElementType extends core.Object {
    toString() {
      return {
        0: "ElementType.input",
        1: "ElementType.textarea",
        2: "ElementType.contentEditable"
      }[this.index];
    }
  };
  (src__engine.ElementType.new = function(x) {
    this.index = x;
  }).prototype = src__engine.ElementType.prototype;
  dart.addTypeTests(src__engine.ElementType);
  dart.setFieldSignature(src__engine.ElementType, () => ({
    __proto__: dart.getFields(src__engine.ElementType.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(src__engine.ElementType, ['toString']);
  src__engine.ElementType.input = dart.const(new src__engine.ElementType.new(0));
  src__engine.ElementType.textarea = dart.const(new src__engine.ElementType.new(1));
  src__engine.ElementType.contentEditable = dart.const(new src__engine.ElementType.new(2));
  src__engine.ElementType.values = dart.constList([src__engine.ElementType.input, src__engine.ElementType.textarea, src__engine.ElementType.contentEditable], src__engine.ElementType);
  src__engine._getTypeFromElement = function(domElement) {
    if (html.InputElement.is(domElement)) {
      return src__engine.ElementType.input;
    }
    if (html.TextAreaElement.is(domElement)) {
      return src__engine.ElementType.textarea;
    }
    let contentEditable = domElement.contentEditable;
    if (contentEditable != null && contentEditable[$isNotEmpty] && contentEditable !== "inherit") {
      return src__engine.ElementType.contentEditable;
    }
    return null;
  };
  const _enabled = dart.privateName(src__engine, "_enabled");
  const _lastEditingState = dart.privateName(src__engine, "_lastEditingState");
  const _onChange = dart.privateName(src__engine, "_onChange");
  const _subscriptions = dart.privateName(src__engine, "_subscriptions");
  const _elementType = dart.privateName(src__engine, "_elementType");
  const _initDomElement = dart.privateName(src__engine, "_initDomElement");
  const _refocus = dart.privateName(src__engine, "_refocus");
  const _handleChange = dart.privateName(src__engine, "_handleChange");
  const _removeDomElement = dart.privateName(src__engine, "_removeDomElement");
  const _createRange = dart.privateName(src__engine, "_createRange");
  const _swapDomElement = dart.privateName(src__engine, "_swapDomElement");
  src__engine.TextEditingElement = class TextEditingElement extends core.Object {
    get domElement() {
      return this[domElement];
    }
    set domElement(value) {
      this[domElement] = value;
    }
    get [_elementType]() {
      let type = src__engine._getTypeFromElement(this.domElement);
      if (!(type != null)) dart.assertFailed();
      return type;
    }
    enable(inputConfig, opts) {
      let onChange = opts && 'onChange' in opts ? opts.onChange : null;
      if (!!dart.test(this[_enabled])) dart.assertFailed();
      this[_initDomElement](inputConfig);
      this[_enabled] = true;
      this[_onChange] = onChange;
      if (src__engine.browserEngine === src__engine.BrowserEngine.blink || src__engine.browserEngine === src__engine.BrowserEngine.unknown) {
        this[_subscriptions][$add](this.domElement[$onBlur].listen(dart.fn(_ => {
          if (dart.test(this[_enabled])) {
            this[_refocus]();
          }
        }, EventToNull())));
      }
      this.domElement.focus();
      if (this[_lastEditingState] != null) {
        this.setEditingState(this[_lastEditingState]);
      }
      this[_subscriptions][$add](html.document[$onSelectionChange].listen(dart.bind(this, _handleChange)));
      this[_subscriptions][$add](this.domElement[$onInput].listen(dart.bind(this, _handleChange)));
    }
    disable() {
      if (!dart.test(this[_enabled])) dart.assertFailed();
      this[_enabled] = false;
      this[_lastEditingState] = null;
      for (let i = 0; i < dart.notNull(this[_subscriptions][$length]); i++) {
        this[_subscriptions][$_get](i).cancel();
      }
      this[_subscriptions][$clear]();
      this[_removeDomElement]();
    }
    [_initDomElement](inputConfig) {
      switch (inputConfig.inputType) {
        case src__engine.InputType.text:
        {
          this.domElement = src__engine._createInputElement();
          break;
        }
        case src__engine.InputType.multiline:
        {
          this.domElement = src__engine._createTextAreaElement();
          break;
        }
        default:
        {
          dart.throw(new core.UnsupportedError.new("Unsupported input type: " + dart.str(inputConfig.inputType)));
        }
      }
      html.document.body[$append](this.domElement);
    }
    [_removeDomElement]() {
      this.domElement[$remove]();
      this.domElement = null;
    }
    [_refocus]() {
      this.domElement.focus();
    }
    setEditingState(editingState) {
      this[_lastEditingState] = editingState;
      if (!dart.test(this[_enabled]) || !dart.test(editingState.isValid)) {
        return;
      }
      switch (this[_elementType]) {
        case src__engine.ElementType.input:
        {
          let input = html.InputElement._check(this.domElement);
          input.value = editingState.text;
          input.setSelectionRange(editingState.baseOffset, editingState.extentOffset);
          break;
        }
        case src__engine.ElementType.textarea:
        {
          let textarea = html.TextAreaElement._check(this.domElement);
          textarea.value = editingState.text;
          textarea.setSelectionRange(editingState.baseOffset, editingState.extentOffset);
          break;
        }
        case src__engine.ElementType.contentEditable:
        {
          src__engine.domRenderer.clearDom(this.domElement);
          this.domElement[$append](html.Text.new(editingState.text));
          let _ = html.window.getSelection();
          _.removeAllRanges();
          _.addRange(this[_createRange](editingState));
          break;
        }
      }
      this.domElement.focus();
    }
    [_swapDomElement](newElementType) {}
    [_handleChange](event) {
      this[_lastEditingState] = this.calculateEditingState();
      this[_onChange](this[_lastEditingState]);
    }
    calculateEditingState() {
      if (!(this.domElement != null)) dart.assertFailed();
      let editingState = null;
      switch (this[_elementType]) {
        case src__engine.ElementType.input:
        {
          let inputElement = html.InputElement._check(this.domElement);
          editingState = new src__engine.EditingState.new({text: inputElement.value, baseOffset: inputElement.selectionStart, extentOffset: inputElement.selectionEnd});
          break;
        }
        case src__engine.ElementType.textarea:
        {
          let textAreaElement = html.TextAreaElement._check(this.domElement);
          editingState = new src__engine.EditingState.new({text: textAreaElement.value, baseOffset: textAreaElement.selectionStart, extentOffset: textAreaElement.selectionEnd});
          break;
        }
        case src__engine.ElementType.contentEditable:
        {
          let text = core.String._check(js_util.getProperty(this.domElement, "innerText"));
          if (dart.notNull(this.domElement.childNodes[$length]) > 1) {
            let prevSelectionEnd = math.max(core.int, this[_lastEditingState].baseOffset, this[_lastEditingState].extentOffset);
            let prevText = this[_lastEditingState].text;
            let offsetFromEnd = prevText.length - prevSelectionEnd;
            let newSelectionExtent = text.length - offsetFromEnd;
            editingState = new src__engine.EditingState.new({text: text, baseOffset: newSelectionExtent, extentOffset: newSelectionExtent});
          } else {
            let selection = html.window.getSelection();
            editingState = new src__engine.EditingState.new({text: text, baseOffset: selection.baseOffset, extentOffset: selection.extentOffset});
          }
        }
      }
      if (!(editingState != null)) dart.assertFailed();
      return editingState;
    }
    [_createRange](editingState) {
      let firstChild = this.domElement.firstChild;
      let _ = html.document.createRange();
      _.setStart(firstChild, editingState.baseOffset);
      _.setEnd(firstChild, editingState.extentOffset);
      return _;
    }
  };
  (src__engine.TextEditingElement.new = function() {
    this[_enabled] = false;
    this[domElement] = null;
    this[_lastEditingState] = null;
    this[_onChange] = null;
    this[_subscriptions] = JSArrayOfStreamSubscription().of([]);
  }).prototype = src__engine.TextEditingElement.prototype;
  dart.addTypeTests(src__engine.TextEditingElement);
  const domElement = Symbol("TextEditingElement.domElement");
  dart.setMethodSignature(src__engine.TextEditingElement, () => ({
    __proto__: dart.getMethods(src__engine.TextEditingElement.__proto__),
    enable: dart.fnType(dart.void, [src__engine.InputConfiguration], {onChange: dart.fnType(dart.void, [src__engine.EditingState])}),
    disable: dart.fnType(dart.void, []),
    [_initDomElement]: dart.fnType(dart.void, [src__engine.InputConfiguration]),
    [_removeDomElement]: dart.fnType(dart.void, []),
    [_refocus]: dart.fnType(dart.void, []),
    setEditingState: dart.fnType(dart.void, [src__engine.EditingState]),
    [_swapDomElement]: dart.fnType(dart.void, [src__engine.ElementType]),
    [_handleChange]: dart.fnType(dart.void, [html.Event]),
    calculateEditingState: dart.fnType(src__engine.EditingState, []),
    [_createRange]: dart.fnType(html.Range, [src__engine.EditingState])
  }));
  dart.setGetterSignature(src__engine.TextEditingElement, () => ({
    __proto__: dart.getGetters(src__engine.TextEditingElement.__proto__),
    [_elementType]: src__engine.ElementType
  }));
  dart.setFieldSignature(src__engine.TextEditingElement, () => ({
    __proto__: dart.getFields(src__engine.TextEditingElement.__proto__),
    [_enabled]: dart.fieldType(core.bool),
    domElement: dart.fieldType(html.HtmlElement),
    [_lastEditingState]: dart.fieldType(src__engine.EditingState),
    [_onChange]: dart.fieldType(EditingStateTovoid()),
    [_subscriptions]: dart.finalFieldType(ListOfStreamSubscription())
  }));
  const _onDomElementSwap = dart.privateName(src__engine, "_onDomElementSwap");
  src__engine.PersistentTextEditingElement = class PersistentTextEditingElement extends src__engine.TextEditingElement {
    [_initDomElement](inputConfig) {
      if (!(this.domElement != null)) dart.assertFailed();
      if (!dart.test(html.document.body.contains(this.domElement))) dart.assertFailed();
    }
    [_removeDomElement]() {
      this.domElement.blur();
    }
    [_refocus]() {}
    [_swapDomElement](newElementType) {
      super[_swapDomElement](newElementType);
      this[_onDomElementSwap]();
    }
  };
  (src__engine.PersistentTextEditingElement.new = function(domElement, opts) {
    let onDomElementSwap = opts && 'onDomElementSwap' in opts ? opts.onDomElementSwap : null;
    this[_onDomElementSwap] = onDomElementSwap;
    src__engine.PersistentTextEditingElement.__proto__.new.call(this);
    if (!(src__engine._getTypeFromElement(domElement) != null)) dart.assertFailed();
    this.domElement = domElement;
  }).prototype = src__engine.PersistentTextEditingElement.prototype;
  dart.addTypeTests(src__engine.PersistentTextEditingElement);
  dart.setFieldSignature(src__engine.PersistentTextEditingElement, () => ({
    __proto__: dart.getFields(src__engine.PersistentTextEditingElement.__proto__),
    [_onDomElementSwap]: dart.finalFieldType(VoidTovoid())
  }));
  dart.defineLazy(src__engine, {
    /*src__engine.textEditing*/get textEditing() {
      return new src__engine.HybridTextEditing.new();
    }
  });
  const _defaultEditingElement = dart.privateName(src__engine, "_defaultEditingElement");
  const _customEditingElement = dart.privateName(src__engine, "_customEditingElement");
  const _clientId = dart.privateName(src__engine, "_clientId");
  const _isEditing = dart.privateName(src__engine, "_isEditing");
  const _configuration = dart.privateName(src__engine, "_configuration");
  const _stopEditing = dart.privateName(src__engine, "_stopEditing");
  let const$33;
  const _startEditing = dart.privateName(src__engine, "_startEditing");
  const _syncEditingStateToFlutter = dart.privateName(src__engine, "_syncEditingStateToFlutter");
  let const$34;
  src__engine.HybridTextEditing = class HybridTextEditing extends core.Object {
    get editingElement() {
      if (this[_customEditingElement] != null) {
        return this[_customEditingElement];
      }
      return this[_defaultEditingElement];
    }
    useCustomEditableElement(customEditingElement) {
      if (dart.test(this[_isEditing]) && !dart.equals(customEditingElement, this[_customEditingElement])) {
        this[_stopEditing]();
      }
      this[_customEditingElement] = customEditingElement;
    }
    stopUsingCustomEditableElement() {
      this.useCustomEditableElement(null);
    }
    handleTextInput(data) {
      let call = (const$33 || (const$33 = dart.const(new src__engine.JSONMethodCodec.new()))).decodeMethodCall(data);
      switch (call.method) {
        case "TextInput.setClient":
        {
          this[_clientId] = core.int._check(dart.dindex(call.arguments, 0));
          this[_configuration] = MapOfString$dynamic()._check(dart.dindex(call.arguments, 1));
          break;
        }
        case "TextInput.setEditingState":
        {
          this.editingElement.setEditingState(new src__engine.EditingState.fromFlutter(MapOfString$dynamic()._check(call.arguments)));
          break;
        }
        case "TextInput.show":
        {
          if (!dart.test(this[_isEditing])) {
            this[_startEditing]();
          }
          break;
        }
        case "TextInput.clearClient":
        case "TextInput.hide":
        {
          if (dart.test(this[_isEditing])) {
            this[_stopEditing]();
          }
          break;
        }
      }
    }
    [_startEditing]() {
      if (!!dart.test(this[_isEditing])) dart.assertFailed();
      this[_isEditing] = true;
      this.editingElement.enable(new src__engine.InputConfiguration.fromFlutter(this[_configuration]), {onChange: dart.bind(this, _syncEditingStateToFlutter)});
    }
    [_stopEditing]() {
      if (!dart.test(this[_isEditing])) dart.assertFailed();
      this[_isEditing] = false;
      this.editingElement.disable();
    }
    [_syncEditingStateToFlutter](editingState) {
      ui.window.onPlatformMessage("flutter/textinput", (const$34 || (const$34 = dart.const(new src__engine.JSONMethodCodec.new()))).encodeMethodCall(new src__engine.MethodCall.new("TextInputClient.updateEditingState", JSArrayOfObject().of([this[_clientId], editingState.toFlutter()]))), dart.fn(src__engine._emptyCallback, dynamicTovoid()));
    }
  };
  (src__engine.HybridTextEditing.new = function() {
    this[_defaultEditingElement] = new src__engine.TextEditingElement.new();
    this[_customEditingElement] = null;
    this[_clientId] = null;
    this[_isEditing] = false;
    this[_configuration] = null;
    this[_subscriptions] = JSArrayOfStreamSubscription().of([]);
  }).prototype = src__engine.HybridTextEditing.prototype;
  dart.addTypeTests(src__engine.HybridTextEditing);
  dart.setMethodSignature(src__engine.HybridTextEditing, () => ({
    __proto__: dart.getMethods(src__engine.HybridTextEditing.__proto__),
    useCustomEditableElement: dart.fnType(dart.void, [src__engine.TextEditingElement]),
    stopUsingCustomEditableElement: dart.fnType(dart.void, []),
    handleTextInput: dart.fnType(dart.void, [typed_data.ByteData]),
    [_startEditing]: dart.fnType(dart.void, []),
    [_stopEditing]: dart.fnType(dart.void, []),
    [_syncEditingStateToFlutter]: dart.fnType(dart.void, [src__engine.EditingState])
  }));
  dart.setGetterSignature(src__engine.HybridTextEditing, () => ({
    __proto__: dart.getGetters(src__engine.HybridTextEditing.__proto__),
    editingElement: src__engine.TextEditingElement
  }));
  dart.setFieldSignature(src__engine.HybridTextEditing, () => ({
    __proto__: dart.getFields(src__engine.HybridTextEditing.__proto__),
    [_defaultEditingElement]: dart.fieldType(src__engine.TextEditingElement),
    [_customEditingElement]: dart.fieldType(src__engine.TextEditingElement),
    [_clientId]: dart.fieldType(core.int),
    [_isEditing]: dart.fieldType(core.bool),
    [_configuration]: dart.fieldType(MapOfString$dynamic()),
    [_subscriptions]: dart.finalFieldType(ListOfStreamSubscription())
  }));
  src__engine.futurize = function(T, callbacker) {
    let completer = async.Completer$(T).sync();
    let error = callbacker(dart.fn(t => {
      if (t == null) {
        completer.completeError(core.Exception.new("operation failed"));
      } else {
        completer.complete(t);
      }
    }, dart.fnType(core.Null, [T])));
    if (error != null) dart.throw(core.Exception.new(error));
    return completer.future;
  };
  src__engine.matrix4ToCssTransform = function(matrix) {
    return src__engine.float64ListToCssTransform(matrix.storage);
  };
  src__engine.isIdentityFloat64ListTransform = function(matrix) {
    if (!(matrix[$length] === 16)) dart.assertFailed();
    let m = matrix;
    return m[$_get](0) === 1.0 && m[$_get](1) === 0.0 && m[$_get](2) === 0.0 && m[$_get](3) === 0.0 && m[$_get](4) === 0.0 && m[$_get](5) === 1.0 && m[$_get](6) === 0.0 && m[$_get](7) === 0.0 && m[$_get](8) === 0.0 && m[$_get](9) === 0.0 && m[$_get](10) === 1.0 && m[$_get](11) === 0.0 && m[$_get](12) === 0.0 && m[$_get](13) === 0.0 && m[$_get](14) === 0.0 && m[$_get](15) === 1.0;
  };
  src__engine.float64ListToCssTransform = function(matrix) {
    if (!(matrix[$length] === 16)) dart.assertFailed();
    let m = matrix;
    if (m[$_get](0) === 1.0 && m[$_get](1) === 0.0 && m[$_get](2) === 0.0 && m[$_get](3) === 0.0 && m[$_get](4) === 0.0 && m[$_get](5) === 1.0 && m[$_get](6) === 0.0 && m[$_get](7) === 0.0 && m[$_get](8) === 0.0 && m[$_get](9) === 0.0 && m[$_get](10) === 1.0 && m[$_get](11) === 0.0 && m[$_get](14) === 0.0 && m[$_get](15) === 1.0) {
      let tx = m[$_get](12);
      let ty = m[$_get](13);
      return "translate(" + dart.str(tx) + "px, " + dart.str(ty) + "px)";
    } else {
      return "matrix3d(" + dart.str(m[$_get](0)) + "," + dart.str(m[$_get](1)) + "," + dart.str(m[$_get](2)) + "," + dart.str(m[$_get](3)) + "," + dart.str(m[$_get](4)) + "," + dart.str(m[$_get](5)) + "," + dart.str(m[$_get](6)) + "," + dart.str(m[$_get](7)) + "," + dart.str(m[$_get](8)) + "," + dart.str(m[$_get](9)) + "," + dart.str(m[$_get](10)) + "," + dart.str(m[$_get](11)) + "," + dart.str(m[$_get](12)) + "," + dart.str(m[$_get](13)) + "," + dart.str(m[$_get](14)) + "," + dart.str(m[$_get](15)) + ")";
    }
  };
  dart.copyProperties(src__engine, {
    get assertionsEnabled() {
      let k = false;
      if (!(k = true)) dart.assertFailed();
      return k;
    }
  });
  src__engine.localClipRectToGlobalClip = function(opts) {
    let localClip = opts && 'localClip' in opts ? opts.localClip : null;
    let transform = opts && 'transform' in opts ? opts.transform : null;
    return src__engine.localClipToGlobalClip({localLeft: localClip.left, localTop: localClip.top, localRight: localClip.right, localBottom: localClip.bottom, transform: transform});
  };
  src__engine.localClipToGlobalClip = function(opts) {
    let localLeft = opts && 'localLeft' in opts ? opts.localLeft : null;
    let localTop = opts && 'localTop' in opts ? opts.localTop : null;
    let localRight = opts && 'localRight' in opts ? opts.localRight : null;
    let localBottom = opts && 'localBottom' in opts ? opts.localBottom : null;
    let transform = opts && 'transform' in opts ? opts.transform : null;
    if (!(localLeft != null)) dart.assertFailed();
    if (!(localTop != null)) dart.assertFailed();
    if (!(localRight != null)) dart.assertFailed();
    if (!(localBottom != null)) dart.assertFailed();
    let pointData = typed_data.Float64List.new(16);
    pointData[$_set](0, localLeft);
    pointData[$_set](4, localTop);
    pointData[$_set](12, 1);
    pointData[$_set](1, localRight);
    pointData[$_set](5, localTop);
    pointData[$_set](13, 1);
    pointData[$_set](2, localLeft);
    pointData[$_set](6, localBottom);
    pointData[$_set](14, 1);
    pointData[$_set](3, localRight);
    pointData[$_set](7, localBottom);
    pointData[$_set](15, 1);
    let pointMatrix = new src__engine.Matrix4.fromFloat64List(pointData);
    pointMatrix.multiplyTranspose(transform);
    return new ui.Rect.fromLTRB(math.min(core.double, math.min(core.double, math.min(core.double, pointData[$_get](0), pointData[$_get](1)), pointData[$_get](2)), pointData[$_get](3)), math.min(core.double, math.min(core.double, math.min(core.double, pointData[$_get](4), pointData[$_get](5)), pointData[$_get](6)), pointData[$_get](7)), math.max(core.double, math.max(core.double, math.max(core.double, pointData[$_get](0), pointData[$_get](1)), pointData[$_get](2)), pointData[$_get](3)), math.max(core.double, math.max(core.double, math.max(core.double, pointData[$_get](4), pointData[$_get](5)), pointData[$_get](6)), pointData[$_get](7)));
  };
  src__engine.rectContainsOther = function(rect, other) {
    return dart.notNull(rect.left) <= dart.notNull(other.left) && dart.notNull(rect.top) <= dart.notNull(other.top) && dart.notNull(rect.right) >= dart.notNull(other.right) && dart.notNull(rect.bottom) >= dart.notNull(other.bottom);
  };
  src__engine.rectIsValid = function(rect) {
    if (!(rect != null)) dart.assertFailed("Rect argument was null.");
    if (!!(rect.left[$isNaN] || rect.right[$isNaN] || rect.top[$isNaN] || rect.bottom[$isNaN])) dart.assertFailed("Rect argument contained a NaN value.");
    return true;
  };
  src__engine.rrectIsValid = function(rrect) {
    if (!(rrect != null)) dart.assertFailed("RRect argument was null.");
    if (!!(rrect.left[$isNaN] || rrect.right[$isNaN] || rrect.top[$isNaN] || rrect.bottom[$isNaN])) dart.assertFailed("RRect argument contained a NaN value.");
    return true;
  };
  src__engine.offsetIsValid = function(offset) {
    if (!(offset != null)) dart.assertFailed("Offset argument was null.");
    if (!(!offset.dx[$isNaN] && !offset.dy[$isNaN])) dart.assertFailed("Offset argument contained a NaN value.");
    return true;
  };
  src__engine.matrix4IsValid = function(matrix4) {
    if (!(matrix4 != null)) dart.assertFailed("Matrix4 argument was null.");
    if (!(matrix4[$length] === 16)) dart.assertFailed("Matrix4 must have 16 entries.");
    return true;
  };
  src__engine.radiusIsValid = function(radius) {
    if (!(radius != null)) dart.assertFailed("Radius argument was null.");
    if (!(!radius.x[$isNaN] && !radius.y[$isNaN])) dart.assertFailed("Radius argument contained a NaN value.");
    return true;
  };
  const _m4storage = dart.privateName(src__engine, "_m4storage");
  const _v3storage = dart.privateName(src__engine, "_v3storage");
  src__engine.Matrix4 = class Matrix4 extends core.Object {
    get storage() {
      return this[_m4storage];
    }
    static tryInvert(other) {
      let r = new src__engine.Matrix4.zero();
      let determinant = r.copyInverse(other);
      if (determinant === 0.0) {
        return null;
      }
      return r;
    }
    index(row, col) {
      return dart.notNull(col) * 4 + dart.notNull(row);
    }
    entry(row, col) {
      if (!(dart.notNull(row) >= 0 && dart.notNull(row) < dart.notNull(this.dimension))) dart.assertFailed();
      if (!(dart.notNull(col) >= 0 && dart.notNull(col) < dart.notNull(this.dimension))) dart.assertFailed();
      return this[_m4storage][$_get](this.index(row, col));
    }
    setEntry(row, col, v) {
      if (!(dart.notNull(row) >= 0 && dart.notNull(row) < dart.notNull(this.dimension))) dart.assertFailed();
      if (!(dart.notNull(col) >= 0 && dart.notNull(col) < dart.notNull(this.dimension))) dart.assertFailed();
      this[_m4storage][$_set](this.index(row, col), v);
    }
    static new(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15) {
      let _ = new src__engine.Matrix4.zero();
      _.setValues(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15);
      return _;
    }
    static fromList(values) {
      let _ = new src__engine.Matrix4.zero();
      _.setValues(values[$_get](0), values[$_get](1), values[$_get](2), values[$_get](3), values[$_get](4), values[$_get](5), values[$_get](6), values[$_get](7), values[$_get](8), values[$_get](9), values[$_get](10), values[$_get](11), values[$_get](12), values[$_get](13), values[$_get](14), values[$_get](15));
      return _;
    }
    static identity() {
      let _ = new src__engine.Matrix4.zero();
      _.setIdentity();
      return _;
    }
    static copy(other) {
      let _ = new src__engine.Matrix4.zero();
      _.setFrom(other);
      return _;
    }
    static inverted(other) {
      let r = new src__engine.Matrix4.zero();
      let determinant = r.copyInverse(other);
      if (determinant === 0.0) {
        dart.throw(new core.ArgumentError.value(other, "other", "Matrix cannot be inverted"));
      }
      return r;
    }
    static rotationX(radians) {
      let _ = new src__engine.Matrix4.zero();
      _[_m4storage][$_set](15, 1.0);
      _.setRotationX(radians);
      return _;
    }
    static rotationY(radians) {
      let _ = new src__engine.Matrix4.zero();
      _[_m4storage][$_set](15, 1.0);
      _.setRotationY(radians);
      return _;
    }
    static rotationZ(radians) {
      let _ = new src__engine.Matrix4.zero();
      _[_m4storage][$_set](15, 1.0);
      _.setRotationZ(radians);
      return _;
    }
    static translation(translation) {
      let _ = new src__engine.Matrix4.zero();
      _.setIdentity();
      _.setTranslation(translation);
      return _;
    }
    static translationValues(x, y, z) {
      let _ = new src__engine.Matrix4.zero();
      _.setIdentity();
      _.setTranslationRaw(x, y, z);
      return _;
    }
    static diagonal3Values(x, y, z) {
      let _ = new src__engine.Matrix4.zero();
      _[_m4storage][$_set](15, 1.0);
      _[_m4storage][$_set](10, z);
      _[_m4storage][$_set](5, y);
      _[_m4storage][$_set](0, x);
      return _;
    }
    setValues(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15) {
      this[_m4storage][$_set](15, arg15);
      this[_m4storage][$_set](14, arg14);
      this[_m4storage][$_set](13, arg13);
      this[_m4storage][$_set](12, arg12);
      this[_m4storage][$_set](11, arg11);
      this[_m4storage][$_set](10, arg10);
      this[_m4storage][$_set](9, arg9);
      this[_m4storage][$_set](8, arg8);
      this[_m4storage][$_set](7, arg7);
      this[_m4storage][$_set](6, arg6);
      this[_m4storage][$_set](5, arg5);
      this[_m4storage][$_set](4, arg4);
      this[_m4storage][$_set](3, arg3);
      this[_m4storage][$_set](2, arg2);
      this[_m4storage][$_set](1, arg1);
      this[_m4storage][$_set](0, arg0);
    }
    setFrom(arg) {
      let argStorage = arg[_m4storage];
      this[_m4storage][$_set](15, argStorage[$_get](15));
      this[_m4storage][$_set](14, argStorage[$_get](14));
      this[_m4storage][$_set](13, argStorage[$_get](13));
      this[_m4storage][$_set](12, argStorage[$_get](12));
      this[_m4storage][$_set](11, argStorage[$_get](11));
      this[_m4storage][$_set](10, argStorage[$_get](10));
      this[_m4storage][$_set](9, argStorage[$_get](9));
      this[_m4storage][$_set](8, argStorage[$_get](8));
      this[_m4storage][$_set](7, argStorage[$_get](7));
      this[_m4storage][$_set](6, argStorage[$_get](6));
      this[_m4storage][$_set](5, argStorage[$_get](5));
      this[_m4storage][$_set](4, argStorage[$_get](4));
      this[_m4storage][$_set](3, argStorage[$_get](3));
      this[_m4storage][$_set](2, argStorage[$_get](2));
      this[_m4storage][$_set](1, argStorage[$_get](1));
      this[_m4storage][$_set](0, argStorage[$_get](0));
    }
    get dimension() {
      return 4;
    }
    _get(i) {
      return this[_m4storage][$_get](i);
    }
    _set(i, v) {
      this[_m4storage][$_set](i, v);
      return v;
    }
    clone() {
      return src__engine.Matrix4.copy(this);
    }
    copyInto(arg) {
      let argStorage = arg[_m4storage];
      argStorage[$_set](0, this[_m4storage][$_get](0));
      argStorage[$_set](1, this[_m4storage][$_get](1));
      argStorage[$_set](2, this[_m4storage][$_get](2));
      argStorage[$_set](3, this[_m4storage][$_get](3));
      argStorage[$_set](4, this[_m4storage][$_get](4));
      argStorage[$_set](5, this[_m4storage][$_get](5));
      argStorage[$_set](6, this[_m4storage][$_get](6));
      argStorage[$_set](7, this[_m4storage][$_get](7));
      argStorage[$_set](8, this[_m4storage][$_get](8));
      argStorage[$_set](9, this[_m4storage][$_get](9));
      argStorage[$_set](10, this[_m4storage][$_get](10));
      argStorage[$_set](11, this[_m4storage][$_get](11));
      argStorage[$_set](12, this[_m4storage][$_get](12));
      argStorage[$_set](13, this[_m4storage][$_get](13));
      argStorage[$_set](14, this[_m4storage][$_get](14));
      argStorage[$_set](15, this[_m4storage][$_get](15));
      return arg;
    }
    translate(x, y, z) {
      if (y === void 0) y = 0.0;
      if (z === void 0) z = 0.0;
      let tx = null;
      let ty = null;
      let tz = null;
      let tw = 1.0;
      if (src__engine.Vector3.is(x)) {
        tx = x.x;
        ty = x.y;
        tz = x.z;
      } else if (typeof x == 'number') {
        tx = x;
        ty = y;
        tz = z;
      }
      let t1 = dart.notNull(this[_m4storage][$_get](0)) * dart.notNull(tx) + dart.notNull(this[_m4storage][$_get](4)) * dart.notNull(ty) + dart.notNull(this[_m4storage][$_get](8)) * dart.notNull(tz) + dart.notNull(this[_m4storage][$_get](12)) * tw;
      let t2 = dart.notNull(this[_m4storage][$_get](1)) * dart.notNull(tx) + dart.notNull(this[_m4storage][$_get](5)) * dart.notNull(ty) + dart.notNull(this[_m4storage][$_get](9)) * dart.notNull(tz) + dart.notNull(this[_m4storage][$_get](13)) * tw;
      let t3 = dart.notNull(this[_m4storage][$_get](2)) * dart.notNull(tx) + dart.notNull(this[_m4storage][$_get](6)) * dart.notNull(ty) + dart.notNull(this[_m4storage][$_get](10)) * dart.notNull(tz) + dart.notNull(this[_m4storage][$_get](14)) * tw;
      let t4 = dart.notNull(this[_m4storage][$_get](3)) * dart.notNull(tx) + dart.notNull(this[_m4storage][$_get](7)) * dart.notNull(ty) + dart.notNull(this[_m4storage][$_get](11)) * dart.notNull(tz) + dart.notNull(this[_m4storage][$_get](15)) * tw;
      this[_m4storage][$_set](12, t1);
      this[_m4storage][$_set](13, t2);
      this[_m4storage][$_set](14, t3);
      this[_m4storage][$_set](15, t4);
    }
    scale(x, y, z) {
      if (y === void 0) y = null;
      if (z === void 0) z = null;
      let sx = null;
      let sy = null;
      let sz = null;
      let sw = 1.0;
      if (src__engine.Vector3.is(x)) {
        sx = x.x;
        sy = x.y;
        sz = x.z;
      } else if (typeof x == 'number') {
        sx = x;
        sy = y != null ? y : x;
        sz = z != null ? z : x;
      }
      let i = 0;
      this[_m4storage][$_set](i, dart.notNull(this[_m4storage][$_get](i)) * dart.notNull(sx));
      let i$ = 1;
      this[_m4storage][$_set](i$, dart.notNull(this[_m4storage][$_get](i$)) * dart.notNull(sx));
      let i$0 = 2;
      this[_m4storage][$_set](i$0, dart.notNull(this[_m4storage][$_get](i$0)) * dart.notNull(sx));
      let i$1 = 3;
      this[_m4storage][$_set](i$1, dart.notNull(this[_m4storage][$_get](i$1)) * dart.notNull(sx));
      let i$2 = 4;
      this[_m4storage][$_set](i$2, dart.notNull(this[_m4storage][$_get](i$2)) * dart.notNull(sy));
      let i$3 = 5;
      this[_m4storage][$_set](i$3, dart.notNull(this[_m4storage][$_get](i$3)) * dart.notNull(sy));
      let i$4 = 6;
      this[_m4storage][$_set](i$4, dart.notNull(this[_m4storage][$_get](i$4)) * dart.notNull(sy));
      let i$5 = 7;
      this[_m4storage][$_set](i$5, dart.notNull(this[_m4storage][$_get](i$5)) * dart.notNull(sy));
      let i$6 = 8;
      this[_m4storage][$_set](i$6, dart.notNull(this[_m4storage][$_get](i$6)) * dart.notNull(sz));
      let i$7 = 9;
      this[_m4storage][$_set](i$7, dart.notNull(this[_m4storage][$_get](i$7)) * dart.notNull(sz));
      let i$8 = 10;
      this[_m4storage][$_set](i$8, dart.notNull(this[_m4storage][$_get](i$8)) * dart.notNull(sz));
      let i$9 = 11;
      this[_m4storage][$_set](i$9, dart.notNull(this[_m4storage][$_get](i$9)) * dart.notNull(sz));
      let i$10 = 12;
      this[_m4storage][$_set](i$10, dart.notNull(this[_m4storage][$_get](i$10)) * sw);
      let i$11 = 13;
      this[_m4storage][$_set](i$11, dart.notNull(this[_m4storage][$_get](i$11)) * sw);
      let i$12 = 14;
      this[_m4storage][$_set](i$12, dart.notNull(this[_m4storage][$_get](i$12)) * sw);
      let i$13 = 15;
      this[_m4storage][$_set](i$13, dart.notNull(this[_m4storage][$_get](i$13)) * sw);
    }
    scaled(x, y, z) {
      if (y === void 0) y = null;
      if (z === void 0) z = null;
      let _ = this.clone();
      _.scale(x, y, z);
      return _;
    }
    setZero() {
      this[_m4storage][$_set](0, 0.0);
      this[_m4storage][$_set](1, 0.0);
      this[_m4storage][$_set](2, 0.0);
      this[_m4storage][$_set](3, 0.0);
      this[_m4storage][$_set](4, 0.0);
      this[_m4storage][$_set](5, 0.0);
      this[_m4storage][$_set](6, 0.0);
      this[_m4storage][$_set](7, 0.0);
      this[_m4storage][$_set](8, 0.0);
      this[_m4storage][$_set](9, 0.0);
      this[_m4storage][$_set](10, 0.0);
      this[_m4storage][$_set](11, 0.0);
      this[_m4storage][$_set](12, 0.0);
      this[_m4storage][$_set](13, 0.0);
      this[_m4storage][$_set](14, 0.0);
      this[_m4storage][$_set](15, 0.0);
    }
    setIdentity() {
      this[_m4storage][$_set](0, 1.0);
      this[_m4storage][$_set](1, 0.0);
      this[_m4storage][$_set](2, 0.0);
      this[_m4storage][$_set](3, 0.0);
      this[_m4storage][$_set](4, 0.0);
      this[_m4storage][$_set](5, 1.0);
      this[_m4storage][$_set](6, 0.0);
      this[_m4storage][$_set](7, 0.0);
      this[_m4storage][$_set](8, 0.0);
      this[_m4storage][$_set](9, 0.0);
      this[_m4storage][$_set](10, 1.0);
      this[_m4storage][$_set](11, 0.0);
      this[_m4storage][$_set](12, 0.0);
      this[_m4storage][$_set](13, 0.0);
      this[_m4storage][$_set](14, 0.0);
      this[_m4storage][$_set](15, 1.0);
    }
    transposed() {
      let _ = this.clone();
      _.transpose();
      return _;
    }
    transpose() {
      let temp = null;
      temp = this[_m4storage][$_get](4);
      this[_m4storage][$_set](4, this[_m4storage][$_get](1));
      this[_m4storage][$_set](1, temp);
      temp = this[_m4storage][$_get](8);
      this[_m4storage][$_set](8, this[_m4storage][$_get](2));
      this[_m4storage][$_set](2, temp);
      temp = this[_m4storage][$_get](12);
      this[_m4storage][$_set](12, this[_m4storage][$_get](3));
      this[_m4storage][$_set](3, temp);
      temp = this[_m4storage][$_get](9);
      this[_m4storage][$_set](9, this[_m4storage][$_get](6));
      this[_m4storage][$_set](6, temp);
      temp = this[_m4storage][$_get](13);
      this[_m4storage][$_set](13, this[_m4storage][$_get](7));
      this[_m4storage][$_set](7, temp);
      temp = this[_m4storage][$_get](14);
      this[_m4storage][$_set](14, this[_m4storage][$_get](11));
      this[_m4storage][$_set](11, temp);
    }
    determinant() {
      let det2_01_01 = dart.notNull(this[_m4storage][$_get](0)) * dart.notNull(this[_m4storage][$_get](5)) - dart.notNull(this[_m4storage][$_get](1)) * dart.notNull(this[_m4storage][$_get](4));
      let det2_01_02 = dart.notNull(this[_m4storage][$_get](0)) * dart.notNull(this[_m4storage][$_get](6)) - dart.notNull(this[_m4storage][$_get](2)) * dart.notNull(this[_m4storage][$_get](4));
      let det2_01_03 = dart.notNull(this[_m4storage][$_get](0)) * dart.notNull(this[_m4storage][$_get](7)) - dart.notNull(this[_m4storage][$_get](3)) * dart.notNull(this[_m4storage][$_get](4));
      let det2_01_12 = dart.notNull(this[_m4storage][$_get](1)) * dart.notNull(this[_m4storage][$_get](6)) - dart.notNull(this[_m4storage][$_get](2)) * dart.notNull(this[_m4storage][$_get](5));
      let det2_01_13 = dart.notNull(this[_m4storage][$_get](1)) * dart.notNull(this[_m4storage][$_get](7)) - dart.notNull(this[_m4storage][$_get](3)) * dart.notNull(this[_m4storage][$_get](5));
      let det2_01_23 = dart.notNull(this[_m4storage][$_get](2)) * dart.notNull(this[_m4storage][$_get](7)) - dart.notNull(this[_m4storage][$_get](3)) * dart.notNull(this[_m4storage][$_get](6));
      let det3_201_012 = dart.notNull(this[_m4storage][$_get](8)) * det2_01_12 - dart.notNull(this[_m4storage][$_get](9)) * det2_01_02 + dart.notNull(this[_m4storage][$_get](10)) * det2_01_01;
      let det3_201_013 = dart.notNull(this[_m4storage][$_get](8)) * det2_01_13 - dart.notNull(this[_m4storage][$_get](9)) * det2_01_03 + dart.notNull(this[_m4storage][$_get](11)) * det2_01_01;
      let det3_201_023 = dart.notNull(this[_m4storage][$_get](8)) * det2_01_23 - dart.notNull(this[_m4storage][$_get](10)) * det2_01_03 + dart.notNull(this[_m4storage][$_get](11)) * det2_01_02;
      let det3_201_123 = dart.notNull(this[_m4storage][$_get](9)) * det2_01_23 - dart.notNull(this[_m4storage][$_get](10)) * det2_01_13 + dart.notNull(this[_m4storage][$_get](11)) * det2_01_12;
      return -det3_201_123 * dart.notNull(this[_m4storage][$_get](12)) + det3_201_023 * dart.notNull(this[_m4storage][$_get](13)) - det3_201_013 * dart.notNull(this[_m4storage][$_get](14)) + det3_201_012 * dart.notNull(this[_m4storage][$_get](15));
    }
    ['*'](arg) {
      if (typeof arg == 'number') {
        return this.scaled(arg);
      }
      if (src__engine.Vector3.is(arg)) {
        return this.transformed3(arg);
      }
      if (src__engine.Matrix4.is(arg)) {
        return this.multiplied(arg);
      }
      dart.throw(new core.ArgumentError.new(arg));
    }
    perspectiveTransform(arg) {
      let argStorage = arg[_v3storage];
      let x_ = dart.notNull(this[_m4storage][$_get](0)) * dart.notNull(argStorage[$_get](0)) + dart.notNull(this[_m4storage][$_get](4)) * dart.notNull(argStorage[$_get](1)) + dart.notNull(this[_m4storage][$_get](8)) * dart.notNull(argStorage[$_get](2)) + dart.notNull(this[_m4storage][$_get](12));
      let y_ = dart.notNull(this[_m4storage][$_get](1)) * dart.notNull(argStorage[$_get](0)) + dart.notNull(this[_m4storage][$_get](5)) * dart.notNull(argStorage[$_get](1)) + dart.notNull(this[_m4storage][$_get](9)) * dart.notNull(argStorage[$_get](2)) + dart.notNull(this[_m4storage][$_get](13));
      let z_ = dart.notNull(this[_m4storage][$_get](2)) * dart.notNull(argStorage[$_get](0)) + dart.notNull(this[_m4storage][$_get](6)) * dart.notNull(argStorage[$_get](1)) + dart.notNull(this[_m4storage][$_get](10)) * dart.notNull(argStorage[$_get](2)) + dart.notNull(this[_m4storage][$_get](14));
      let w_ = 1.0 / (dart.notNull(this[_m4storage][$_get](3)) * dart.notNull(argStorage[$_get](0)) + dart.notNull(this[_m4storage][$_get](7)) * dart.notNull(argStorage[$_get](1)) + dart.notNull(this[_m4storage][$_get](11)) * dart.notNull(argStorage[$_get](2)) + dart.notNull(this[_m4storage][$_get](15)));
      argStorage[$_set](0, x_ * w_);
      argStorage[$_set](1, y_ * w_);
      argStorage[$_set](2, z_ * w_);
      return arg;
    }
    isIdentity() {
      return this[_m4storage][$_get](0) === 1.0 && this[_m4storage][$_get](1) === 0.0 && this[_m4storage][$_get](2) === 0.0 && this[_m4storage][$_get](3) === 0.0 && this[_m4storage][$_get](4) === 0.0 && this[_m4storage][$_get](5) === 1.0 && this[_m4storage][$_get](6) === 0.0 && this[_m4storage][$_get](7) === 0.0 && this[_m4storage][$_get](8) === 0.0 && this[_m4storage][$_get](9) === 0.0 && this[_m4storage][$_get](10) === 1.0 && this[_m4storage][$_get](11) === 0.0 && this[_m4storage][$_get](12) === 0.0 && this[_m4storage][$_get](13) === 0.0 && this[_m4storage][$_get](14) === 0.0 && this[_m4storage][$_get](15) === 1.0;
    }
    getTranslation() {
      let z = this[_m4storage][$_get](14);
      let y = this[_m4storage][$_get](13);
      let x = this[_m4storage][$_get](12);
      return src__engine.Vector3.new(x, y, z);
    }
    rotate(axis, angle) {
      let len = axis.length;
      let axisStorage = axis[_v3storage];
      let x = dart.notNull(axisStorage[$_get](0)) / dart.notNull(len);
      let y = dart.notNull(axisStorage[$_get](1)) / dart.notNull(len);
      let z = dart.notNull(axisStorage[$_get](2)) / dart.notNull(len);
      let c = math.cos(angle);
      let s = math.sin(angle);
      let C = 1.0 - c;
      let m11 = x * x * C + c;
      let m12 = x * y * C - z * s;
      let m13 = x * z * C + y * s;
      let m21 = y * x * C + z * s;
      let m22 = y * y * C + c;
      let m23 = y * z * C - x * s;
      let m31 = z * x * C - y * s;
      let m32 = z * y * C + x * s;
      let m33 = z * z * C + c;
      let t1 = dart.notNull(this[_m4storage][$_get](0)) * m11 + dart.notNull(this[_m4storage][$_get](4)) * m21 + dart.notNull(this[_m4storage][$_get](8)) * m31;
      let t2 = dart.notNull(this[_m4storage][$_get](1)) * m11 + dart.notNull(this[_m4storage][$_get](5)) * m21 + dart.notNull(this[_m4storage][$_get](9)) * m31;
      let t3 = dart.notNull(this[_m4storage][$_get](2)) * m11 + dart.notNull(this[_m4storage][$_get](6)) * m21 + dart.notNull(this[_m4storage][$_get](10)) * m31;
      let t4 = dart.notNull(this[_m4storage][$_get](3)) * m11 + dart.notNull(this[_m4storage][$_get](7)) * m21 + dart.notNull(this[_m4storage][$_get](11)) * m31;
      let t5 = dart.notNull(this[_m4storage][$_get](0)) * m12 + dart.notNull(this[_m4storage][$_get](4)) * m22 + dart.notNull(this[_m4storage][$_get](8)) * m32;
      let t6 = dart.notNull(this[_m4storage][$_get](1)) * m12 + dart.notNull(this[_m4storage][$_get](5)) * m22 + dart.notNull(this[_m4storage][$_get](9)) * m32;
      let t7 = dart.notNull(this[_m4storage][$_get](2)) * m12 + dart.notNull(this[_m4storage][$_get](6)) * m22 + dart.notNull(this[_m4storage][$_get](10)) * m32;
      let t8 = dart.notNull(this[_m4storage][$_get](3)) * m12 + dart.notNull(this[_m4storage][$_get](7)) * m22 + dart.notNull(this[_m4storage][$_get](11)) * m32;
      let t9 = dart.notNull(this[_m4storage][$_get](0)) * m13 + dart.notNull(this[_m4storage][$_get](4)) * m23 + dart.notNull(this[_m4storage][$_get](8)) * m33;
      let t10 = dart.notNull(this[_m4storage][$_get](1)) * m13 + dart.notNull(this[_m4storage][$_get](5)) * m23 + dart.notNull(this[_m4storage][$_get](9)) * m33;
      let t11 = dart.notNull(this[_m4storage][$_get](2)) * m13 + dart.notNull(this[_m4storage][$_get](6)) * m23 + dart.notNull(this[_m4storage][$_get](10)) * m33;
      let t12 = dart.notNull(this[_m4storage][$_get](3)) * m13 + dart.notNull(this[_m4storage][$_get](7)) * m23 + dart.notNull(this[_m4storage][$_get](11)) * m33;
      this[_m4storage][$_set](0, t1);
      this[_m4storage][$_set](1, t2);
      this[_m4storage][$_set](2, t3);
      this[_m4storage][$_set](3, t4);
      this[_m4storage][$_set](4, t5);
      this[_m4storage][$_set](5, t6);
      this[_m4storage][$_set](6, t7);
      this[_m4storage][$_set](7, t8);
      this[_m4storage][$_set](8, t9);
      this[_m4storage][$_set](9, t10);
      this[_m4storage][$_set](10, t11);
      this[_m4storage][$_set](11, t12);
    }
    rotateZ(angle) {
      let cosAngle = math.cos(angle);
      let sinAngle = math.sin(angle);
      let t1 = dart.notNull(this[_m4storage][$_get](0)) * cosAngle + dart.notNull(this[_m4storage][$_get](4)) * sinAngle;
      let t2 = dart.notNull(this[_m4storage][$_get](1)) * cosAngle + dart.notNull(this[_m4storage][$_get](5)) * sinAngle;
      let t3 = dart.notNull(this[_m4storage][$_get](2)) * cosAngle + dart.notNull(this[_m4storage][$_get](6)) * sinAngle;
      let t4 = dart.notNull(this[_m4storage][$_get](3)) * cosAngle + dart.notNull(this[_m4storage][$_get](7)) * sinAngle;
      let t5 = dart.notNull(this[_m4storage][$_get](0)) * -sinAngle + dart.notNull(this[_m4storage][$_get](4)) * cosAngle;
      let t6 = dart.notNull(this[_m4storage][$_get](1)) * -sinAngle + dart.notNull(this[_m4storage][$_get](5)) * cosAngle;
      let t7 = dart.notNull(this[_m4storage][$_get](2)) * -sinAngle + dart.notNull(this[_m4storage][$_get](6)) * cosAngle;
      let t8 = dart.notNull(this[_m4storage][$_get](3)) * -sinAngle + dart.notNull(this[_m4storage][$_get](7)) * cosAngle;
      this[_m4storage][$_set](0, t1);
      this[_m4storage][$_set](1, t2);
      this[_m4storage][$_set](2, t3);
      this[_m4storage][$_set](3, t4);
      this[_m4storage][$_set](4, t5);
      this[_m4storage][$_set](5, t6);
      this[_m4storage][$_set](6, t7);
      this[_m4storage][$_set](7, t8);
    }
    setTranslation(t) {
      let tStorage = t[_v3storage];
      let z = tStorage[$_get](2);
      let y = tStorage[$_get](1);
      let x = tStorage[$_get](0);
      this[_m4storage][$_set](14, z);
      this[_m4storage][$_set](13, y);
      this[_m4storage][$_set](12, x);
    }
    setTranslationRaw(x, y, z) {
      this[_m4storage][$_set](14, z);
      this[_m4storage][$_set](13, y);
      this[_m4storage][$_set](12, x);
    }
    transposeRotation() {
      let temp = null;
      temp = this[_m4storage][$_get](1);
      this[_m4storage][$_set](1, this[_m4storage][$_get](4));
      this[_m4storage][$_set](4, temp);
      temp = this[_m4storage][$_get](2);
      this[_m4storage][$_set](2, this[_m4storage][$_get](8));
      this[_m4storage][$_set](8, temp);
      temp = this[_m4storage][$_get](4);
      this[_m4storage][$_set](4, this[_m4storage][$_get](1));
      this[_m4storage][$_set](1, temp);
      temp = this[_m4storage][$_get](6);
      this[_m4storage][$_set](6, this[_m4storage][$_get](9));
      this[_m4storage][$_set](9, temp);
      temp = this[_m4storage][$_get](8);
      this[_m4storage][$_set](8, this[_m4storage][$_get](2));
      this[_m4storage][$_set](2, temp);
      temp = this[_m4storage][$_get](9);
      this[_m4storage][$_set](9, this[_m4storage][$_get](6));
      this[_m4storage][$_set](6, temp);
    }
    invert() {
      return this.copyInverse(this);
    }
    copyInverse(arg) {
      let argStorage = arg[_m4storage];
      let a00 = argStorage[$_get](0);
      let a01 = argStorage[$_get](1);
      let a02 = argStorage[$_get](2);
      let a03 = argStorage[$_get](3);
      let a10 = argStorage[$_get](4);
      let a11 = argStorage[$_get](5);
      let a12 = argStorage[$_get](6);
      let a13 = argStorage[$_get](7);
      let a20 = argStorage[$_get](8);
      let a21 = argStorage[$_get](9);
      let a22 = argStorage[$_get](10);
      let a23 = argStorage[$_get](11);
      let a30 = argStorage[$_get](12);
      let a31 = argStorage[$_get](13);
      let a32 = argStorage[$_get](14);
      let a33 = argStorage[$_get](15);
      let b00 = dart.notNull(a00) * dart.notNull(a11) - dart.notNull(a01) * dart.notNull(a10);
      let b01 = dart.notNull(a00) * dart.notNull(a12) - dart.notNull(a02) * dart.notNull(a10);
      let b02 = dart.notNull(a00) * dart.notNull(a13) - dart.notNull(a03) * dart.notNull(a10);
      let b03 = dart.notNull(a01) * dart.notNull(a12) - dart.notNull(a02) * dart.notNull(a11);
      let b04 = dart.notNull(a01) * dart.notNull(a13) - dart.notNull(a03) * dart.notNull(a11);
      let b05 = dart.notNull(a02) * dart.notNull(a13) - dart.notNull(a03) * dart.notNull(a12);
      let b06 = dart.notNull(a20) * dart.notNull(a31) - dart.notNull(a21) * dart.notNull(a30);
      let b07 = dart.notNull(a20) * dart.notNull(a32) - dart.notNull(a22) * dart.notNull(a30);
      let b08 = dart.notNull(a20) * dart.notNull(a33) - dart.notNull(a23) * dart.notNull(a30);
      let b09 = dart.notNull(a21) * dart.notNull(a32) - dart.notNull(a22) * dart.notNull(a31);
      let b10 = dart.notNull(a21) * dart.notNull(a33) - dart.notNull(a23) * dart.notNull(a31);
      let b11 = dart.notNull(a22) * dart.notNull(a33) - dart.notNull(a23) * dart.notNull(a32);
      let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
      if (det === 0.0) {
        this.setFrom(arg);
        return 0.0;
      }
      let invDet = 1.0 / det;
      this[_m4storage][$_set](0, (dart.notNull(a11) * b11 - dart.notNull(a12) * b10 + dart.notNull(a13) * b09) * invDet);
      this[_m4storage][$_set](1, (-dart.notNull(a01) * b11 + dart.notNull(a02) * b10 - dart.notNull(a03) * b09) * invDet);
      this[_m4storage][$_set](2, (dart.notNull(a31) * b05 - dart.notNull(a32) * b04 + dart.notNull(a33) * b03) * invDet);
      this[_m4storage][$_set](3, (-dart.notNull(a21) * b05 + dart.notNull(a22) * b04 - dart.notNull(a23) * b03) * invDet);
      this[_m4storage][$_set](4, (-dart.notNull(a10) * b11 + dart.notNull(a12) * b08 - dart.notNull(a13) * b07) * invDet);
      this[_m4storage][$_set](5, (dart.notNull(a00) * b11 - dart.notNull(a02) * b08 + dart.notNull(a03) * b07) * invDet);
      this[_m4storage][$_set](6, (-dart.notNull(a30) * b05 + dart.notNull(a32) * b02 - dart.notNull(a33) * b01) * invDet);
      this[_m4storage][$_set](7, (dart.notNull(a20) * b05 - dart.notNull(a22) * b02 + dart.notNull(a23) * b01) * invDet);
      this[_m4storage][$_set](8, (dart.notNull(a10) * b10 - dart.notNull(a11) * b08 + dart.notNull(a13) * b06) * invDet);
      this[_m4storage][$_set](9, (-dart.notNull(a00) * b10 + dart.notNull(a01) * b08 - dart.notNull(a03) * b06) * invDet);
      this[_m4storage][$_set](10, (dart.notNull(a30) * b04 - dart.notNull(a31) * b02 + dart.notNull(a33) * b00) * invDet);
      this[_m4storage][$_set](11, (-dart.notNull(a20) * b04 + dart.notNull(a21) * b02 - dart.notNull(a23) * b00) * invDet);
      this[_m4storage][$_set](12, (-dart.notNull(a10) * b09 + dart.notNull(a11) * b07 - dart.notNull(a12) * b06) * invDet);
      this[_m4storage][$_set](13, (dart.notNull(a00) * b09 - dart.notNull(a01) * b07 + dart.notNull(a02) * b06) * invDet);
      this[_m4storage][$_set](14, (-dart.notNull(a30) * b03 + dart.notNull(a31) * b01 - dart.notNull(a32) * b00) * invDet);
      this[_m4storage][$_set](15, (dart.notNull(a20) * b03 - dart.notNull(a21) * b01 + dart.notNull(a22) * b00) * invDet);
      return det;
    }
    invertRotation() {
      let det = this.determinant();
      if (det === 0.0) {
        return 0.0;
      }
      let invDet = 1.0 / dart.notNull(det);
      let ix = null;
      let iy = null;
      let iz = null;
      let jx = null;
      let jy = null;
      let jz = null;
      let kx = null;
      let ky = null;
      let kz = null;
      ix = invDet * (dart.notNull(this[_m4storage][$_get](5)) * dart.notNull(this[_m4storage][$_get](10)) - dart.notNull(this[_m4storage][$_get](6)) * dart.notNull(this[_m4storage][$_get](9)));
      iy = invDet * (dart.notNull(this[_m4storage][$_get](2)) * dart.notNull(this[_m4storage][$_get](9)) - dart.notNull(this[_m4storage][$_get](1)) * dart.notNull(this[_m4storage][$_get](10)));
      iz = invDet * (dart.notNull(this[_m4storage][$_get](1)) * dart.notNull(this[_m4storage][$_get](6)) - dart.notNull(this[_m4storage][$_get](2)) * dart.notNull(this[_m4storage][$_get](5)));
      jx = invDet * (dart.notNull(this[_m4storage][$_get](6)) * dart.notNull(this[_m4storage][$_get](8)) - dart.notNull(this[_m4storage][$_get](4)) * dart.notNull(this[_m4storage][$_get](10)));
      jy = invDet * (dart.notNull(this[_m4storage][$_get](0)) * dart.notNull(this[_m4storage][$_get](10)) - dart.notNull(this[_m4storage][$_get](2)) * dart.notNull(this[_m4storage][$_get](8)));
      jz = invDet * (dart.notNull(this[_m4storage][$_get](2)) * dart.notNull(this[_m4storage][$_get](4)) - dart.notNull(this[_m4storage][$_get](0)) * dart.notNull(this[_m4storage][$_get](6)));
      kx = invDet * (dart.notNull(this[_m4storage][$_get](4)) * dart.notNull(this[_m4storage][$_get](9)) - dart.notNull(this[_m4storage][$_get](5)) * dart.notNull(this[_m4storage][$_get](8)));
      ky = invDet * (dart.notNull(this[_m4storage][$_get](1)) * dart.notNull(this[_m4storage][$_get](8)) - dart.notNull(this[_m4storage][$_get](0)) * dart.notNull(this[_m4storage][$_get](9)));
      kz = invDet * (dart.notNull(this[_m4storage][$_get](0)) * dart.notNull(this[_m4storage][$_get](5)) - dart.notNull(this[_m4storage][$_get](1)) * dart.notNull(this[_m4storage][$_get](4)));
      this[_m4storage][$_set](0, ix);
      this[_m4storage][$_set](1, iy);
      this[_m4storage][$_set](2, iz);
      this[_m4storage][$_set](4, jx);
      this[_m4storage][$_set](5, jy);
      this[_m4storage][$_set](6, jz);
      this[_m4storage][$_set](8, kx);
      this[_m4storage][$_set](9, ky);
      this[_m4storage][$_set](10, kz);
      return det;
    }
    setRotationX(radians) {
      let c = math.cos(radians);
      let s = math.sin(radians);
      this[_m4storage][$_set](0, 1.0);
      this[_m4storage][$_set](1, 0.0);
      this[_m4storage][$_set](2, 0.0);
      this[_m4storage][$_set](4, 0.0);
      this[_m4storage][$_set](5, c);
      this[_m4storage][$_set](6, s);
      this[_m4storage][$_set](8, 0.0);
      this[_m4storage][$_set](9, -s);
      this[_m4storage][$_set](10, c);
      this[_m4storage][$_set](3, 0.0);
      this[_m4storage][$_set](7, 0.0);
      this[_m4storage][$_set](11, 0.0);
    }
    setRotationY(radians) {
      let c = math.cos(radians);
      let s = math.sin(radians);
      this[_m4storage][$_set](0, c);
      this[_m4storage][$_set](1, 0.0);
      this[_m4storage][$_set](2, -s);
      this[_m4storage][$_set](4, 0.0);
      this[_m4storage][$_set](5, 1.0);
      this[_m4storage][$_set](6, 0.0);
      this[_m4storage][$_set](8, s);
      this[_m4storage][$_set](9, 0.0);
      this[_m4storage][$_set](10, c);
      this[_m4storage][$_set](3, 0.0);
      this[_m4storage][$_set](7, 0.0);
      this[_m4storage][$_set](11, 0.0);
    }
    setRotationZ(radians) {
      let c = math.cos(radians);
      let s = math.sin(radians);
      this[_m4storage][$_set](0, c);
      this[_m4storage][$_set](1, s);
      this[_m4storage][$_set](2, 0.0);
      this[_m4storage][$_set](4, -s);
      this[_m4storage][$_set](5, c);
      this[_m4storage][$_set](6, 0.0);
      this[_m4storage][$_set](8, 0.0);
      this[_m4storage][$_set](9, 0.0);
      this[_m4storage][$_set](10, 1.0);
      this[_m4storage][$_set](3, 0.0);
      this[_m4storage][$_set](7, 0.0);
      this[_m4storage][$_set](11, 0.0);
    }
    multiply(arg) {
      let m00 = this[_m4storage][$_get](0);
      let m01 = this[_m4storage][$_get](4);
      let m02 = this[_m4storage][$_get](8);
      let m03 = this[_m4storage][$_get](12);
      let m10 = this[_m4storage][$_get](1);
      let m11 = this[_m4storage][$_get](5);
      let m12 = this[_m4storage][$_get](9);
      let m13 = this[_m4storage][$_get](13);
      let m20 = this[_m4storage][$_get](2);
      let m21 = this[_m4storage][$_get](6);
      let m22 = this[_m4storage][$_get](10);
      let m23 = this[_m4storage][$_get](14);
      let m30 = this[_m4storage][$_get](3);
      let m31 = this[_m4storage][$_get](7);
      let m32 = this[_m4storage][$_get](11);
      let m33 = this[_m4storage][$_get](15);
      let argStorage = arg[_m4storage];
      let n00 = argStorage[$_get](0);
      let n01 = argStorage[$_get](4);
      let n02 = argStorage[$_get](8);
      let n03 = argStorage[$_get](12);
      let n10 = argStorage[$_get](1);
      let n11 = argStorage[$_get](5);
      let n12 = argStorage[$_get](9);
      let n13 = argStorage[$_get](13);
      let n20 = argStorage[$_get](2);
      let n21 = argStorage[$_get](6);
      let n22 = argStorage[$_get](10);
      let n23 = argStorage[$_get](14);
      let n30 = argStorage[$_get](3);
      let n31 = argStorage[$_get](7);
      let n32 = argStorage[$_get](11);
      let n33 = argStorage[$_get](15);
      this[_m4storage][$_set](0, dart.notNull(m00) * dart.notNull(n00) + dart.notNull(m01) * dart.notNull(n10) + dart.notNull(m02) * dart.notNull(n20) + dart.notNull(m03) * dart.notNull(n30));
      this[_m4storage][$_set](4, dart.notNull(m00) * dart.notNull(n01) + dart.notNull(m01) * dart.notNull(n11) + dart.notNull(m02) * dart.notNull(n21) + dart.notNull(m03) * dart.notNull(n31));
      this[_m4storage][$_set](8, dart.notNull(m00) * dart.notNull(n02) + dart.notNull(m01) * dart.notNull(n12) + dart.notNull(m02) * dart.notNull(n22) + dart.notNull(m03) * dart.notNull(n32));
      this[_m4storage][$_set](12, dart.notNull(m00) * dart.notNull(n03) + dart.notNull(m01) * dart.notNull(n13) + dart.notNull(m02) * dart.notNull(n23) + dart.notNull(m03) * dart.notNull(n33));
      this[_m4storage][$_set](1, dart.notNull(m10) * dart.notNull(n00) + dart.notNull(m11) * dart.notNull(n10) + dart.notNull(m12) * dart.notNull(n20) + dart.notNull(m13) * dart.notNull(n30));
      this[_m4storage][$_set](5, dart.notNull(m10) * dart.notNull(n01) + dart.notNull(m11) * dart.notNull(n11) + dart.notNull(m12) * dart.notNull(n21) + dart.notNull(m13) * dart.notNull(n31));
      this[_m4storage][$_set](9, dart.notNull(m10) * dart.notNull(n02) + dart.notNull(m11) * dart.notNull(n12) + dart.notNull(m12) * dart.notNull(n22) + dart.notNull(m13) * dart.notNull(n32));
      this[_m4storage][$_set](13, dart.notNull(m10) * dart.notNull(n03) + dart.notNull(m11) * dart.notNull(n13) + dart.notNull(m12) * dart.notNull(n23) + dart.notNull(m13) * dart.notNull(n33));
      this[_m4storage][$_set](2, dart.notNull(m20) * dart.notNull(n00) + dart.notNull(m21) * dart.notNull(n10) + dart.notNull(m22) * dart.notNull(n20) + dart.notNull(m23) * dart.notNull(n30));
      this[_m4storage][$_set](6, dart.notNull(m20) * dart.notNull(n01) + dart.notNull(m21) * dart.notNull(n11) + dart.notNull(m22) * dart.notNull(n21) + dart.notNull(m23) * dart.notNull(n31));
      this[_m4storage][$_set](10, dart.notNull(m20) * dart.notNull(n02) + dart.notNull(m21) * dart.notNull(n12) + dart.notNull(m22) * dart.notNull(n22) + dart.notNull(m23) * dart.notNull(n32));
      this[_m4storage][$_set](14, dart.notNull(m20) * dart.notNull(n03) + dart.notNull(m21) * dart.notNull(n13) + dart.notNull(m22) * dart.notNull(n23) + dart.notNull(m23) * dart.notNull(n33));
      this[_m4storage][$_set](3, dart.notNull(m30) * dart.notNull(n00) + dart.notNull(m31) * dart.notNull(n10) + dart.notNull(m32) * dart.notNull(n20) + dart.notNull(m33) * dart.notNull(n30));
      this[_m4storage][$_set](7, dart.notNull(m30) * dart.notNull(n01) + dart.notNull(m31) * dart.notNull(n11) + dart.notNull(m32) * dart.notNull(n21) + dart.notNull(m33) * dart.notNull(n31));
      this[_m4storage][$_set](11, dart.notNull(m30) * dart.notNull(n02) + dart.notNull(m31) * dart.notNull(n12) + dart.notNull(m32) * dart.notNull(n22) + dart.notNull(m33) * dart.notNull(n32));
      this[_m4storage][$_set](15, dart.notNull(m30) * dart.notNull(n03) + dart.notNull(m31) * dart.notNull(n13) + dart.notNull(m32) * dart.notNull(n23) + dart.notNull(m33) * dart.notNull(n33));
    }
    multiplied(arg) {
      let _ = this.clone();
      _.multiply(arg);
      return _;
    }
    transposeMultiply(arg) {
      let m00 = this[_m4storage][$_get](0);
      let m01 = this[_m4storage][$_get](1);
      let m02 = this[_m4storage][$_get](2);
      let m03 = this[_m4storage][$_get](3);
      let m10 = this[_m4storage][$_get](4);
      let m11 = this[_m4storage][$_get](5);
      let m12 = this[_m4storage][$_get](6);
      let m13 = this[_m4storage][$_get](7);
      let m20 = this[_m4storage][$_get](8);
      let m21 = this[_m4storage][$_get](9);
      let m22 = this[_m4storage][$_get](10);
      let m23 = this[_m4storage][$_get](11);
      let m30 = this[_m4storage][$_get](12);
      let m31 = this[_m4storage][$_get](13);
      let m32 = this[_m4storage][$_get](14);
      let m33 = this[_m4storage][$_get](15);
      let argStorage = arg[_m4storage];
      this[_m4storage][$_set](0, dart.notNull(m00) * dart.notNull(argStorage[$_get](0)) + dart.notNull(m01) * dart.notNull(argStorage[$_get](1)) + dart.notNull(m02) * dart.notNull(argStorage[$_get](2)) + dart.notNull(m03) * dart.notNull(argStorage[$_get](3)));
      this[_m4storage][$_set](4, dart.notNull(m00) * dart.notNull(argStorage[$_get](4)) + dart.notNull(m01) * dart.notNull(argStorage[$_get](5)) + dart.notNull(m02) * dart.notNull(argStorage[$_get](6)) + dart.notNull(m03) * dart.notNull(argStorage[$_get](7)));
      this[_m4storage][$_set](8, dart.notNull(m00) * dart.notNull(argStorage[$_get](8)) + dart.notNull(m01) * dart.notNull(argStorage[$_get](9)) + dart.notNull(m02) * dart.notNull(argStorage[$_get](10)) + dart.notNull(m03) * dart.notNull(argStorage[$_get](11)));
      this[_m4storage][$_set](12, dart.notNull(m00) * dart.notNull(argStorage[$_get](12)) + dart.notNull(m01) * dart.notNull(argStorage[$_get](13)) + dart.notNull(m02) * dart.notNull(argStorage[$_get](14)) + dart.notNull(m03) * dart.notNull(argStorage[$_get](15)));
      this[_m4storage][$_set](1, dart.notNull(m10) * dart.notNull(argStorage[$_get](0)) + dart.notNull(m11) * dart.notNull(argStorage[$_get](1)) + dart.notNull(m12) * dart.notNull(argStorage[$_get](2)) + dart.notNull(m13) * dart.notNull(argStorage[$_get](3)));
      this[_m4storage][$_set](5, dart.notNull(m10) * dart.notNull(argStorage[$_get](4)) + dart.notNull(m11) * dart.notNull(argStorage[$_get](5)) + dart.notNull(m12) * dart.notNull(argStorage[$_get](6)) + dart.notNull(m13) * dart.notNull(argStorage[$_get](7)));
      this[_m4storage][$_set](9, dart.notNull(m10) * dart.notNull(argStorage[$_get](8)) + dart.notNull(m11) * dart.notNull(argStorage[$_get](9)) + dart.notNull(m12) * dart.notNull(argStorage[$_get](10)) + dart.notNull(m13) * dart.notNull(argStorage[$_get](11)));
      this[_m4storage][$_set](13, dart.notNull(m10) * dart.notNull(argStorage[$_get](12)) + dart.notNull(m11) * dart.notNull(argStorage[$_get](13)) + dart.notNull(m12) * dart.notNull(argStorage[$_get](14)) + dart.notNull(m13) * dart.notNull(argStorage[$_get](15)));
      this[_m4storage][$_set](2, dart.notNull(m20) * dart.notNull(argStorage[$_get](0)) + dart.notNull(m21) * dart.notNull(argStorage[$_get](1)) + dart.notNull(m22) * dart.notNull(argStorage[$_get](2)) + dart.notNull(m23) * dart.notNull(argStorage[$_get](3)));
      this[_m4storage][$_set](6, dart.notNull(m20) * dart.notNull(argStorage[$_get](4)) + dart.notNull(m21) * dart.notNull(argStorage[$_get](5)) + dart.notNull(m22) * dart.notNull(argStorage[$_get](6)) + dart.notNull(m23) * dart.notNull(argStorage[$_get](7)));
      this[_m4storage][$_set](10, dart.notNull(m20) * dart.notNull(argStorage[$_get](8)) + dart.notNull(m21) * dart.notNull(argStorage[$_get](9)) + dart.notNull(m22) * dart.notNull(argStorage[$_get](10)) + dart.notNull(m23) * dart.notNull(argStorage[$_get](11)));
      this[_m4storage][$_set](14, dart.notNull(m20) * dart.notNull(argStorage[$_get](12)) + dart.notNull(m21) * dart.notNull(argStorage[$_get](13)) + dart.notNull(m22) * dart.notNull(argStorage[$_get](14)) + dart.notNull(m23) * dart.notNull(argStorage[$_get](15)));
      this[_m4storage][$_set](3, dart.notNull(m30) * dart.notNull(argStorage[$_get](0)) + dart.notNull(m31) * dart.notNull(argStorage[$_get](1)) + dart.notNull(m32) * dart.notNull(argStorage[$_get](2)) + dart.notNull(m33) * dart.notNull(argStorage[$_get](3)));
      this[_m4storage][$_set](7, dart.notNull(m30) * dart.notNull(argStorage[$_get](4)) + dart.notNull(m31) * dart.notNull(argStorage[$_get](5)) + dart.notNull(m32) * dart.notNull(argStorage[$_get](6)) + dart.notNull(m33) * dart.notNull(argStorage[$_get](7)));
      this[_m4storage][$_set](11, dart.notNull(m30) * dart.notNull(argStorage[$_get](8)) + dart.notNull(m31) * dart.notNull(argStorage[$_get](9)) + dart.notNull(m32) * dart.notNull(argStorage[$_get](10)) + dart.notNull(m33) * dart.notNull(argStorage[$_get](11)));
      this[_m4storage][$_set](15, dart.notNull(m30) * dart.notNull(argStorage[$_get](12)) + dart.notNull(m31) * dart.notNull(argStorage[$_get](13)) + dart.notNull(m32) * dart.notNull(argStorage[$_get](14)) + dart.notNull(m33) * dart.notNull(argStorage[$_get](15)));
    }
    multiplyTranspose(arg) {
      let m00 = this[_m4storage][$_get](0);
      let m01 = this[_m4storage][$_get](4);
      let m02 = this[_m4storage][$_get](8);
      let m03 = this[_m4storage][$_get](12);
      let m10 = this[_m4storage][$_get](1);
      let m11 = this[_m4storage][$_get](5);
      let m12 = this[_m4storage][$_get](9);
      let m13 = this[_m4storage][$_get](13);
      let m20 = this[_m4storage][$_get](2);
      let m21 = this[_m4storage][$_get](6);
      let m22 = this[_m4storage][$_get](10);
      let m23 = this[_m4storage][$_get](14);
      let m30 = this[_m4storage][$_get](3);
      let m31 = this[_m4storage][$_get](7);
      let m32 = this[_m4storage][$_get](11);
      let m33 = this[_m4storage][$_get](15);
      let argStorage = arg[_m4storage];
      this[_m4storage][$_set](0, dart.notNull(m00) * dart.notNull(argStorage[$_get](0)) + dart.notNull(m01) * dart.notNull(argStorage[$_get](4)) + dart.notNull(m02) * dart.notNull(argStorage[$_get](8)) + dart.notNull(m03) * dart.notNull(argStorage[$_get](12)));
      this[_m4storage][$_set](4, dart.notNull(m00) * dart.notNull(argStorage[$_get](1)) + dart.notNull(m01) * dart.notNull(argStorage[$_get](5)) + dart.notNull(m02) * dart.notNull(argStorage[$_get](9)) + dart.notNull(m03) * dart.notNull(argStorage[$_get](13)));
      this[_m4storage][$_set](8, dart.notNull(m00) * dart.notNull(argStorage[$_get](2)) + dart.notNull(m01) * dart.notNull(argStorage[$_get](6)) + dart.notNull(m02) * dart.notNull(argStorage[$_get](10)) + dart.notNull(m03) * dart.notNull(argStorage[$_get](14)));
      this[_m4storage][$_set](12, dart.notNull(m00) * dart.notNull(argStorage[$_get](3)) + dart.notNull(m01) * dart.notNull(argStorage[$_get](7)) + dart.notNull(m02) * dart.notNull(argStorage[$_get](11)) + dart.notNull(m03) * dart.notNull(argStorage[$_get](15)));
      this[_m4storage][$_set](1, dart.notNull(m10) * dart.notNull(argStorage[$_get](0)) + dart.notNull(m11) * dart.notNull(argStorage[$_get](4)) + dart.notNull(m12) * dart.notNull(argStorage[$_get](8)) + dart.notNull(m13) * dart.notNull(argStorage[$_get](12)));
      this[_m4storage][$_set](5, dart.notNull(m10) * dart.notNull(argStorage[$_get](1)) + dart.notNull(m11) * dart.notNull(argStorage[$_get](5)) + dart.notNull(m12) * dart.notNull(argStorage[$_get](9)) + dart.notNull(m13) * dart.notNull(argStorage[$_get](13)));
      this[_m4storage][$_set](9, dart.notNull(m10) * dart.notNull(argStorage[$_get](2)) + dart.notNull(m11) * dart.notNull(argStorage[$_get](6)) + dart.notNull(m12) * dart.notNull(argStorage[$_get](10)) + dart.notNull(m13) * dart.notNull(argStorage[$_get](14)));
      this[_m4storage][$_set](13, dart.notNull(m10) * dart.notNull(argStorage[$_get](3)) + dart.notNull(m11) * dart.notNull(argStorage[$_get](7)) + dart.notNull(m12) * dart.notNull(argStorage[$_get](11)) + dart.notNull(m13) * dart.notNull(argStorage[$_get](15)));
      this[_m4storage][$_set](2, dart.notNull(m20) * dart.notNull(argStorage[$_get](0)) + dart.notNull(m21) * dart.notNull(argStorage[$_get](4)) + dart.notNull(m22) * dart.notNull(argStorage[$_get](8)) + dart.notNull(m23) * dart.notNull(argStorage[$_get](12)));
      this[_m4storage][$_set](6, dart.notNull(m20) * dart.notNull(argStorage[$_get](1)) + dart.notNull(m21) * dart.notNull(argStorage[$_get](5)) + dart.notNull(m22) * dart.notNull(argStorage[$_get](9)) + dart.notNull(m23) * dart.notNull(argStorage[$_get](13)));
      this[_m4storage][$_set](10, dart.notNull(m20) * dart.notNull(argStorage[$_get](2)) + dart.notNull(m21) * dart.notNull(argStorage[$_get](6)) + dart.notNull(m22) * dart.notNull(argStorage[$_get](10)) + dart.notNull(m23) * dart.notNull(argStorage[$_get](14)));
      this[_m4storage][$_set](14, dart.notNull(m20) * dart.notNull(argStorage[$_get](3)) + dart.notNull(m21) * dart.notNull(argStorage[$_get](7)) + dart.notNull(m22) * dart.notNull(argStorage[$_get](11)) + dart.notNull(m23) * dart.notNull(argStorage[$_get](15)));
      this[_m4storage][$_set](3, dart.notNull(m30) * dart.notNull(argStorage[$_get](0)) + dart.notNull(m31) * dart.notNull(argStorage[$_get](4)) + dart.notNull(m32) * dart.notNull(argStorage[$_get](8)) + dart.notNull(m33) * dart.notNull(argStorage[$_get](12)));
      this[_m4storage][$_set](7, dart.notNull(m30) * dart.notNull(argStorage[$_get](1)) + dart.notNull(m31) * dart.notNull(argStorage[$_get](5)) + dart.notNull(m32) * dart.notNull(argStorage[$_get](9)) + dart.notNull(m33) * dart.notNull(argStorage[$_get](13)));
      this[_m4storage][$_set](11, dart.notNull(m30) * dart.notNull(argStorage[$_get](2)) + dart.notNull(m31) * dart.notNull(argStorage[$_get](6)) + dart.notNull(m32) * dart.notNull(argStorage[$_get](10)) + dart.notNull(m33) * dart.notNull(argStorage[$_get](14)));
      this[_m4storage][$_set](15, dart.notNull(m30) * dart.notNull(argStorage[$_get](3)) + dart.notNull(m31) * dart.notNull(argStorage[$_get](7)) + dart.notNull(m32) * dart.notNull(argStorage[$_get](11)) + dart.notNull(m33) * dart.notNull(argStorage[$_get](15)));
    }
    rotate3(arg) {
      let argStorage = arg[_v3storage];
      let x_ = dart.notNull(this[_m4storage][$_get](0)) * dart.notNull(argStorage[$_get](0)) + dart.notNull(this[_m4storage][$_get](4)) * dart.notNull(argStorage[$_get](1)) + dart.notNull(this[_m4storage][$_get](8)) * dart.notNull(argStorage[$_get](2));
      let y_ = dart.notNull(this[_m4storage][$_get](1)) * dart.notNull(argStorage[$_get](0)) + dart.notNull(this[_m4storage][$_get](5)) * dart.notNull(argStorage[$_get](1)) + dart.notNull(this[_m4storage][$_get](9)) * dart.notNull(argStorage[$_get](2));
      let z_ = dart.notNull(this[_m4storage][$_get](2)) * dart.notNull(argStorage[$_get](0)) + dart.notNull(this[_m4storage][$_get](6)) * dart.notNull(argStorage[$_get](1)) + dart.notNull(this[_m4storage][$_get](10)) * dart.notNull(argStorage[$_get](2));
      argStorage[$_set](0, x_);
      argStorage[$_set](1, y_);
      argStorage[$_set](2, z_);
      return arg;
    }
    rotated3(arg, out) {
      if (out === void 0) out = null;
      if (out == null) {
        out = src__engine.Vector3.copy(arg);
      } else {
        out.setFrom(arg);
      }
      return this.rotate3(out);
    }
    transform3(arg) {
      let argStorage = arg[_v3storage];
      let x_ = dart.notNull(this[_m4storage][$_get](0)) * dart.notNull(argStorage[$_get](0)) + dart.notNull(this[_m4storage][$_get](4)) * dart.notNull(argStorage[$_get](1)) + dart.notNull(this[_m4storage][$_get](8)) * dart.notNull(argStorage[$_get](2)) + dart.notNull(this[_m4storage][$_get](12));
      let y_ = dart.notNull(this[_m4storage][$_get](1)) * dart.notNull(argStorage[$_get](0)) + dart.notNull(this[_m4storage][$_get](5)) * dart.notNull(argStorage[$_get](1)) + dart.notNull(this[_m4storage][$_get](9)) * dart.notNull(argStorage[$_get](2)) + dart.notNull(this[_m4storage][$_get](13));
      let z_ = dart.notNull(this[_m4storage][$_get](2)) * dart.notNull(argStorage[$_get](0)) + dart.notNull(this[_m4storage][$_get](6)) * dart.notNull(argStorage[$_get](1)) + dart.notNull(this[_m4storage][$_get](10)) * dart.notNull(argStorage[$_get](2)) + dart.notNull(this[_m4storage][$_get](14));
      argStorage[$_set](0, x_);
      argStorage[$_set](1, y_);
      argStorage[$_set](2, z_);
      return arg;
    }
    transformed3(arg, out) {
      if (out === void 0) out = null;
      if (out == null) {
        out = src__engine.Vector3.copy(arg);
      } else {
        out.setFrom(arg);
      }
      return this.transform3(out);
    }
    copyIntoArray(array, offset) {
      if (offset === void 0) offset = 0;
      let i = offset;
      array[$_set](dart.notNull(i) + 15, this[_m4storage][$_get](15));
      array[$_set](dart.notNull(i) + 14, this[_m4storage][$_get](14));
      array[$_set](dart.notNull(i) + 13, this[_m4storage][$_get](13));
      array[$_set](dart.notNull(i) + 12, this[_m4storage][$_get](12));
      array[$_set](dart.notNull(i) + 11, this[_m4storage][$_get](11));
      array[$_set](dart.notNull(i) + 10, this[_m4storage][$_get](10));
      array[$_set](dart.notNull(i) + 9, this[_m4storage][$_get](9));
      array[$_set](dart.notNull(i) + 8, this[_m4storage][$_get](8));
      array[$_set](dart.notNull(i) + 7, this[_m4storage][$_get](7));
      array[$_set](dart.notNull(i) + 6, this[_m4storage][$_get](6));
      array[$_set](dart.notNull(i) + 5, this[_m4storage][$_get](5));
      array[$_set](dart.notNull(i) + 4, this[_m4storage][$_get](4));
      array[$_set](dart.notNull(i) + 3, this[_m4storage][$_get](3));
      array[$_set](dart.notNull(i) + 2, this[_m4storage][$_get](2));
      array[$_set](dart.notNull(i) + 1, this[_m4storage][$_get](1));
      array[$_set](dart.notNull(i) + 0, this[_m4storage][$_get](0));
    }
    copyFromArray(array, offset) {
      if (offset === void 0) offset = 0;
      let i = offset;
      this[_m4storage][$_set](15, array[$_get](dart.notNull(i) + 15));
      this[_m4storage][$_set](14, array[$_get](dart.notNull(i) + 14));
      this[_m4storage][$_set](13, array[$_get](dart.notNull(i) + 13));
      this[_m4storage][$_set](12, array[$_get](dart.notNull(i) + 12));
      this[_m4storage][$_set](11, array[$_get](dart.notNull(i) + 11));
      this[_m4storage][$_set](10, array[$_get](dart.notNull(i) + 10));
      this[_m4storage][$_set](9, array[$_get](dart.notNull(i) + 9));
      this[_m4storage][$_set](8, array[$_get](dart.notNull(i) + 8));
      this[_m4storage][$_set](7, array[$_get](dart.notNull(i) + 7));
      this[_m4storage][$_set](6, array[$_get](dart.notNull(i) + 6));
      this[_m4storage][$_set](5, array[$_get](dart.notNull(i) + 5));
      this[_m4storage][$_set](4, array[$_get](dart.notNull(i) + 4));
      this[_m4storage][$_set](3, array[$_get](dart.notNull(i) + 3));
      this[_m4storage][$_set](2, array[$_get](dart.notNull(i) + 2));
      this[_m4storage][$_set](1, array[$_get](dart.notNull(i) + 1));
      this[_m4storage][$_set](0, array[$_get](dart.notNull(i) + 0));
    }
  };
  (src__engine.Matrix4.zero = function() {
    this[_m4storage] = typed_data.Float64List.new(16);
  }).prototype = src__engine.Matrix4.prototype;
  (src__engine.Matrix4.fromFloat64List = function(m4storage) {
    this[_m4storage] = m4storage;
  }).prototype = src__engine.Matrix4.prototype;
  (src__engine.Matrix4.fromBuffer = function(buffer, offset) {
    this[_m4storage] = typed_data.Float64List.view(buffer, offset, 16);
  }).prototype = src__engine.Matrix4.prototype;
  dart.addTypeTests(src__engine.Matrix4);
  dart.setMethodSignature(src__engine.Matrix4, () => ({
    __proto__: dart.getMethods(src__engine.Matrix4.__proto__),
    index: dart.fnType(core.int, [core.int, core.int]),
    entry: dart.fnType(core.double, [core.int, core.int]),
    setEntry: dart.fnType(dart.void, [core.int, core.int, core.double]),
    setValues: dart.fnType(dart.void, [core.double, core.double, core.double, core.double, core.double, core.double, core.double, core.double, core.double, core.double, core.double, core.double, core.double, core.double, core.double, core.double]),
    setFrom: dart.fnType(dart.void, [src__engine.Matrix4]),
    _get: dart.fnType(core.double, [core.int]),
    _set: dart.fnType(dart.void, [core.int, core.double]),
    clone: dart.fnType(src__engine.Matrix4, []),
    copyInto: dart.fnType(src__engine.Matrix4, [src__engine.Matrix4]),
    translate: dart.fnType(dart.void, [dart.dynamic], [core.double, core.double]),
    scale: dart.fnType(dart.void, [dart.dynamic], [core.double, core.double]),
    scaled: dart.fnType(src__engine.Matrix4, [dart.dynamic], [core.double, core.double]),
    setZero: dart.fnType(dart.void, []),
    setIdentity: dart.fnType(dart.void, []),
    transposed: dart.fnType(src__engine.Matrix4, []),
    transpose: dart.fnType(dart.void, []),
    determinant: dart.fnType(core.double, []),
    '*': dart.fnType(dart.dynamic, [dart.dynamic]),
    perspectiveTransform: dart.fnType(src__engine.Vector3, [src__engine.Vector3]),
    isIdentity: dart.fnType(core.bool, []),
    getTranslation: dart.fnType(src__engine.Vector3, []),
    rotate: dart.fnType(dart.void, [src__engine.Vector3, core.double]),
    rotateZ: dart.fnType(dart.void, [core.double]),
    setTranslation: dart.fnType(dart.void, [src__engine.Vector3]),
    setTranslationRaw: dart.fnType(dart.void, [core.double, core.double, core.double]),
    transposeRotation: dart.fnType(dart.void, []),
    invert: dart.fnType(core.double, []),
    copyInverse: dart.fnType(core.double, [src__engine.Matrix4]),
    invertRotation: dart.fnType(core.double, []),
    setRotationX: dart.fnType(dart.void, [core.double]),
    setRotationY: dart.fnType(dart.void, [core.double]),
    setRotationZ: dart.fnType(dart.void, [core.double]),
    multiply: dart.fnType(dart.void, [src__engine.Matrix4]),
    multiplied: dart.fnType(src__engine.Matrix4, [src__engine.Matrix4]),
    transposeMultiply: dart.fnType(dart.void, [src__engine.Matrix4]),
    multiplyTranspose: dart.fnType(dart.void, [src__engine.Matrix4]),
    rotate3: dart.fnType(src__engine.Vector3, [src__engine.Vector3]),
    rotated3: dart.fnType(src__engine.Vector3, [src__engine.Vector3], [src__engine.Vector3]),
    transform3: dart.fnType(src__engine.Vector3, [src__engine.Vector3]),
    transformed3: dart.fnType(src__engine.Vector3, [src__engine.Vector3], [src__engine.Vector3]),
    copyIntoArray: dart.fnType(dart.void, [core.List$(core.num)], [core.int]),
    copyFromArray: dart.fnType(dart.void, [core.List$(core.double)], [core.int])
  }));
  dart.setGetterSignature(src__engine.Matrix4, () => ({
    __proto__: dart.getGetters(src__engine.Matrix4.__proto__),
    storage: typed_data.Float64List,
    dimension: core.int
  }));
  dart.setFieldSignature(src__engine.Matrix4, () => ({
    __proto__: dart.getFields(src__engine.Matrix4.__proto__),
    [_m4storage]: dart.finalFieldType(typed_data.Float64List)
  }));
  src__engine.Vector3 = class Vector3 extends core.Object {
    get storage() {
      return this[_v3storage];
    }
    static min(a, b, result) {
      result.x = math.min(core.double, a.x, b.x);
      result.y = math.min(core.double, a.y, b.y);
      result.z = math.min(core.double, a.z, b.z);
    }
    static max(a, b, result) {
      result.x = math.max(core.double, a.x, b.x);
      result.y = math.max(core.double, a.y, b.y);
      result.z = math.max(core.double, a.z, b.z);
    }
    static mix(min, max, a, result) {
      result.x = dart.notNull(min.x) + dart.notNull(a) * (dart.notNull(max.x) - dart.notNull(min.x));
      result.y = dart.notNull(min.y) + dart.notNull(a) * (dart.notNull(max.y) - dart.notNull(min.y));
      result.z = dart.notNull(min.z) + dart.notNull(a) * (dart.notNull(max.z) - dart.notNull(min.z));
    }
    static new(x, y, z) {
      let _ = new src__engine.Vector3.zero();
      _.setValues(x, y, z);
      return _;
    }
    static all(value) {
      let _ = new src__engine.Vector3.zero();
      _.splat(value);
      return _;
    }
    static copy(other) {
      let _ = new src__engine.Vector3.zero();
      _.setFrom(other);
      return _;
    }
    static random(rng) {
      if (rng === void 0) rng = null;
      let t = rng;
      t == null ? rng = math.Random.new() : t;
      return src__engine.Vector3.new(rng.nextDouble(), rng.nextDouble(), rng.nextDouble());
    }
    setValues(x_, y_, z_) {
      this[_v3storage][$_set](0, x_);
      this[_v3storage][$_set](1, y_);
      this[_v3storage][$_set](2, z_);
    }
    setZero() {
      this[_v3storage][$_set](2, 0.0);
      this[_v3storage][$_set](1, 0.0);
      this[_v3storage][$_set](0, 0.0);
    }
    setFrom(other) {
      let otherStorage = other[_v3storage];
      this[_v3storage][$_set](0, otherStorage[$_get](0));
      this[_v3storage][$_set](1, otherStorage[$_get](1));
      this[_v3storage][$_set](2, otherStorage[$_get](2));
    }
    splat(arg) {
      this[_v3storage][$_set](2, arg);
      this[_v3storage][$_set](1, arg);
      this[_v3storage][$_set](0, arg);
    }
    _get(i) {
      return this[_v3storage][$_get](i);
    }
    _set(i, v) {
      this[_v3storage][$_set](i, v);
      return v;
    }
    set length(value) {
      if (value === 0.0) {
        this.setZero();
      } else {
        let l = this.length;
        if (l === 0.0) {
          return;
        }
        l = dart.notNull(value) / dart.notNull(l);
        let i = 0;
        this[_v3storage][$_set](i, dart.notNull(this[_v3storage][$_get](i)) * dart.notNull(l));
        let i$ = 1;
        this[_v3storage][$_set](i$, dart.notNull(this[_v3storage][$_get](i$)) * dart.notNull(l));
        let i$0 = 2;
        this[_v3storage][$_set](i$0, dart.notNull(this[_v3storage][$_get](i$0)) * dart.notNull(l));
      }
    }
    get length() {
      return math.sqrt(this.length2);
    }
    get length2() {
      let sum = null;
      sum = dart.notNull(this[_v3storage][$_get](0)) * dart.notNull(this[_v3storage][$_get](0));
      sum = dart.notNull(sum) + dart.notNull(this[_v3storage][$_get](1)) * dart.notNull(this[_v3storage][$_get](1));
      sum = dart.notNull(sum) + dart.notNull(this[_v3storage][$_get](2)) * dart.notNull(this[_v3storage][$_get](2));
      return sum;
    }
    normalize() {
      let l = this.length;
      if (l === 0.0) {
        return 0.0;
      }
      let d = 1.0 / dart.notNull(l);
      let i = 0;
      this[_v3storage][$_set](i, dart.notNull(this[_v3storage][$_get](i)) * d);
      let i$ = 1;
      this[_v3storage][$_set](i$, dart.notNull(this[_v3storage][$_get](i$)) * d);
      let i$0 = 2;
      this[_v3storage][$_set](i$0, dart.notNull(this[_v3storage][$_get](i$0)) * d);
      return l;
    }
    normalized() {
      let _ = src__engine.Vector3.copy(this);
      _.normalize();
      return _;
    }
    normalizeInto(out) {
      out.setFrom(this);
      out.normalize();
      return out;
    }
    distanceTo(arg) {
      return math.sqrt(this.distanceToSquared(arg));
    }
    distanceToSquared(arg) {
      let argStorage = arg[_v3storage];
      let dx = dart.notNull(this[_v3storage][$_get](0)) - dart.notNull(argStorage[$_get](0));
      let dy = dart.notNull(this[_v3storage][$_get](1)) - dart.notNull(argStorage[$_get](1));
      let dz = dart.notNull(this[_v3storage][$_get](2)) - dart.notNull(argStorage[$_get](2));
      return dx * dx + dy * dy + dz * dz;
    }
    angleTo(other) {
      let otherStorage = other[_v3storage];
      if (this[_v3storage][$_get](0) == otherStorage[$_get](0) && this[_v3storage][$_get](1) == otherStorage[$_get](1) && this[_v3storage][$_get](2) == otherStorage[$_get](2)) {
        return 0.0;
      }
      let d = dart.notNull(this.dot(other)) / (dart.notNull(this.length) * dart.notNull(other.length));
      return math.acos(d[$clamp](-1.0, 1.0));
    }
    dot(other) {
      let otherStorage = other[_v3storage];
      let sum = null;
      sum = dart.notNull(this[_v3storage][$_get](0)) * dart.notNull(otherStorage[$_get](0));
      sum = dart.notNull(sum) + dart.notNull(this[_v3storage][$_get](1)) * dart.notNull(otherStorage[$_get](1));
      sum = dart.notNull(sum) + dart.notNull(this[_v3storage][$_get](2)) * dart.notNull(otherStorage[$_get](2));
      return sum;
    }
    applyProjection(arg) {
      let argStorage = arg.storage;
      let x = this[_v3storage][$_get](0);
      let y = this[_v3storage][$_get](1);
      let z = this[_v3storage][$_get](2);
      let d = 1.0 / (dart.notNull(argStorage[$_get](3)) * dart.notNull(x) + dart.notNull(argStorage[$_get](7)) * dart.notNull(y) + dart.notNull(argStorage[$_get](11)) * dart.notNull(z) + dart.notNull(argStorage[$_get](15)));
      this[_v3storage][$_set](0, (dart.notNull(argStorage[$_get](0)) * dart.notNull(x) + dart.notNull(argStorage[$_get](4)) * dart.notNull(y) + dart.notNull(argStorage[$_get](8)) * dart.notNull(z) + dart.notNull(argStorage[$_get](12))) * d);
      this[_v3storage][$_set](1, (dart.notNull(argStorage[$_get](1)) * dart.notNull(x) + dart.notNull(argStorage[$_get](5)) * dart.notNull(y) + dart.notNull(argStorage[$_get](9)) * dart.notNull(z) + dart.notNull(argStorage[$_get](13))) * d);
      this[_v3storage][$_set](2, (dart.notNull(argStorage[$_get](2)) * dart.notNull(x) + dart.notNull(argStorage[$_get](6)) * dart.notNull(y) + dart.notNull(argStorage[$_get](10)) * dart.notNull(z) + dart.notNull(argStorage[$_get](14))) * d);
    }
    get isInfinite() {
      let is_infinite = false;
      is_infinite = is_infinite || this[_v3storage][$_get](0)[$isInfinite];
      is_infinite = is_infinite || this[_v3storage][$_get](1)[$isInfinite];
      is_infinite = is_infinite || this[_v3storage][$_get](2)[$isInfinite];
      return is_infinite;
    }
    get isNaN() {
      let is_nan = false;
      is_nan = is_nan || this[_v3storage][$_get](0)[$isNaN];
      is_nan = is_nan || this[_v3storage][$_get](1)[$isNaN];
      is_nan = is_nan || this[_v3storage][$_get](2)[$isNaN];
      return is_nan;
    }
    add(arg) {
      let argStorage = arg[_v3storage];
      this[_v3storage][$_set](0, dart.notNull(this[_v3storage][$_get](0)) + dart.notNull(argStorage[$_get](0)));
      this[_v3storage][$_set](1, dart.notNull(this[_v3storage][$_get](1)) + dart.notNull(argStorage[$_get](1)));
      this[_v3storage][$_set](2, dart.notNull(this[_v3storage][$_get](2)) + dart.notNull(argStorage[$_get](2)));
    }
    addScaled(arg, factor) {
      let argStorage = arg[_v3storage];
      this[_v3storage][$_set](0, dart.notNull(this[_v3storage][$_get](0)) + dart.notNull(argStorage[$_get](0)) * dart.notNull(factor));
      this[_v3storage][$_set](1, dart.notNull(this[_v3storage][$_get](1)) + dart.notNull(argStorage[$_get](1)) * dart.notNull(factor));
      this[_v3storage][$_set](2, dart.notNull(this[_v3storage][$_get](2)) + dart.notNull(argStorage[$_get](2)) * dart.notNull(factor));
    }
    sub(arg) {
      let argStorage = arg[_v3storage];
      this[_v3storage][$_set](0, dart.notNull(this[_v3storage][$_get](0)) - dart.notNull(argStorage[$_get](0)));
      this[_v3storage][$_set](1, dart.notNull(this[_v3storage][$_get](1)) - dart.notNull(argStorage[$_get](1)));
      this[_v3storage][$_set](2, dart.notNull(this[_v3storage][$_get](2)) - dart.notNull(argStorage[$_get](2)));
    }
    multiply(arg) {
      let argStorage = arg[_v3storage];
      this[_v3storage][$_set](0, dart.notNull(this[_v3storage][$_get](0)) * dart.notNull(argStorage[$_get](0)));
      this[_v3storage][$_set](1, dart.notNull(this[_v3storage][$_get](1)) * dart.notNull(argStorage[$_get](1)));
      this[_v3storage][$_set](2, dart.notNull(this[_v3storage][$_get](2)) * dart.notNull(argStorage[$_get](2)));
    }
    divide(arg) {
      let argStorage = arg[_v3storage];
      this[_v3storage][$_set](0, dart.notNull(this[_v3storage][$_get](0)) / dart.notNull(argStorage[$_get](0)));
      this[_v3storage][$_set](1, dart.notNull(this[_v3storage][$_get](1)) / dart.notNull(argStorage[$_get](1)));
      this[_v3storage][$_set](2, dart.notNull(this[_v3storage][$_get](2)) / dart.notNull(argStorage[$_get](2)));
    }
    scale(arg) {
      this[_v3storage][$_set](2, dart.notNull(this[_v3storage][$_get](2)) * dart.notNull(arg));
      this[_v3storage][$_set](1, dart.notNull(this[_v3storage][$_get](1)) * dart.notNull(arg));
      this[_v3storage][$_set](0, dart.notNull(this[_v3storage][$_get](0)) * dart.notNull(arg));
    }
    scaled(arg) {
      let _ = this.clone();
      _.scale(arg);
      return _;
    }
    clone() {
      return src__engine.Vector3.copy(this);
    }
    copyInto(arg) {
      let argStorage = arg[_v3storage];
      argStorage[$_set](0, this[_v3storage][$_get](0));
      argStorage[$_set](1, this[_v3storage][$_get](1));
      argStorage[$_set](2, this[_v3storage][$_get](2));
      return arg;
    }
    copyIntoArray(array, offset) {
      if (offset === void 0) offset = 0;
      array[$_set](dart.notNull(offset) + 2, this[_v3storage][$_get](2));
      array[$_set](dart.notNull(offset) + 1, this[_v3storage][$_get](1));
      array[$_set](dart.notNull(offset) + 0, this[_v3storage][$_get](0));
    }
    set x(arg) {
      return this[_v3storage][$_set](0, arg);
    }
    set y(arg) {
      return this[_v3storage][$_set](1, arg);
    }
    set z(arg) {
      return this[_v3storage][$_set](2, arg);
    }
    get x() {
      return this[_v3storage][$_get](0);
    }
    get y() {
      return this[_v3storage][$_get](1);
    }
    get z() {
      return this[_v3storage][$_get](2);
    }
  };
  (src__engine.Vector3.zero = function() {
    this[_v3storage] = typed_data.Float64List.new(3);
  }).prototype = src__engine.Vector3.prototype;
  (src__engine.Vector3.fromFloat64List = function(v3storage) {
    this[_v3storage] = v3storage;
  }).prototype = src__engine.Vector3.prototype;
  (src__engine.Vector3.fromBuffer = function(buffer, offset) {
    this[_v3storage] = typed_data.Float64List.view(buffer, offset, 3);
  }).prototype = src__engine.Vector3.prototype;
  dart.addTypeTests(src__engine.Vector3);
  dart.setMethodSignature(src__engine.Vector3, () => ({
    __proto__: dart.getMethods(src__engine.Vector3.__proto__),
    setValues: dart.fnType(dart.void, [core.double, core.double, core.double]),
    setZero: dart.fnType(dart.void, []),
    setFrom: dart.fnType(dart.void, [src__engine.Vector3]),
    splat: dart.fnType(dart.void, [core.double]),
    _get: dart.fnType(core.double, [core.int]),
    _set: dart.fnType(dart.void, [core.int, core.double]),
    normalize: dart.fnType(core.double, []),
    normalized: dart.fnType(src__engine.Vector3, []),
    normalizeInto: dart.fnType(src__engine.Vector3, [src__engine.Vector3]),
    distanceTo: dart.fnType(core.double, [src__engine.Vector3]),
    distanceToSquared: dart.fnType(core.double, [src__engine.Vector3]),
    angleTo: dart.fnType(core.double, [src__engine.Vector3]),
    dot: dart.fnType(core.double, [src__engine.Vector3]),
    applyProjection: dart.fnType(dart.void, [src__engine.Matrix4]),
    add: dart.fnType(dart.void, [src__engine.Vector3]),
    addScaled: dart.fnType(dart.void, [src__engine.Vector3, core.double]),
    sub: dart.fnType(dart.void, [src__engine.Vector3]),
    multiply: dart.fnType(dart.void, [src__engine.Vector3]),
    divide: dart.fnType(dart.void, [src__engine.Vector3]),
    scale: dart.fnType(dart.void, [core.double]),
    scaled: dart.fnType(src__engine.Vector3, [core.double]),
    clone: dart.fnType(src__engine.Vector3, []),
    copyInto: dart.fnType(src__engine.Vector3, [src__engine.Vector3]),
    copyIntoArray: dart.fnType(dart.void, [core.List$(core.double)], [core.int])
  }));
  dart.setGetterSignature(src__engine.Vector3, () => ({
    __proto__: dart.getGetters(src__engine.Vector3.__proto__),
    storage: typed_data.Float64List,
    length: core.double,
    length2: core.double,
    isInfinite: core.bool,
    isNaN: core.bool,
    x: core.double,
    y: core.double,
    z: core.double
  }));
  dart.setSetterSignature(src__engine.Vector3, () => ({
    __proto__: dart.getSetters(src__engine.Vector3.__proto__),
    length: core.double,
    x: core.double,
    y: core.double,
    z: core.double
  }));
  dart.setFieldSignature(src__engine.Vector3, () => ({
    __proto__: dart.getFields(src__engine.Vector3.__proto__),
    [_v3storage]: dart.finalFieldType(typed_data.Float64List)
  }));
  dart.trackLibraries("packages/flutter_web_ui/ui.ddc", {
    "package:flutter_web_ui/ui.dart": ui,
    "package:flutter_web_ui/src/engine.dart": src__engine
  }, '{"version":3,"sourceRoot":"","sources":["ui.dart","src/ui/canvas.dart","src/engine/engine_canvas.dart","src/engine/bitmap_canvas.dart","src/ui/compositing.dart","src/ui/debug_canvas_reuse_overlay.dart","src/ui/geometry.dart","src/ui/hash_codes.dart","src/ui/initialization.dart","src/ui/lerp.dart","src/ui/natives.dart","src/ui/painting.dart","src/ui/pointer.dart","src/ui/semantics.dart","src/ui/browser_location.dart","src/ui/text.dart","src/ui/window.dart","src/engine.dart","src/engine/alarm_clock.dart","src/engine/assets.dart","src/engine/browser_detection.dart","src/engine/compositor/engine_delegate.dart","src/engine/compositor/runtime_delegate.dart","src/engine/compositor/layer.dart","src/engine/compositor/layer_scene_builder.dart","src/engine/compositor/layer_tree.dart","src/engine/compositor/raster_cache.dart","src/engine/compositor/rasterizer.dart","src/engine/compositor/surface.dart","src/engine/compositor/viewport_metrics.dart","src/engine/compositor/platform_message.dart","src/engine/conic.dart","src/engine/houdini_canvas.dart","src/engine/dom_canvas.dart","src/engine/dom_renderer.dart","src/engine/history.dart","src/engine/html_image_codec.dart","src/engine/keyboard.dart","src/engine/onscreen_logging.dart","src/engine/path_to_svg.dart","src/engine/pointer_binding.dart","src/engine/recording_canvas.dart","src/engine/semantics/semantics.dart","src/engine/semantics/checkable.dart","src/engine/semantics/incrementable.dart","src/engine/semantics/label_and_value.dart","src/engine/semantics/scrollable.dart","src/engine/semantics/tappable.dart","src/engine/semantics/text_field.dart","src/engine/services/message_codec.dart","src/engine/services/message_codecs.dart","src/engine/shadow.dart","src/engine/text/font_collection.dart","src/engine/text/measurement.dart","src/engine/text/ruler.dart","src/engine/text/unicode_range.dart","src/engine/text/word_break_properties.dart","src/engine/text/word_breaker.dart","src/engine/text_editing.dart","src/engine/util.dart","src/engine/validators.dart","src/engine/vector_math.dart"],"names":[],"mappings":"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,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,UAAU,mBACnD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,MAAQ,MAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC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BAAY,QAAQ,mBACjD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,QAAQ,mBACjD,kCAAY,CAAC,OAAQ,OAAQ,wBAAY,OAAO,mBAChD,kCAAY,CAAC,OA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Y,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,OAAS,OAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,SAAS,mBACpD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,OAAO,mBAClD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,wBAAY,QAAQ,mBACnD,kCAAY,CAAC,QAAS,QAAS,w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","file":"ui.ddc.js"}');
  // Exports:
  return {
    ui: ui,
    src__engine: src__engine
  };
});

//# sourceMappingURL=ui.ddc.js.map
